<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\GPRS_OS.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\GPRS_OS.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT3.1 [Build 942]: Last Updated: Sat Dec 05 21:30:38 2009
<BR><P>
<H3>Maximum Stack Usage =       1104 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SeePar &rArr; GetCentrIP
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[c80c88]">Reset_Handler</a>
 <LI><a href="#[c80cd0]">__user_initial_stackheap</a>
 <LI><a href="#[c816b8]">IRQ_Handler</a>
 <LI><a href="#[c81e58]">Timer0_Handler</a>
 <LI><a href="#[c81d80]">Uart0_Handler</a>
 <LI><a href="#[c81d38]">Uart1_Handler</a>
 <LI><a href="#[c81cf0]">Uart2_Handler</a>
 <LI><a href="#[c81ca8]">Uart3_Handler</a>
 <LI><a href="#[c81f30]">CAN_Handler</a>
 <LI><a href="#[c81e10]">Timer1_Handler</a>
 <LI><a href="#[c81dc8]">Timer2_Handler</a>
 <LI><a href="#[c81ee8]">EINT2_Handler</a>
 <LI><a href="#[c80c40]">SoftwareInterrupt</a>
 <LI><a href="#[c815e0]">OSIntCtxSw</a>
 <LI><a href="#[c7edd0]">__OSStartHighRdy</a>
 <LI><a href="#[c80ec8]">Undef_Handler</a>
 <LI><a href="#[c80e80]">PAbt_Handler</a>
 <LI><a href="#[c80e38]">DAbt_Handler</a>
 <LI><a href="#[c80df0]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[c80ec8]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c80ec8]">Undef_Handler</a><BR>
 <LI><a href="#[c80e80]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c80e80]">PAbt_Handler</a><BR>
 <LI><a href="#[c80e38]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c80e38]">DAbt_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10511b8]">Init</a>
 <LI><a href="#[1051098]">Open</a>
 <LI><a href="#[1050fc0]">Close</a>
 <LI><a href="#[1050e10]">Write</a>
 <LI><a href="#[1050ee8]">Read</a>
 <LI><a href="#[18c7020]">Init</a>
 <LI><a href="#[c80c88]">Reset_Handler</a>
 <LI><a href="#[c80ec8]">Undef_Handler</a>
 <LI><a href="#[c80c40]">SoftwareInterrupt</a>
 <LI><a href="#[c80e80]">PAbt_Handler</a>
 <LI><a href="#[c80e38]">DAbt_Handler</a>
 <LI><a href="#[c80df0]">FIQ_Handler</a>
 <LI><a href="#[196ba90]">__main</a>
 <LI><a href="#[1961970]">__ARM_get_argv</a>
 <LI><a href="#[c81ee8]">EINT2_Handler</a>
 <LI><a href="#[c81e10]">Timer1_Handler</a>
 <LI><a href="#[c81dc8]">Timer2_Handler</a>
 <LI><a href="#[c81e58]">Timer0_Handler</a>
 <LI><a href="#[c81d80]">Uart0_Handler</a>
 <LI><a href="#[c81d38]">Uart1_Handler</a>
 <LI><a href="#[c81cf0]">Uart2_Handler</a>
 <LI><a href="#[c81ca8]">Uart3_Handler</a>
 <LI><a href="#[c81f30]">CAN_Handler</a>
 <LI><a href="#[15cfb90]">CE_High</a>
 <LI><a href="#[15cfb48]">CE_Low</a>
 <LI><a href="#[196f598]">main</a>
 <LI><a href="#[19626d8]">__I_use_semihosting</a>
 <LI><a href="#[c815e0]">OSIntCtxSw</a>
 <LI><a href="#[c815e0]">OSIntCtxSw</a>
 <LI><a href="#[c7edd0]">__OSStartHighRdy</a>
 <LI><a href="#[c75638]">nand_calculate_ecc</a>
 <LI><a href="#[c755f0]">nand_correct_data</a>
 <LI><a href="#[c755a8]">Crc</a>
 <LI><a href="#[c75560]">CheckSum</a>
 <LI><a href="#[c75518]">CheckAdd</a>
 <LI><a href="#[c754d0]">Crc1021</a>
 <LI><a href="#[10564c8]">Asc2Bcd</a>
 <LI><a href="#[1056480]">Bcd2Asc</a>
 <LI><a href="#[1056438]">Asc2Algorism</a>
 <LI><a href="#[10563f0]">Algorism2Asc</a>
 <LI><a href="#[1056360]">Asc2HexBuf</a>
 <LI><a href="#[10562d0]">HexBuf2Asc</a>
 <LI><a href="#[1056288]">Asc2Hex</a>
 <LI><a href="#[1056240]">Hex2Asc</a>
 <LI><a href="#[1056120]">Asc2Float</a>
 <LI><a href="#[10565e8]">Bcd2Hex</a>
 <LI><a href="#[1056558]">Hex2Bcd</a>
 <LI><a href="#[10561f8]">JugeAscBcd</a>
 <LI><a href="#[1056168]">JugeAscHex</a>
 <LI><a href="#[10560d8]">JugeAscFloat</a>
 <LI><a href="#[10561b0]">JugeHexBcd</a>
 <LI><a href="#[1056090]">ClsArray</a>
 <LI><a href="#[1056048]">MoveByte</a>
 <LI><a href="#[1056000]">CompareBuf</a>
 <LI><a href="#[1055fb8]">CompareVa</a>
 <LI><a href="#[1055f70]">Strsize</a>
 <LI><a href="#[1055ee0]">Strsize16</a>
 <LI><a href="#[1055f28]">StrATChar</a>
 <LI><a href="#[1055e98]">LookStr</a>
 <LI><a href="#[1055dc0]">LookEnable</a>
 <LI><a href="#[1055e50]">LookStrInLength</a>
 <LI><a href="#[1055e08]">LookStrDown</a>
 <LI><a href="#[1055d78]">LookShowChar</a>
 <LI><a href="#[1055ce8]">SeekStr</a>
 <LI><a href="#[1055ca0]">MemSpace</a>
 <LI><a href="#[1055bc8]">JugeBufType</a>
 <LI><a href="#[1055a60]">PhoPdu</a>
 <LI><a href="#[1055af0]">gsmEncode7bit</a>
 <LI><a href="#[1055aa8]">PduNumber</a>
 <LI><a href="#[1055940]">ExpPdu</a>
 <LI><a href="#[1055a18]">Bit72Bit8</a>
 <LI><a href="#[10558f8]">GetCsq</a>
 <LI><a href="#[1055b38]">StrToUni</a>
 <LI><a href="#[1055988]">UniToStr</a>
 <LI><a href="#[1055c10]">INT322IPAsc</a>
 <LI><a href="#[1055c58]">IPAsc2INT32</a>
 <LI><a href="#[10558b0]">IP2Char</a>
 <LI><a href="#[1055868]">Char2IP</a>
 <LI><a href="#[1055820]">LookBufInLength</a>
 <LI><a href="#[10557d8]">Value32</a>
 <LI><a href="#[1056510]">Algorism2BCD</a>
 <LI><a href="#[10565a0]">BCD2Algorism</a>
 <LI><a href="#[1053260]">Juge</a>
 <LI><a href="#[10530b0]">Next</a>
 <LI><a href="#[1052f48]">Back</a>
 <LI><a href="#[1052f00]">GetWeek</a>
 <LI><a href="#[104ebe8]">Init</a>
 <LI><a href="#[104eb58]">Read</a>
 <LI><a href="#[104eac8]">Write</a>
 <LI><a href="#[104cad8]">Open</a>
 <LI><a href="#[104ca48]">Start</a>
 <LI><a href="#[104ca00]">RwSpi</a>
 <LI><a href="#[104c9b8]">Write</a>
 <LI><a href="#[104c970]">Read</a>
 <LI><a href="#[104c8e0]">JugeByte</a>
 <LI><a href="#[104c928]">JugeBuf</a>
 <LI><a href="#[104c898]">End</a>
 <LI><a href="#[104c850]">Close</a>
 <LI><a href="#[104ac70]">Init</a>
 <LI><a href="#[104aa78]">Open</a>
 <LI><a href="#[104a8c8]">Close</a>
 <LI><a href="#[104a5b0]">Read</a>
 <LI><a href="#[104a400]">Write</a>
 <LI><a href="#[1047dd8]">Init</a>
 <LI><a href="#[1047d90]">Open</a>
 <LI><a href="#[1047d00]">Read</a>
 <LI><a href="#[1047d48]">Close</a>
 <LI><a href="#[1045858]">Init</a>
 <LI><a href="#[1045810]">Open</a>
 <LI><a href="#[1045540]">Read</a>
 <LI><a href="#[10454f8]">Close</a>
 <LI><a href="#[1043038]">Init</a>
 <LI><a href="#[1042ff0]">Read</a>
 <LI><a href="#[1042fa8]">Huawei_CloseShow</a>
 <LI><a href="#[1042f18]">GetChipID</a>
 <LI><a href="#[1042ed0]">Huawei_GetModermState</a>
 <LI><a href="#[1042e88]">Huawei_GetModermCard</a>
 <LI><a href="#[1042df8]">Huawei_GetCenterNumber</a>
 <LI><a href="#[1042db0]">Huawei_GetMessage</a>
 <LI><a href="#[1042d68]">Huawei_SetTxtOrPdu</a>
 <LI><a href="#[1042d20]">Huawei_SeeTxtOrPdu</a>
 <LI><a href="#[1042cd8]">Huawei_MsgSend</a>
 <LI><a href="#[1042c90]">Huawei_MsgSendData</a>
 <LI><a href="#[1042c48]">Huawei_SeeCarrier</a>
 <LI><a href="#[1042c00]">Huawei_SQ</a>
 <LI><a href="#[1042bb8]">Huawei_DelMsg</a>
 <LI><a href="#[1042b70]">Huawei_Set_Mem</a>
 <LI><a href="#[1042b28]">Huawei_MessSet</a>
 <LI><a href="#[1042ae0]">Huawei_Upadate</a>
 <LI><a href="#[1042a98]">Huawei_Reg</a>
 <LI><a href="#[1042a50]">Huawei_CLIP</a>
 <LI><a href="#[1042a08]">Huawei_ATD</a>
 <LI><a href="#[10429c0]">Huawei_Chup</a>
 <LI><a href="#[1042978]">Huawei_ATA</a>
 <LI><a href="#[1042930]">Huawei_IMEI</a>
 <LI><a href="#[10428e8]">Huawei_CGDCONT</a>
 <LI><a href="#[10428a0]">Huawei_Etcpip</a>
 <LI><a href="#[1042858]">Huawei_IOMODE</a>
 <LI><a href="#[1042810]">Huawei_IPOPENX</a>
 <LI><a href="#[10427c8]">Huawei_IPSENDX</a>
 <LI><a href="#[1042780]">Huawei_SeeDataRead</a>
 <LI><a href="#[1042738]">Huawei_IPDR</a>
 <LI><a href="#[10425d0]">Huawei_IPCLOSE</a>
 <LI><a href="#[1042588]">Huawei_LogOnTCPIP</a>
 <LI><a href="#[10426f0]">Huawei_JugeETCPIP</a>
 <LI><a href="#[10426a8]">Huawei_DNSR</a>
 <LI><a href="#[1042660]">Huawei_IPR</a>
 <LI><a href="#[1042618]">Huawei_CLCC</a>
 <LI><a href="#[1042540]">Huawei_SEEIPCLOSE</a>
 <LI><a href="#[10424f8]">Huawei_PowerDown</a>
 <LI><a href="#[10424b0]">Huawei_SeeCGDCONT</a>
 <LI><a href="#[1042468]">Huawei_SendExtension</a>
 <LI><a href="#[1042420]">Huawei_SetVolume</a>
 <LI><a href="#[124f4f8]">Init</a>
 <LI><a href="#[124f228]">PowerUp</a>
 <LI><a href="#[124f1e0]">PowerDown</a>
 <LI><a href="#[124f198]">Read</a>
 <LI><a href="#[124c208]">Init1</a>
 <LI><a href="#[124bf80]">Open1</a>
 <LI><a href="#[124bef0]">Close1</a>
 <LI><a href="#[124bd40]">Read1</a>
 <LI><a href="#[124bcb0]">GetState1</a>
 <LI><a href="#[1248e50]">Init</a>
 <LI><a href="#[1248e08]">Open</a>
 <LI><a href="#[1248dc0]">Close</a>
 <LI><a href="#[1248d30]">Read</a>
 <LI><a href="#[1246230]">Init</a>
 <LI><a href="#[12461e8]">Open</a>
 <LI><a href="#[12461a0]">Close</a>
 <LI><a href="#[1246110]">Read</a>
 <LI><a href="#[1242b78]">Init</a>
 <LI><a href="#[1242b30]">Open</a>
 <LI><a href="#[1242ae8]">Close</a>
 <LI><a href="#[1242aa0]">Read</a>
 <LI><a href="#[1242a58]">GetState</a>
 <LI><a href="#[12429c8]">Get</a>
 <LI><a href="#[1242938]">GetID2Par</a>
 <LI><a href="#[1242980]">GetPar2ID</a>
 <LI><a href="#[1242a10]">GetSi</a>
 <LI><a href="#[12fec20]">Init</a>
 <LI><a href="#[12febd8]">Open</a>
 <LI><a href="#[12feb90]">Close</a>
 <LI><a href="#[12fe7a0]">Read</a>
 <LI><a href="#[12fe758]">GetState</a>
 <LI><a href="#[12fa758]">Host_Answer</a>
 <LI><a href="#[12fa710]">Host_DeliverCentr</a>
 <LI><a href="#[12fa6c8]">Host_SysInfor</a>
 <LI><a href="#[12fa680]">Host_Phone</a>
 <LI><a href="#[12fa638]">Host_InitStart</a>
 <LI><a href="#[12fa5f0]">Host_InitOver</a>
 <LI><a href="#[12fa5a8]">Host_HostSoft</a>
 <LI><a href="#[12fa560]">Host_ConInfor</a>
 <LI><a href="#[12fa4d0]">Host_ParAnswer</a>
 <LI><a href="#[12fa9e0]">Init</a>
 <LI><a href="#[12fa998]">Open</a>
 <LI><a href="#[12fa7e8]">Close</a>
 <LI><a href="#[12fa830]">Read1</a>
 <LI><a href="#[12f67f8]">Init</a>
 <LI><a href="#[12f67b0]">Open</a>
 <LI><a href="#[12f6768]">Close</a>
 <LI><a href="#[12f66d8]">Read</a>
 <LI><a href="#[12f6690]">GetState</a>
 <LI><a href="#[12f33c8]">Init</a>
 <LI><a href="#[12f3380]">Open</a>
 <LI><a href="#[12f3338]">Close</a>
 <LI><a href="#[12f3260]">Read</a>
 <LI><a href="#[12f0108]">Init</a>
 <LI><a href="#[12f00c0]">Open</a>
 <LI><a href="#[12f0078]">Close</a>
 <LI><a href="#[12f0030]">Read</a>
 <LI><a href="#[13ac008]">Init</a>
 <LI><a href="#[13abfc0]">Open</a>
 <LI><a href="#[13abf78]">Close</a>
 <LI><a href="#[13abea0]">Read</a>
 <LI><a href="#[13a9148]">Init</a>
 <LI><a href="#[13a9100]">Open</a>
 <LI><a href="#[13a90b8]">Close</a>
 <LI><a href="#[13a8f98]">Read</a>
 <LI><a href="#[13a6330]">Init</a>
 <LI><a href="#[13a62e8]">Open</a>
 <LI><a href="#[13a62a0]">Close</a>
 <LI><a href="#[13a6210]">Read</a>
 <LI><a href="#[13a3938]">Init</a>
 <LI><a href="#[13a38f0]">Open</a>
 <LI><a href="#[13a38a8]">Close</a>
 <LI><a href="#[13a3860]">Read</a>
 <LI><a href="#[13a0fc8]">Init</a>
 <LI><a href="#[13a0f80]">Open</a>
 <LI><a href="#[13a0f38]">Close</a>
 <LI><a href="#[13a0ef0]">Read</a>
 <LI><a href="#[146d510]">Init</a>
 <LI><a href="#[146d4c8]">Open</a>
 <LI><a href="#[146d480]">Close</a>
 <LI><a href="#[146d3a8]">Read</a>
 <LI><a href="#[146a828]">Init1</a>
 <LI><a href="#[146a5a0]">CreateBin1</a>
 <LI><a href="#[146a510]">CreateRecoder1</a>
 <LI><a href="#[146a318]">Open1</a>
 <LI><a href="#[146a288]">Close1</a>
 <LI><a href="#[146a1f8]">ReadBin1</a>
 <LI><a href="#[146a168]">WriteBin1</a>
 <LI><a href="#[146a090]">ReadRecoder2</a>
 <LI><a href="#[1469f70]">WriteRecoder2</a>
 <LI><a href="#[1469f28]">GetJlNum1</a>
 <LI><a href="#[1469e98]">Seek1</a>
 <LI><a href="#[1469e08]">SeekSize1</a>
 <LI><a href="#[1469dc0]">ReadHeadTail</a>
 <LI><a href="#[1469d78]">ReadPor</a>
 <LI><a href="#[1469d30]">GetPointNum</a>
 <LI><a href="#[14674f8]">Init</a>
 <LI><a href="#[14673d8]">Open</a>
 <LI><a href="#[1467348]">CreateFile</a>
 <LI><a href="#[14672b8]">ReadFile</a>
 <LI><a href="#[1467228]">WriteFile</a>
 <LI><a href="#[1467198]">Close</a>
 <LI><a href="#[1467108]">GetFileProperty</a>
 <LI><a href="#[1467078]">SetFileLength</a>
 <LI><a href="#[1466fe8]">SetFileName</a>
 <LI><a href="#[1466f58]">CleanProperty</a>
 <LI><a href="#[14642d0]">Init</a>
 <LI><a href="#[1464288]">Open</a>
 <LI><a href="#[1464240]">Close</a>
 <LI><a href="#[1460b20]">Init</a>
 <LI><a href="#[1460ad8]">InitSys1</a>
 <LI><a href="#[1460a90]">InitMessage1</a>
 <LI><a href="#[1460a48]">InitPhone1</a>
 <LI><a href="#[1460a00]">InitGprs1</a>
 <LI><a href="#[1460970]">OpenSys1</a>
 <LI><a href="#[14608e0]">OpenMessage1</a>
 <LI><a href="#[1460850]">OpenIP1</a>
 <LI><a href="#[14607c0]">OpenPhone1</a>
 <LI><a href="#[1460778]">CloseSys1</a>
 <LI><a href="#[14606e8]">CloseMessage1</a>
 <LI><a href="#[1460730]">CloseIP1</a>
 <LI><a href="#[14606a0]">ClosePhone1</a>
 <LI><a href="#[14602b0]">ReadMessage1</a>
 <LI><a href="#[1460220]">ReadIP1</a>
 <LI><a href="#[1460190]">ReadPhone1</a>
 <LI><a href="#[1460100]">AgreePhone1</a>
 <LI><a href="#[1460070]">CloseCall1</a>
 <LI><a href="#[145ffe0]">SendMessage1</a>
 <LI><a href="#[145ff98]">SendIP1</a>
 <LI><a href="#[145ff08]">SendPhone1</a>
 <LI><a href="#[145fe78]">SetVolume1</a>
 <LI><a href="#[1460610]">GetSysState1</a>
 <LI><a href="#[1460580]">GetMessageState1</a>
 <LI><a href="#[14604f0]">GetPhoneState1</a>
 <LI><a href="#[1460460]">GetIPState1</a>
 <LI><a href="#[1460340]">DNSRIP1</a>
 <LI><a href="#[14603d0]">GetIpPro1</a>
 <LI><a href="#[145fe30]">GetCurIPState</a>
 <LI><a href="#[14fbc08]">Init</a>
 <LI><a href="#[14fbb78]">Open</a>
 <LI><a href="#[14fbb30]">Close</a>
 <LI><a href="#[14fbae8]">Read</a>
 <LI><a href="#[14fbaa0]">Enable</a>
 <LI><a href="#[14fba58]">DisEnable</a>
 <LI><a href="#[14fba10]">GetEnable</a>
 <LI><a href="#[14fb9c8]">GetPro</a>
 <LI><a href="#[14fb980]">EditPro</a>
 <LI><a href="#[14f87f0]">Init</a>
 <LI><a href="#[14f87a8]">Open</a>
 <LI><a href="#[14f8760]">Close</a>
 <LI><a href="#[14f5600]">Init</a>
 <LI><a href="#[14f55b8]">Open</a>
 <LI><a href="#[14f5570]">Close</a>
 <LI><a href="#[14f5528]">Get</a>
 <LI><a href="#[14f1ea8]">FTP_CtrReceive</a>
 <LI><a href="#[14f1e60]">FTP_DataReceive</a>
 <LI><a href="#[14f1ef0]">Init</a>
 <LI><a href="#[14f1e18]">GetState</a>
 <LI><a href="#[14ee4b8]">Explain_Answer</a>
 <LI><a href="#[14ee470]">Explain_Track</a>
 <LI><a href="#[14ee428]">Explain_SetPar</a>
 <LI><a href="#[14ee3e0]">Explain_AmendMenum</a>
 <LI><a href="#[14ee398]">Explain_LoaderTxt</a>
 <LI><a href="#[14ee350]">Explain_LoaderTxtMenum</a>
 <LI><a href="#[14ee308]">Explain_SetPhone</a>
 <LI><a href="#[14ee2c0]">Explain_CallAnswer</a>
 <LI><a href="#[14ee278]">Explain_UpdateSoftWare</a>
 <LI><a href="#[14ee230]">Explain_LookPar</a>
 <LI><a href="#[14ee1e8]">Explain_Contrl</a>
 <LI><a href="#[14ee1a0]">Explain_ConfineCall</a>
 <LI><a href="#[14ee158]">Explain_ConfigCentrSever</a>
 <LI><a href="#[14ee0c8]">Explain_LookJpg</a>
 <LI><a href="#[14ee080]">Explain_JpgIng</a>
 <LI><a href="#[14ee038]">Explain_SetVidType</a>
 <LI><a href="#[14edff0]">Explain_TabelList</a>
 <LI><a href="#[14edfa8]">Explain_WorkParTimer</a>
 <LI><a href="#[14edf60]">Explain_WorkParSpace</a>
 <LI><a href="#[14edf18]">Explain_LookLog</a>
 <LI><a href="#[14eded0]">Explain_SetWaringTerm</a>
 <LI><a href="#[14ede88]">Explain_SetRound</a>
 <LI><a href="#[14ede40]">Explain_DelRound</a>
 <LI><a href="#[14eddf8]">Explain_SetRectangle</a>
 <LI><a href="#[14eddb0]">Explain_DelRectangle</a>
 <LI><a href="#[14edd68]">Explain_SetPolygon</a>
 <LI><a href="#[14edd20]">Explain_DelPolygon</a>
 <LI><a href="#[14edcd8]">Explain_SetRoadMap</a>
 <LI><a href="#[14edc90]">Explain_DelRoadMap</a>
 <LI><a href="#[14edc48]">Explain_Reduce</a>
 <LI><a href="#[14edc00]">Explain_Driver</a>
 <LI><a href="#[14edbb8]">Explain_Navigation</a>
 <LI><a href="#[14edb70]">Explain_HandTxt</a>
 <LI><a href="#[14edb28]">Explain_HandAttemper</a>
 <LI><a href="#[14edae0]">Explain_AmendForm</a>
 <LI><a href="#[14eda98]">Explain_UpLoaderForm</a>
 <LI><a href="#[14eda50]">Explain_UpLoaderFormSuc</a>
 <LI><a href="#[14eda08]">Explain_UpLoaderFormErro</a>
 <LI><a href="#[14ed9c0]">Explain_UpLoaderCan</a>
 <LI><a href="#[14ee500]">Explain</a>
 <LI><a href="#[15d8ff0]">Explain_GetSeverComPar</a>
 <LI><a href="#[15d8ff0]">Explain_GetSeverComPar</a>
 <LI><a href="#[15d8ff0]">Explain_GetSeverComPar</a>
 <LI><a href="#[15d8ff0]">Explain_GetSeverComPar</a>
 <LI><a href="#[15d8fa8]">Explain_Answer</a>
 <LI><a href="#[15d8ff0]">Explain_GetSeverComPar</a>
 <LI><a href="#[15d8f60]">Explain_Menum</a>
 <LI><a href="#[15d8f18]">Explain_TxtMenum</a>
 <LI><a href="#[15d8ed0]">Explain_LookPar</a>
 <LI><a href="#[15d8e88]">Explain_UpdateSoftWare</a>
 <LI><a href="#[15d8e40]">Explain_Waring</a>
 <LI><a href="#[15d8df8]">Explain_UploaderJpg1</a>
 <LI><a href="#[15d8db0]">Explain_UploaderJpg2</a>
 <LI><a href="#[15d8d68]">Explain_UploaderPar</a>
 <LI><a href="#[15d8b70]">Explain_NoSem</a>
 <LI><a href="#[15d8cd8]">Explain_UpLoaderWarning</a>
 <LI><a href="#[15d8c90]">Explain_OutRoadMap</a>
 <LI><a href="#[15d8c48]">Explain_UpLoaderReduce</a>
 <LI><a href="#[15d8c00]">Explain_UpLoaderDriver</a>
 <LI><a href="#[15d8bb8]">Explain_UpLoaderHandMess</a>
 <LI><a href="#[15d8b70]">Explain_NoSem</a>
 <LI><a href="#[15d8b28]">Explain_UpLoaderFrom</a>
 <LI><a href="#[15d8ae0]">Explain_OverFromErro</a>
 <LI><a href="#[15d8a98]">Explain_PriceData</a>
 <LI><a href="#[15d9038]">Explain</a>
 <LI><a href="#[15d4c30]">Init</a>
 <LI><a href="#[15d4ba0]">Open</a>
 <LI><a href="#[15d4b58]">Close</a>
 <LI><a href="#[15d4b10]">Read</a>
 <LI><a href="#[15d49f0]">Write</a>
 <LI><a href="#[15d49a8]">GetPar2ID</a>
 <LI><a href="#[15d1e20]">Init</a>
 <LI><a href="#[15d1d48]">ReadID</a>
 <LI><a href="#[15d1c70]">LookBad</a>
 <LI><a href="#[15d1c28]">JugeByte</a>
 <LI><a href="#[15d1be0]">JugeBuf</a>
 <LI><a href="#[15d1b98]">Ease</a>
 <LI><a href="#[15d1b50]">FMwrPg</a>
 <LI><a href="#[15d1cb8]">FMrdPg517</a>
 <LI><a href="#[15cfbd8]">Init</a>
 <LI><a href="#[15cfb00]">ReadID</a>
 <LI><a href="#[15cfab8]">JugeByte</a>
 <LI><a href="#[15cfa70]">JugeBuf</a>
 <LI><a href="#[15cf830]">Ease</a>
 <LI><a href="#[15cf7e8]">Write</a>
 <LI><a href="#[15cf7a0]">Read</a>
 <LI><a href="#[15cd4f8]">Open</a>
 <LI><a href="#[15cd588]">FormatFlash</a>
 <LI><a href="#[15cd5d0]">CreatBad</a>
 <LI><a href="#[15cd4b0]">JugeFlash</a>
 <LI><a href="#[15cd468]">WriteFlash</a>
 <LI><a href="#[15cd420]">ReadFlash</a>
 <LI><a href="#[15cd3d8]">EaseFlash</a>
 <LI><a href="#[16ae678]">Open</a>
 <LI><a href="#[16ae5e8]">Read</a>
 <LI><a href="#[16ae4c8]">Write</a>
 <LI><a href="#[16ae480]">Ease</a>
 <LI><a href="#[16a75c0]">ReadFlow</a>
 <LI><a href="#[16a7410]">WriteFlow</a>
 <LI><a href="#[16a7530]">ReadDataFlow</a>
 <LI><a href="#[16a73c8]">GetFlowWaringType</a>
 <LI><a href="#[16a72f0]">GetPhonesSize</a>
 <LI><a href="#[16a72a8]">GetPhoneCut</a>
 <LI><a href="#[16a7260]">WritePhone</a>
 <LI><a href="#[16a7218]">ClearState</a>
 <LI><a href="#[16a71d0]">GetState</a>
 <LI><a href="#[16a7188]">SetState</a>
 <LI><a href="#[16a7338]">AddSpace</a>
 <LI><a href="#[16a7380]">ReadSpace</a>
 <LI><a href="#[16a74e8]">ReadParTable</a>
 <LI><a href="#[16a7140]">GetAreaData</a>
 <LI><a href="#[16a70b0]">AccessAear</a>
 <LI><a href="#[16a7068]">DelAear</a>
 <LI><a href="#[16a22f0]">LogInfor</a>
 <LI><a href="#[16a22a8]">Orientation</a>
 <LI><a href="#[16a22a8]">Orientation</a>
 <LI><a href="#[16a22a8]">Orientation</a>
 <LI><a href="#[16a2260]">Menum</a>
 <LI><a href="#[16a2218]">TxtMenum</a>
 <LI><a href="#[16a21d0]">LookPar</a>
 <LI><a href="#[16a2188]">UpdateSoftWare</a>
 <LI><a href="#[16a2140]">Waring</a>
 <LI><a href="#[16a20f8]">UploaderJpg1</a>
 <LI><a href="#[16a2068]">UploaderJpg2</a>
 <LI><a href="#[16a2020]">UploaderPar</a>
 <LI><a href="#[16a1f48]">UploaderLog</a>
 <LI><a href="#[16a1f00]">UpLoaderWarning</a>
 <LI><a href="#[16a1eb8]">OutRoadMap</a>
 <LI><a href="#[16a1e70]">UpLoaderReduce1</a>
 <LI><a href="#[16a1e28]">UpLoaderDriver</a>
 <LI><a href="#[16a1de0]">UpLoaderHandMess</a>
 <LI><a href="#[16a24a0]">Init</a>
 <LI><a href="#[16a2410]">NoSemSend</a>
 <LI><a href="#[16a23c8]">WriteFlow</a>
 <LI><a href="#[16a2380]">WriteCommand</a>
 <LI><a href="#[16a2338]">Answer</a>
 <LI><a href="#[1753610]">AgreeData</a>
 <LI><a href="#[17535c8]">Orientation</a>
 <LI><a href="#[1753580]">Track</a>
 <LI><a href="#[1753538]">SetPar1</a>
 <LI><a href="#[17534f0]">UnlockWaring</a>
 <LI><a href="#[17534a8]">AmendMenum</a>
 <LI><a href="#[1753460]">LoaderTxt</a>
 <LI><a href="#[1753418]">LoaderTxtMenum</a>
 <LI><a href="#[17533d0]">SetPhone</a>
 <LI><a href="#[1753388]">CallAnswer</a>
 <LI><a href="#[17532b0]">UpdateSoftWare</a>
 <LI><a href="#[1753268]">LookPar</a>
 <LI><a href="#[1753220]">Contrl</a>
 <LI><a href="#[17531d8]">ConfineCall</a>
 <LI><a href="#[1753190]">ConfigCentrSever</a>
 <LI><a href="#[1753148]">Activation</a>
 <LI><a href="#[1753100]">LookJpg</a>
 <LI><a href="#[17530b8]">JpgIng</a>
 <LI><a href="#[1753070]">SetVidType</a>
 <LI><a href="#[1753028]">TabelList</a>
 <LI><a href="#[1752f98]">LookWorkPar</a>
 <LI><a href="#[1752f50]">WorkParTimer</a>
 <LI><a href="#[1752f08]">WorkParSpace</a>
 <LI><a href="#[1752ec0]">LookLog</a>
 <LI><a href="#[1752e78]">SetWaringTerm</a>
 <LI><a href="#[1752e30]">LookWaringTerm</a>
 <LI><a href="#[1752de8]">SetRound</a>
 <LI><a href="#[1752da0]">DelRound</a>
 <LI><a href="#[1752d58]">SetRectangle</a>
 <LI><a href="#[1752d10]">DelRectangle</a>
 <LI><a href="#[1752cc8]">SetPolygon</a>
 <LI><a href="#[1752c80]">DelPolygon</a>
 <LI><a href="#[1752c38]">SetRoadMap</a>
 <LI><a href="#[1752bf0]">DelRoadMap</a>
 <LI><a href="#[1752ba8]">Reduce</a>
 <LI><a href="#[1752b18]">Driver</a>
 <LI><a href="#[1752ad0]">Navigation</a>
 <LI><a href="#[1752a88]">HandTxt</a>
 <LI><a href="#[1752a40]">HandAttemper</a>
 <LI><a href="#[17529f8]">AmendForm</a>
 <LI><a href="#[17529b0]">UpLoaderForm</a>
 <LI><a href="#[1752968]">UpLoaderFormSuc</a>
 <LI><a href="#[1752920]">UpLoaderFormErro</a>
 <LI><a href="#[17528d8]">UpLoaderCan</a>
 <LI><a href="#[174d4c8]">Init</a>
 <LI><a href="#[1748478]">AccOper</a>
 <LI><a href="#[1748430]">OpenGps</a>
 <LI><a href="#[1748430]">OpenGps</a>
 <LI><a href="#[1748430]">OpenGps</a>
 <LI><a href="#[1748430]">OpenGps</a>
 <LI><a href="#[1748430]">OpenGps</a>
 <LI><a href="#[1748430]">OpenGps</a>
 <LI><a href="#[1748430]">OpenGps</a>
 <LI><a href="#[1748430]">OpenGps</a>
 <LI><a href="#[1748430]">OpenGps</a>
 <LI><a href="#[1748430]">OpenGps</a>
 <LI><a href="#[1748430]">OpenGps</a>
 <LI><a href="#[1748430]">OpenGps</a>
 <LI><a href="#[1748430]">OpenGps</a>
 <LI><a href="#[17483e8]">OpenGprs</a>
 <LI><a href="#[17483e8]">OpenGprs</a>
 <LI><a href="#[17483e8]">OpenGprs</a>
 <LI><a href="#[17483e8]">OpenGprs</a>
 <LI><a href="#[17483e8]">OpenGprs</a>
 <LI><a href="#[17483e8]">OpenGprs</a>
 <LI><a href="#[17483e8]">OpenGprs</a>
 <LI><a href="#[17483e8]">OpenGprs</a>
 <LI><a href="#[17483e8]">OpenGprs</a>
 <LI><a href="#[17483e8]">OpenGprs</a>
 <LI><a href="#[17483e8]">OpenGprs</a>
 <LI><a href="#[17483e8]">OpenGprs</a>
 <LI><a href="#[17483e8]">OpenGprs</a>
 <LI><a href="#[17483a0]">CloseGps</a>
 <LI><a href="#[1748358]">CloseGprs</a>
 <LI><a href="#[180c820]">Init</a>
 <LI><a href="#[180c5e0]">GetData</a>
 <LI><a href="#[18075b8]">InitSpace</a>
 <LI><a href="#[18074e0]">GetGps</a>
 <LI><a href="#[1807498]">Space_Track</a>
 <LI><a href="#[1807450]">Space_WorkParSpace</a>
 <LI><a href="#[18038d8]">Juge</a>
 <LI><a href="#[18af058]">Init</a>
 <LI><a href="#[18aa768]">Order_Phone</a>
 <LI><a href="#[18aa6d8]">SeePar</a>
 <LI><a href="#[18aa690]">SetPar</a>
 <LI><a href="#[18aa648]">Log</a>
 <LI><a href="#[18aa600]">Voic</a>
 <LI><a href="#[18aa5b8]">LCDRef</a>
 <LI><a href="#[18aa840]">Init</a>
 <LI><a href="#[18aa7f8]">GetData</a>
 <LI><a href="#[18a5c30]">Init</a>
 <LI><a href="#[18a59f0]">ptFunNewPhone</a>
 <LI><a href="#[18a5ba0]">ptFunHupWork</a>
 <LI><a href="#[18a59a8]">ptFunMostPhone</a>
 <LI><a href="#[18a5b58]">NewMessage</a>
 <LI><a href="#[18a5960]">CloseCall</a>
 <LI><a href="#[18a06d0]">Init</a>
 <LI><a href="#[18ca938]">ClearTimer</a>
 <LI><a href="#[18ca8a8]">ChargeLogin</a>
 <LI><a href="#[18ca860]">ChargeLoadDev</a>
 <LI><a href="#[18cab78]">Init</a>
 <LI><a href="#[18cab30]">OpenGps</a>
 <LI><a href="#[18caae8]">CloseGps</a>
 <LI><a href="#[18ca9c8]">OpenGprs</a>
 <LI><a href="#[18ca980]">CloseGprs</a>
 <LI><a href="#[18caa58]">OpenGprsNo</a>
 <LI><a href="#[18ca8f0]">OpenUart</a>
 <LI><a href="#[10511b8]">Init</a>
 <LI><a href="#[1051098]">Open</a>
 <LI><a href="#[1050fc0]">Close</a>
 <LI><a href="#[1050e10]">Write</a>
 <LI><a href="#[1050ee8]">Read</a>
 <LI><a href="#[18c7020]">Init</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[c80c88]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Stack]<UL><LI>Max Depth = 4 + Unknown Stack Size
<LI>Call Chain = Reset_Handler &rArr; TargetResetInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c82200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetResetInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[196ba90]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __main &rArr; __rt_entry &rArr; __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1968888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[1a1eb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1a1eb60]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[196ba90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1a1eb18]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1968888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1a1ead0]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1a1ede8]"></a>__decompress</STRONG> (ARM, 92 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[1a1eda0]"></a>__decompress1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[1a1e890]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[1964280]"></a>__ARM_argv_veneer</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_init.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[c822d8]"></a>ConfigurePLL</STRONG> (ARM, 304 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c82200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetResetInit
</UL>

<P><STRONG><a name="[c82290]"></a>GPIOResetInit</STRONG> (ARM, 120 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c82200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetResetInit
</UL>

<P><STRONG><a name="[c82248]"></a>init_VIC</STRONG> (ARM, 88 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c82200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetResetInit
</UL>

<P><STRONG><a name="[c82200]"></a>TargetResetInit</STRONG> (ARM, 92 bytes, Stack size 4 bytes, target.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TargetResetInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c82248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_VIC
<LI><a href="#[c82290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOResetInit
<LI><a href="#[c822d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigurePLL
</UL>
<BR>[Called By]<UL><LI><a href="#[c80c88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[c821b8]"></a>Install_IRQ</STRONG> (ARM, 92 bytes, Stack size 8 bytes, target.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Install_IRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[c82008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIC_Setup
</UL>

<P><STRONG><a name="[c82170]"></a>init_port</STRONG> (ARM, 72 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c81fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetInit
</UL>

<P><STRONG><a name="[c82128]"></a>IRQ_Exception</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c816b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>

<P><STRONG><a name="[c820e0]"></a>FIQ_Exception</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c80df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[c82098]"></a>Timer0_Exception</STRONG> (ARM, 36 bytes, Stack size 8 bytes, target.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Timer0_Exception &rArr; OSTimeTick
</UL>
<BR>[Calls]<UL><LI><a href="#[c81ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c81e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Handler
</UL>

<P><STRONG><a name="[c82050]"></a>Timer0Init</STRONG> (ARM, 48 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c81fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetInit
</UL>

<P><STRONG><a name="[c82008]"></a>VIC_Setup</STRONG> (ARM, 156 bytes, Stack size 4 bytes, target.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = VIC_Setup &rArr; Install_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[c821b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Install_IRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[c81fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetInit
</UL>

<P><STRONG><a name="[c81fc0]"></a>TargetInit</STRONG> (ARM, 44 bytes, Stack size 8 bytes, target.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TargetInit &rArr; VIC_Setup &rArr; Install_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[c82008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIC_Setup
<LI><a href="#[c82050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
<LI><a href="#[c82170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_port
<LI><a href="#[c82bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitWTD
<LI><a href="#[196d8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[196f598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c81f78]"></a>WatchDog</STRONG> (ARM, 72 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7f180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
<LI><a href="#[1045618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20WriteBit
<LI><a href="#[1045660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadByte
<LI><a href="#[10456a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadBit
<LI><a href="#[1045738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20Reset
<LI><a href="#[1047d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1050e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write0
<LI><a href="#[1242aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[124f468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom1
<LI><a href="#[12fa908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreeData
<LI><a href="#[12fe830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeOrder
<LI><a href="#[13abee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
<LI><a href="#[13abf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Agree
<LI><a href="#[1460b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[1464318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[14ee500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain
<LI><a href="#[14f1f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[14f5648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[14f5720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeEvent
<LI><a href="#[14f8838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[14f8880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo
<LI><a href="#[14fbc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[14fbce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeEvent
<LI><a href="#[15d4a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
<LI><a href="#[15d4a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSig
<LI><a href="#[15d4c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[15d9038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain
<LI><a href="#[15db718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileData_BackSet
<LI><a href="#[16a24e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[16a2578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemTrack
<LI><a href="#[16a2608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemWorkPar
<LI><a href="#[16a2698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemReduce
<LI><a href="#[16a2728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemJpgData
<LI><a href="#[16a27b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemDriver
<LI><a href="#[16a2968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
<LI><a href="#[16a7410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
<LI><a href="#[16a98d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileData_CheckFile
<LI><a href="#[16ab198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackFacFile
<LI><a href="#[1748478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOper
<LI><a href="#[174d4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1753610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreeData
<LI><a href="#[180c5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
<LI><a href="#[180c820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[18a0718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[18a08c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevPar
<LI><a href="#[18a0910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevParSigle
<LI><a href="#[18aa5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRef
<LI><a href="#[18aa648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log
<LI><a href="#[18aa7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
<LI><a href="#[18af0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[18c7068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[c80cd0]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1968260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c7f498]"></a>OSTaskStkInit</STRONG> (ARM, 232 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskStkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[c7f450]"></a>SWI_Exception</STRONG> (ARM, 336 bytes, Stack size 4 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SWI_Exception
</UL>
<BR>[Called By]<UL><LI><a href="#[c80c40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt
</UL>

<P><STRONG><a name="[c7f408]"></a>OSStartHighRdy</STRONG> (ARM, 16 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSStartHighRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[c7d5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
</UL>

<P><STRONG><a name="[c7f3c0]"></a>OSInitHookBegin</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7f378]"></a>OSInitHookEnd</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7f330]"></a>OSTaskCreateHook</STRONG> (ARM, 8 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[c7f2e8]"></a>OSTaskDelHook</STRONG> (ARM, 8 bytes, Stack size 0 bytes, os_cpu_c.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c77550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[c7f2a0]"></a>OSTaskSwHook</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7edd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__OSStartHighRdy
<LI><a href="#[c815e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntCtxSw
</UL>

<P><STRONG><a name="[c7f258]"></a>OSTaskStatHook</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_cpu_c.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c7d7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[c7f210]"></a>OSTCBInitHook</STRONG> (ARM, 8 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[c7f1c8]"></a>OSTimeTickHook</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c81ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>

<P><STRONG><a name="[c7f180]"></a>OSTaskIdleHook</STRONG> (ARM, 16 bytes, Stack size 8 bytes, os_cpu_c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[c7d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
</UL>

<P><STRONG><a name="[c7d7a8]"></a>OS_TaskStat</STRONG> (ARM, 220 bytes, Stack size 24 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c7f258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStatHook
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[c7d760]"></a>OS_TaskIdle</STRONG> (ARM, 48 bytes, Stack size 8 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7f180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
</UL>

<P><STRONG><a name="[c7d718]"></a>OSInit</STRONG> (ARM, 56 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = OSInit &rArr; OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_QInit
<LI><a href="#[c7d250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemInit
<LI><a href="#[c7d298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
<LI><a href="#[c7e330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitMisc
<LI><a href="#[c7e378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitRdyList
<LI><a href="#[c7e3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTCBList
<LI><a href="#[c7e408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitEventList
<LI><a href="#[c7e450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[c7e498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[c7f378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookEnd
<LI><a href="#[c7f3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookBegin
</UL>
<BR>[Called By]<UL><LI><a href="#[196f598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c7d6d0]"></a>OSIntEnter</STRONG> (ARM, 56 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)

<P><STRONG><a name="[c81598]"></a>OSIntExit</STRONG> (ARM, 240 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSIntExit
</UL>
<BR>[Called By]<UL><LI><a href="#[c816b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
<LI><a href="#[c81ca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3_Handler
<LI><a href="#[c81cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Handler
<LI><a href="#[c81d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Handler
<LI><a href="#[c81d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_Handler
<LI><a href="#[c81dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Handler
<LI><a href="#[c81e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Handler
<LI><a href="#[c81e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Handler
<LI><a href="#[c81ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_Handler
<LI><a href="#[c81f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Handler
</UL>

<P><STRONG><a name="[c7d688]"></a>OSSchedLock</STRONG> (ARM, 72 bytes, Stack size 8 bytes, os_core.o(.text), UNUSED)

<P><STRONG><a name="[c7d640]"></a>OS_Sched</STRONG> (ARM, 168 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[c767c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyResume
<LI><a href="#[c77430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[c774c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[c77550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c775e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskChangePrio
<LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[c78e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[c78ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[c78f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[c78f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[c78ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[c7b610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPostOpt
<LI><a href="#[c7b658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[c7b6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[c7b6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
<LI><a href="#[c7c358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[c7c3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[c7c3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
<LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[c7d5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
</UL>

<P><STRONG><a name="[c7d5f8]"></a>OSSchedUnlock</STRONG> (ARM, 124 bytes, Stack size 8 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c7d5b0]"></a>OSStart</STRONG> (ARM, 132 bytes, Stack size 16 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OSStart &rArr; OSStartHighRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c7f408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[196f598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c7d568]"></a>OSStatInit</STRONG> (ARM, 84 bytes, Stack size 8 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>

<P><STRONG><a name="[c81ea0]"></a>OSTimeTick</STRONG> (ARM, 212 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTimeTick
</UL>
<BR>[Calls]<UL><LI><a href="#[c7f1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
</UL>
<BR>[Called By]<UL><LI><a href="#[c82098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Exception
</UL>

<P><STRONG><a name="[c7d520]"></a>OSVersion</STRONG> (ARM, 8 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)

<P><STRONG><a name="[c7d4d8]"></a>OS_Dummy</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c77550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[c7d490]"></a>OS_EventTaskRdy</STRONG> (ARM, 188 bytes, Stack size 24 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[c78e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[c78ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[c78f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[c78ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[c7b610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPostOpt
<LI><a href="#[c7b658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[c7b6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
</UL>

<P><STRONG><a name="[c7d448]"></a>OS_EventTaskWait</STRONG> (ARM, 188 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c78f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[c7b6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>

<P><STRONG><a name="[c7d400]"></a>OS_EventTO</STRONG> (ARM, 116 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c78f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[c7b6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>

<P><STRONG><a name="[c7d3b8]"></a>OS_EventWaitListInit</STRONG> (ARM, 28 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[c79040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>

<P><STRONG><a name="[c7d370]"></a>OS_TCBInit</STRONG> (ARM, 336 bytes, Stack size 40 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c7f210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTCBInitHook
<LI><a href="#[c7f330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
</UL>
<BR>[Called By]<UL><LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[c7c4c0]"></a>OSFlagAccept</STRONG> (ARM, 440 bytes, Stack size 32 bytes, os_flag.o(.text), UNUSED)

<P><STRONG><a name="[c7c478]"></a>OSFlagCreate</STRONG> (ARM, 144 bytes, Stack size 16 bytes, os_flag.o(.text), UNUSED)

<P><STRONG><a name="[c7c430]"></a>OS_FlagUnlink</STRONG> (ARM, 84 bytes, Stack size 4 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c77550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[c7c3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[c7c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
</UL>

<P><STRONG><a name="[c7c3e8]"></a>OSFlagDel</STRONG> (ARM, 344 bytes, Stack size 24 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c7c3a0]"></a>OSFlagPend</STRONG> (ARM, 816 bytes, Stack size 64 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7c430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
<LI><a href="#[c7c8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagBlock
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c7c358]"></a>OSFlagPost</STRONG> (ARM, 496 bytes, Stack size 40 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c7c310]"></a>OSFlagQuery</STRONG> (ARM, 96 bytes, Stack size 16 bytes, os_flag.o(.text), UNUSED)

<P><STRONG><a name="[c7d298]"></a>OS_FlagInit</STRONG> (ARM, 76 bytes, Stack size 0 bytes, os_flag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7b778]"></a>OSMboxAccept</STRONG> (ARM, 76 bytes, Stack size 16 bytes, os_mbox.o(.text), UNUSED)

<P><STRONG><a name="[c7b730]"></a>OSMboxCreate</STRONG> (ARM, 128 bytes, Stack size 16 bytes, os_mbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSMboxCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[104ac70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[10511b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[14f1ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[16a24a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[16a7260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePhone
<LI><a href="#[18a06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[18cab78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[c7b6e8]"></a>OSMboxDel</STRONG> (ARM, 344 bytes, Stack size 24 bytes, os_mbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OSMboxDel &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[16a7260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePhone
</UL>

<P><STRONG><a name="[c7b6a0]"></a>OSMboxPend</STRONG> (ARM, 316 bytes, Stack size 24 bytes, os_mbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OSMboxPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTO
<LI><a href="#[c7d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[14f1f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[14f2178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeFtpAsk
<LI><a href="#[16a24e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[16a7260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePhone
<LI><a href="#[18a0718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[18ca9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenGprs
<LI><a href="#[18caa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>

<P><STRONG><a name="[c7b658]"></a>OSMboxPost</STRONG> (ARM, 156 bytes, Stack size 16 bytes, os_mbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[14f1ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTP_CtrReceive
<LI><a href="#[14f8838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[16a2380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[16a23c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
<LI><a href="#[16a2410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend
<LI><a href="#[18a0718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[18c7068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[18ca980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGprs
<LI><a href="#[18ca9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenGprs
</UL>

<P><STRONG><a name="[c7b610]"></a>OSMboxPostOpt</STRONG> (ARM, 204 bytes, Stack size 16 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c7b5c8]"></a>OSMboxQuery</STRONG> (ARM, 116 bytes, Stack size 24 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14f1f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>

<P><STRONG><a name="[c7ab18]"></a>OSMemCreate</STRONG> (ARM, 252 bytes, Stack size 40 bytes, os_mem.o(.text), UNUSED)

<P><STRONG><a name="[c7aad0]"></a>OSMemGet</STRONG> (ARM, 120 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)

<P><STRONG><a name="[c7aa88]"></a>OSMemPut</STRONG> (ARM, 116 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)

<P><STRONG><a name="[c7aa40]"></a>OSMemQuery</STRONG> (ARM, 120 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)

<P><STRONG><a name="[c7d250]"></a>OS_MemInit</STRONG> (ARM, 112 bytes, Stack size 0 bytes, os_mem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c79088]"></a>OSQAccept</STRONG> (ARM, 140 bytes, Stack size 16 bytes, os_q.o(.text), UNUSED)

<P><STRONG><a name="[c79040]"></a>OSQCreate</STRONG> (ARM, 240 bytes, Stack size 24 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OSQCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[14f1ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[14f87f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[18c7020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[c78ff8]"></a>OSQDel</STRONG> (ARM, 392 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c78fb0]"></a>OSQFlush</STRONG> (ARM, 92 bytes, Stack size 16 bytes, os_q.o(.text), UNUSED)

<P><STRONG><a name="[c78f68]"></a>OSQPend</STRONG> (ARM, 364 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTO
<LI><a href="#[c7d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[14f1f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[14f2298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearQ
<LI><a href="#[14f8838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[18c7068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[c78f20]"></a>OSQPost</STRONG> (ARM, 216 bytes, Stack size 16 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OSQPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[14f1e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTP_DataReceive
<LI><a href="#[14f1f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[16a7260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePhone
<LI><a href="#[17532b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSoftWare
<LI><a href="#[18c7068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[c78ed8]"></a>OSQPostFront</STRONG> (ARM, 220 bytes, Stack size 16 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c78e90]"></a>OSQPostOpt</STRONG> (ARM, 320 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c78e48]"></a>OSQQuery</STRONG> (ARM, 164 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14f2298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearQ
</UL>

<P><STRONG><a name="[c7d208]"></a>OS_QInit</STRONG> (ARM, 68 bytes, Stack size 0 bytes, os_q.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c78300]"></a>OSSemAccept</STRONG> (ARM, 88 bytes, Stack size 16 bytes, os_sem.o(.text), UNUSED)

<P><STRONG><a name="[c782b8]"></a>OSSemCreate</STRONG> (ARM, 128 bytes, Stack size 16 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1045858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1047dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[104ac70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[104cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[104ebe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[10511b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1242b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1246230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1248e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[124c250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12f0108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12f33c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12f67f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12fa9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12fec20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[13a0fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[13a3938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[13a6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[13a9148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[13ac008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1460b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[14642d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[14674f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[146a828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init1
<LI><a href="#[146d510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[14f5600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[14fbc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[15d4c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[16a24a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[c78270]"></a>OSSemDel</STRONG> (ARM, 344 bytes, Stack size 24 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c78228]"></a>OSSemPend</STRONG> (ARM, 272 bytes, Stack size 16 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTO
<LI><a href="#[c7d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[10454f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1045540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1045810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1047d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1047d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1047d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[104aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open0
<LI><a href="#[104ab08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[104ab50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open2
<LI><a href="#[104ab98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open3
<LI><a href="#[104abe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open4
<LI><a href="#[104ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[104ca48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start
<LI><a href="#[104eac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
<LI><a href="#[104eb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[10510e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open0
<LI><a href="#[1051128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[1051170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[1242938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetID2Par
<LI><a href="#[1242980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPar2ID
<LI><a href="#[12429c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get
<LI><a href="#[1242a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSi
<LI><a href="#[1242a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState
<LI><a href="#[1242aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1242ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1242b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1246110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12461a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12461e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1248d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1248dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1248e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[124bcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState1
<LI><a href="#[124bd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
<LI><a href="#[124bef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[124bf80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[12f0030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12f0078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12f00c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12f3260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12f3338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12f3380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12f66d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12f6768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12f67b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12fa7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12fa830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
<LI><a href="#[12fa998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12fe758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState
<LI><a href="#[12fe7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12feb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12febd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[13a0ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[13a0f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[13a0f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[13a3860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[13a38a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[13a38f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[13a6210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[13a62a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[13a62e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[13a8f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[13a90b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[13a9100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[13abea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[13abf78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[13abfc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[145fde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeIPData
<LI><a href="#[145fe30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurIPState
<LI><a href="#[145fe78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVolume1
<LI><a href="#[145ff08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPhone1
<LI><a href="#[145ff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendIP1
<LI><a href="#[145ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage1
<LI><a href="#[1460070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseCall1
<LI><a href="#[1460100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreePhone1
<LI><a href="#[1460190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPhone1
<LI><a href="#[1460220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadIP1
<LI><a href="#[14602b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMessage1
<LI><a href="#[1460340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSRIP1
<LI><a href="#[14603d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIpPro1
<LI><a href="#[1460460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIPState1
<LI><a href="#[14604f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneState1
<LI><a href="#[1460580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageState1
<LI><a href="#[1460610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysState1
<LI><a href="#[14606a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClosePhone1
<LI><a href="#[14606e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMessage1
<LI><a href="#[1460730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseIP1
<LI><a href="#[1460778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys1
<LI><a href="#[14607c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenPhone1
<LI><a href="#[1460850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenIP1
<LI><a href="#[14608e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessage1
<LI><a href="#[1460970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSys1
<LI><a href="#[1460a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGprs1
<LI><a href="#[1460a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhone1
<LI><a href="#[1460a90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMessage1
<LI><a href="#[1460ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSys1
<LI><a href="#[1460b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[1460bf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperIPData
<LI><a href="#[1461030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperMessage
<LI><a href="#[1461078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperPhone
<LI><a href="#[1464240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1464288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1464318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[1466f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanProperty
<LI><a href="#[1466fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFileName
<LI><a href="#[1467078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFileLength
<LI><a href="#[1467108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileProperty
<LI><a href="#[1467198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1467228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFile
<LI><a href="#[14672b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFile
<LI><a href="#[1467348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFile
<LI><a href="#[14673d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1469d78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPor
<LI><a href="#[1469dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadHeadTail
<LI><a href="#[1469e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekSize1
<LI><a href="#[1469e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek1
<LI><a href="#[1469f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJlNum1
<LI><a href="#[1469f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder2
<LI><a href="#[146a090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder2
<LI><a href="#[146a168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBin1
<LI><a href="#[146a1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBin1
<LI><a href="#[146a288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[146a318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[146a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder1
<LI><a href="#[146a5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin1
<LI><a href="#[146d3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[146d480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[146d4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[14f5528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get
<LI><a href="#[14f5570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[14f55b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[14f5648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[14f5720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeEvent
<LI><a href="#[14fb980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditPro
<LI><a href="#[14fb9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPro
<LI><a href="#[14fba10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEnable
<LI><a href="#[14fba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisEnable
<LI><a href="#[14fbaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable
<LI><a href="#[14fbae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[14fbb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[14fbb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[14fbce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeEvent
<LI><a href="#[15d49a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPar2ID
<LI><a href="#[15d49f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
<LI><a href="#[15d4b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[15d4b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[15d4ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[15d4c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[16a2338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Answer
<LI><a href="#[16a2380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[16a23c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
<LI><a href="#[16a2410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend
</UL>

<P><STRONG><a name="[c781e0]"></a>OSSemPost</STRONG> (ARM, 152 bytes, Stack size 8 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[c81280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Exception
<LI><a href="#[c812c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Exception
<LI><a href="#[c81310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Exception
<LI><a href="#[c81358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Exception
<LI><a href="#[c81670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Exception
<LI><a href="#[10454f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1045540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1045810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1047d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1047d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1047d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[104a910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close0
<LI><a href="#[104a958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[104a9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close2
<LI><a href="#[104a9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close3
<LI><a href="#[104c898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;End
<LI><a href="#[104eac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
<LI><a href="#[104eb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1051008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close0
<LI><a href="#[1051050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[1242938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetID2Par
<LI><a href="#[1242980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPar2ID
<LI><a href="#[12429c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get
<LI><a href="#[1242a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSi
<LI><a href="#[1242a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState
<LI><a href="#[1242aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1242ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1242b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1246110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12461a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12461e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1248d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1248dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1248e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[124bcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState1
<LI><a href="#[124bd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
<LI><a href="#[124bef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[124bf80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[12f0030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12f0078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12f00c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12f3260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12f3338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12f3380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12f6690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState
<LI><a href="#[12f66d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12f6768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12f67b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12fa7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12fa830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
<LI><a href="#[12fa998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12fe758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState
<LI><a href="#[12fe7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12feb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12febd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[13a0ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[13a0f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[13a0f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[13a3860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[13a38a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[13a38f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[13a6210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[13a62a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[13a62e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[13a8f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[13a90b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[13a9100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[13abea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[13abf78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[13abfc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[145fde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeIPData
<LI><a href="#[145fe30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurIPState
<LI><a href="#[145fe78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVolume1
<LI><a href="#[145ff08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPhone1
<LI><a href="#[145ff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendIP1
<LI><a href="#[145ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage1
<LI><a href="#[1460070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseCall1
<LI><a href="#[1460100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreePhone1
<LI><a href="#[1460190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPhone1
<LI><a href="#[1460220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadIP1
<LI><a href="#[14602b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMessage1
<LI><a href="#[1460340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSRIP1
<LI><a href="#[14603d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIpPro1
<LI><a href="#[1460460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIPState1
<LI><a href="#[14604f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneState1
<LI><a href="#[1460580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageState1
<LI><a href="#[1460610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysState1
<LI><a href="#[14606a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClosePhone1
<LI><a href="#[14606e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMessage1
<LI><a href="#[1460730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseIP1
<LI><a href="#[1460778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys1
<LI><a href="#[14607c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenPhone1
<LI><a href="#[1460850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenIP1
<LI><a href="#[14608e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessage1
<LI><a href="#[1460970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSys1
<LI><a href="#[1460a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGprs1
<LI><a href="#[1460a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhone1
<LI><a href="#[1460a90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMessage1
<LI><a href="#[1460ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSys1
<LI><a href="#[1460b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[1460bf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperIPData
<LI><a href="#[1461030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperMessage
<LI><a href="#[1461078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperPhone
<LI><a href="#[1464240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1464288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1464318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[1466f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanProperty
<LI><a href="#[1466fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFileName
<LI><a href="#[1467078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFileLength
<LI><a href="#[1467108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileProperty
<LI><a href="#[1467198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1467228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFile
<LI><a href="#[14672b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFile
<LI><a href="#[1467348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFile
<LI><a href="#[14673d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1469d78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPor
<LI><a href="#[1469dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadHeadTail
<LI><a href="#[1469e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekSize1
<LI><a href="#[1469e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek1
<LI><a href="#[1469f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJlNum1
<LI><a href="#[1469f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder2
<LI><a href="#[146a090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder2
<LI><a href="#[146a168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBin1
<LI><a href="#[146a1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBin1
<LI><a href="#[146a288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[146a318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[146a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder1
<LI><a href="#[146a5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin1
<LI><a href="#[146d3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[146d480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[146d4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[14f5528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get
<LI><a href="#[14f5570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[14f55b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[14f5648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[14f5720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeEvent
<LI><a href="#[14fb980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditPro
<LI><a href="#[14fb9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPro
<LI><a href="#[14fba10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEnable
<LI><a href="#[14fba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisEnable
<LI><a href="#[14fbaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable
<LI><a href="#[14fbae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[14fbb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[14fbb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[14fbce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeEvent
<LI><a href="#[15d49a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPar2ID
<LI><a href="#[15d49f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
<LI><a href="#[15d4b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[15d4b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[15d4ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[15d4c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[16a2338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Answer
<LI><a href="#[16a2380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[16a23c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
<LI><a href="#[16a2410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend
<LI><a href="#[16a24e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[c78198]"></a>OSSemQuery</STRONG> (ARM, 116 bytes, Stack size 24 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OSSemQuery
</UL>
<BR>[Called By]<UL><LI><a href="#[104ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[1051170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[18caa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>

<P><STRONG><a name="[c775e0]"></a>OSTaskChangePrio</STRONG> (ARM, 460 bytes, Stack size 40 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c77598]"></a>OSTaskCreate</STRONG> (ARM, 236 bytes, Stack size 40 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[c7f498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1460b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[14642d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[14f1ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[14f5600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[14f87f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[14fbc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[15d4c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[16a24a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[18a06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[18af058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[18c7020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[196f598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c7d328]"></a>OSTaskCreateExt</STRONG> (ARM, 288 bytes, Stack size 56 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[c7f498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[196d190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c7e450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[c7e498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
</UL>

<P><STRONG><a name="[c77550]"></a>OSTaskDel</STRONG> (ARM, 508 bytes, Stack size 24 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7c430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
<LI><a href="#[c7d4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Dummy
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[c7f2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelHook
</UL>

<P><STRONG><a name="[c77508]"></a>OSTaskDelReq</STRONG> (ARM, 140 bytes, Stack size 24 bytes, os_task.o(.text), UNUSED)

<P><STRONG><a name="[c774c0]"></a>OSTaskResume</STRONG> (ARM, 192 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c77478]"></a>OSTaskStkChk</STRONG> (ARM, 192 bytes, Stack size 32 bytes, os_task.o(.text), UNUSED)

<P><STRONG><a name="[c77430]"></a>OSTaskSuspend</STRONG> (ARM, 240 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c773e8]"></a>OSTaskQuery</STRONG> (ARM, 120 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[c7d2e0]"></a>OSTimeDly</STRONG> (ARM, 140 bytes, Stack size 8 bytes, os_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[c76808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[c7d568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatInit
<LI><a href="#[c7d7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[124c058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configuration
<LI><a href="#[124c178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreeData
<LI><a href="#[124f228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp
<LI><a href="#[124f420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom
<LI><a href="#[12fa878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1460b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[1464318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[146d3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
<LI><a href="#[14f5648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[14f8838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[14f88c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhotoCommon
<LI><a href="#[14f8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPhoto
<LI><a href="#[14fbc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[15d4a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
<LI><a href="#[15d4a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSig
<LI><a href="#[15d4c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[18a0718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[18a08c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevPar
<LI><a href="#[18a0910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevParSigle
<LI><a href="#[18af0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[18c2428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[c76808]"></a>OSTimeDlyHMSM</STRONG> (ARM, 232 bytes, Stack size 32 bytes, os_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[c767c0]"></a>OSTimeDlyResume</STRONG> (ARM, 184 bytes, Stack size 16 bytes, os_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c76778]"></a>OSTimeGet</STRONG> (ARM, 32 bytes, Stack size 8 bytes, os_time.o(.text), UNUSED)

<P><STRONG><a name="[c76730]"></a>OSTimeSet</STRONG> (ARM, 32 bytes, Stack size 8 bytes, os_time.o(.text), UNUSED)

<P><STRONG><a name="[c81670]"></a>CAN_Exception</STRONG> (ARM, 404 bytes, Stack size 8 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CAN_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[c81f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Handler
</UL>

<P><STRONG><a name="[c81628]"></a>Eint_Exception</STRONG> (ARM, 148 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c81ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_Handler
</UL>

<P><STRONG><a name="[c813e8]"></a>Timer1_Exception</STRONG> (ARM, 308 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c81e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Handler
</UL>

<P><STRONG><a name="[c813a0]"></a>Timer2_Exception</STRONG> (ARM, 256 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c81dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Handler
</UL>

<P><STRONG><a name="[c81358]"></a>UART0_Exception</STRONG> (ARM, 244 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART0_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[c81d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_Handler
</UL>

<P><STRONG><a name="[c81310]"></a>UART1_Exception</STRONG> (ARM, 244 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART1_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[c81d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Handler
</UL>

<P><STRONG><a name="[c812c8]"></a>UART2_Exception</STRONG> (ARM, 280 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART2_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[c81cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Handler
</UL>

<P><STRONG><a name="[c81280]"></a>UART3_Exception</STRONG> (ARM, 244 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART3_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[c81ca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3_Handler
</UL>

<P><STRONG><a name="[15db718]"></a>FileData_BackSet</STRONG> (ARM, 120 bytes, Stack size 16 bytes, _filedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FileData_BackSet &rArr; BackFacFile
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[16ab198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackFacFile
</UL>
<BR>[Called By]<UL><LI><a href="#[14ee590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Par
</UL>

<P><STRONG><a name="[16a98d8]"></a>FileData_CheckFile</STRONG> (ARM, 508 bytes, Stack size 24 bytes, _filedata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[16ab198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackFacFile
</UL>
<BR>[Called By]<UL><LI><a href="#[18c2428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[196f5e0]"></a>Build_INT_Vector_Table</STRONG> (ARM, 112 bytes, Stack size 4 bytes, _init.o(.text), UNUSED)

<P><STRONG><a name="[196f598]"></a>main</STRONG> (ARM, 48 bytes, Stack size 8 bytes, _init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = main &rArr; OSInit &rArr; OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c7d5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[c7d718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
<LI><a href="#[c81fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kernel.o(.text)
</UL>
<P><STRONG><a name="[196d8e8]"></a>srand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[c81fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetInit (via Veneer)
<LI><a href="#[196d8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[196d8a0]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[196d8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[196d858]"></a>rand</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[196d600]"></a>__aeabi_memset</STRONG> (ARM, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1967670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[146a048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWriteHeadTail
<LI><a href="#[14eded0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_SetWaringTerm
<LI><a href="#[14ee038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_SetVidType
<LI><a href="#[15d9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Par
<LI><a href="#[16a20b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploaderJpg2Sig
<LI><a href="#[17533d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhone
<LI><a href="#[17534a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AmendMenum
</UL>

<P><STRONG><a name="[196d450]"></a>__aeabi_memcpy4</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[c773e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQuery
<LI><a href="#[18a0a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSms
<LI><a href="#[18a5c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[18ca8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenUart
</UL>

<P><STRONG><a name="[196d408]"></a>__aeabi_memcpy8</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[196d3c0]"></a>__rt_memcpy_w</STRONG> (ARM, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[196d378]"></a>_memcpy_lastbytes_aligned</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[196d190]"></a>__aeabi_memclr4</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[146a558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
<LI><a href="#[146a5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
</UL>

<P><STRONG><a name="[196d148]"></a>__aeabi_memclr8</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[196d100]"></a>__rt_memclr_w</STRONG> (ARM, 84 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[196d0b8]"></a>_memset_w</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19676b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[196cee0]"></a>strlen</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[12fe830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeOrder (via Veneer)
<LI><a href="#[146a360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open (via Veneer)
<LI><a href="#[146a3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookFileNameAgain (via Veneer)
<LI><a href="#[146a558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder (via Veneer)
<LI><a href="#[146a5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin (via Veneer)
</UL>

<P><STRONG><a name="[196cd28]"></a>memchr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, memchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1056120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2Float (via Veneer)
<LI><a href="#[12fe830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeOrder (via Veneer)
</UL>

<P><STRONG><a name="[196caa0]"></a>__aeabi_idiv</STRONG> (ARM, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[196ca58]"></a>__aeabi_idivmod</STRONG> (ARM, 384 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWeek
<LI><a href="#[1053218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[1056558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[1469fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder1
<LI><a href="#[146a000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateHeadTailPoint
<LI><a href="#[146a0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder1
<LI><a href="#[146a558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
<LI><a href="#[146d3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
<LI><a href="#[15cd4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[15cd588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatFlash
<LI><a href="#[15d9110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2ReduceGps_Height
<LI><a href="#[15d9398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar2
<LI><a href="#[15d93e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar1
<LI><a href="#[15d9428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar
<LI><a href="#[15d9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Par
<LI><a href="#[16a74a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeReduceLen
</UL>

<P><STRONG><a name="[196bd60]"></a>__use_two_region_memory</STRONG> (ARM, 4 bytes, Stack size 0 bytes, stkheap2.o(.text), UNUSED)

<P><STRONG><a name="[196bd18]"></a>__rt_stackheap_init</STRONG> (ARM, 36 bytes, Stack size 16 bytes, stkheap2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_stackheap_init &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[1967ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_storage
<LI><a href="#[1968260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[1968888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[196bcd0]"></a>__rt_heap_extend</STRONG> (ARM, 24 bytes, Stack size 8 bytes, stkheap2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196bbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_heap_extend (Weak Reference)
</UL>

<P><STRONG><a name="[1968888]"></a>__rt_entry</STRONG> (ARM, 76 bytes, Stack size 16 bytes, kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_entry &rArr; __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1963668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_lib_init
<LI><a href="#[19637d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_stackheap_init
<LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
<LI><a href="#[1964670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
<LI><a href="#[196bd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL>
<BR>[Called By]<UL><LI><a href="#[196ba90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[1a1eb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[1968840]"></a>__rt_exit</STRONG> (ARM, 20 bytes, Stack size 8 bytes, kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rt_exit &rArr; __rt_lib_shutdown
</UL>
<BR>[Calls]<UL><LI><a href="#[19641a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1964670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[19687f8]"></a>__rt_abort</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kernel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19650c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[1968260]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[c80cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[1964df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[196bd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL>

<P><STRONG><a name="[1967ad0]"></a>__rt_stackheap_storage</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_stackheap_storage_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[196bd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL>

<P><STRONG><a name="[1967918]"></a>__read_errno</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1964828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via Veneer)
</UL>

<P><STRONG><a name="[19678d0]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[1964828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1968c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt (via Veneer)
<LI><a href="#[1968f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin (via Veneer)
<LI><a href="#[1969388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos (via Veneer)
</UL>

<P><STRONG><a name="[1967700]"></a>__aeabi_memclr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[19676b8]"></a>__rt_memclr</STRONG> (ARM, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196d0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[1967670]"></a>_memset</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[196d600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[19650c8]"></a>_sys_exit</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sys_exit.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19687f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_abort
</UL>

<P><STRONG><a name="[1964e38]"></a>__user_libspace</STRONG> (ARM, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[1964df0]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1968260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1964da8]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[1964828]"></a>__aeabi_errno_addr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19678d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[1967918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno (via Veneer)
</UL>

<P><STRONG><a name="[19647e0]"></a>__rt_errno_addr_intlibspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[1964670]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = exit &rArr; __rt_exit &rArr; __rt_lib_shutdown
</UL>
<BR>[Calls]<UL><LI><a href="#[19645e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
<LI><a href="#[1968840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1968888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[19641f0]"></a>__rt_lib_init</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, lib_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1961808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init (via Veneer)
<LI><a href="#[1962320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via Veneer)
<LI><a href="#[1963bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_signal_init (Weak Reference)
<LI><a href="#[1963c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio (Weak Reference)
<LI><a href="#[1963c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_user_alloc (Weak Reference)
<LI><a href="#[1963ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc (Weak Reference)
<LI><a href="#[1963d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getenv_init (Weak Reference)
<LI><a href="#[1963d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_time (Weak Reference)
<LI><a href="#[1963db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric (Weak Reference)
<LI><a href="#[1963e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_monetary (Weak Reference)
<LI><a href="#[1963e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype (Weak Reference)
<LI><a href="#[1963e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_collate (Weak Reference)
<LI><a href="#[1963ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_trap_init (Weak Reference)
<LI><a href="#[1963f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_clock_init (Weak Reference)
<LI><a href="#[1963f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atexit_init (Weak Reference)
<LI><a href="#[1963ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_ (Weak Reference)
<LI><a href="#[1964040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__alloca_initialize (Weak Reference)
<LI><a href="#[1964088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_DescSize (Weak Reference)
<LI><a href="#[19640d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_init (Weak Reference)
<LI><a href="#[1964280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_argv_veneer (via Veneer)
<LI><a href="#[196d8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1968888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry (via Veneer)
</UL>

<P><STRONG><a name="[19641a8]"></a>__rt_lib_shutdown</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lib_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_lib_shutdown
</UL>
<BR>[Calls]<UL><LI><a href="#[1963b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio (Weak Reference)
<LI><a href="#[1963b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminate_user_alloc (Weak Reference)
<LI><a href="#[1963fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[1968840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
</UL>

<P><STRONG><a name="[19637d8]"></a>_platform_post_stackheap_init</STRONG> (ARM, 12 bytes, Stack size 0 bytes, boardinit2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1968888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1963668]"></a>_platform_post_lib_init</STRONG> (ARM, 16 bytes, Stack size 8 bytes, boardinit3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _platform_post_lib_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1968888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[19626d8]"></a>__I_use_semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[1962690]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1962320]"></a>__rt_locale</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[1961970]"></a>__ARM_get_argv</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, no_argv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __ARM_get_argv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lib_init.o(.emb_text)
</UL>
<P><STRONG><a name="[19610b8]"></a>__rt_fp_status_addr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1961808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[196ca10]"></a>__aeabi_uidiv</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv), UNUSED)

<P><STRONG><a name="[196c9c8]"></a>__aeabi_uidivmod</STRONG> (ARM, 28 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv))
<BR><BR>[Calls]<UL><LI><a href="#[196cae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div_large
<LI><a href="#[196cb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div4
<LI><a href="#[196cb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div8
</UL>
<BR>[Called By]<UL><LI><a href="#[c76808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[c7d7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[1047d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[104aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open0
<LI><a href="#[104ab08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[104ab50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open2
<LI><a href="#[104ab98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open3
<LI><a href="#[104eba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
<LI><a href="#[10563f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorism2Asc
<LI><a href="#[1056510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorism2BCD
<LI><a href="#[1246110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12fe950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Lat
<LI><a href="#[12fe998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Long
<LI><a href="#[1469fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder1
<LI><a href="#[146a000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateHeadTailPoint
<LI><a href="#[146a0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder1
<LI><a href="#[146a5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
<LI><a href="#[15cd3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EaseFlash
<LI><a href="#[15cd420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlash
<LI><a href="#[15cd468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlash
<LI><a href="#[15cd4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeFlash
<LI><a href="#[15cd5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatBad
<LI><a href="#[15d8c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderReduce
<LI><a href="#[15d9278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_Angle
<LI><a href="#[15d92c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_Height
<LI><a href="#[15d9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Par
<LI><a href="#[16a20b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploaderJpg2Sig
<LI><a href="#[16a20f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploaderJpg1
<LI><a href="#[16a2770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoaderJpgData
<LI><a href="#[16a72a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneCut
<LI><a href="#[16ae480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ease
<LI><a href="#[16ae4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
<LI><a href="#[16ae510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlock
<LI><a href="#[16ae5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1753340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftWareState
<LI><a href="#[1965518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[c816b8]"></a>IRQ_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c81598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[c82128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[c81e58]"></a>Timer0_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Timer0_Handler &rArr; Timer0_Exception &rArr; OSTimeTick
</UL>
<BR>[Calls]<UL><LI><a href="#[c81598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[c82098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81d80]"></a>Uart0_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Uart0_Handler &rArr; UART0_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c81358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Exception
<LI><a href="#[c81598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81d38]"></a>Uart1_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Uart1_Handler &rArr; UART1_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c81310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Exception
<LI><a href="#[c81598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81cf0]"></a>Uart2_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Uart2_Handler &rArr; UART2_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c812c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Exception
<LI><a href="#[c81598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81ca8]"></a>Uart3_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Uart3_Handler &rArr; UART3_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c81280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Exception
<LI><a href="#[c81598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81f30]"></a>CAN_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = CAN_Handler &rArr; CAN_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c81598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[c81670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81e10]"></a>Timer1_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Timer1_Handler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[c813e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Exception
<LI><a href="#[c81598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81dc8]"></a>Timer2_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Timer2_Handler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[c813a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Exception
<LI><a href="#[c81598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81ee8]"></a>EINT2_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = EINT2_Handler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[c81598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[c81628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_Exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[1965518]"></a>__ieee754_rem_pio2</STRONG> (ARM, 1172 bytes, Stack size 80 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[19629c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[1963050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1965cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1967038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[196ab90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[196ae28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[196b1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[196b268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[196b340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1968f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1969388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[19658a0]"></a>__kernel_cos</STRONG> (ARM, 372 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1962858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1963050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1965cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[196ab90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[196b1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[196b268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[1968f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1969388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[1962858]"></a>__kernel_poly</STRONG> (ARM, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[196ab90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[196b340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1965260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[19658a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[1965260]"></a>__kernel_sin</STRONG> (ARM, 364 bytes, Stack size 56 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1962858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1963050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1965cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[196ab90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[196b1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[196b268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[196b340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1968f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1969388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[1969388]"></a>cos</STRONG> (ARM, 212 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = cos &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1965260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1965518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[19658a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[1965cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[19678d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12f32f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[13a9070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[1968f20]"></a>sin</STRONG> (ARM, 228 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1965260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1965518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[19658a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[1965cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[19678d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12f32f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[13a9070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[1968c20]"></a>sqrt</STRONG> (ARM, 100 bytes, Stack size 16 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[1966130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[1966d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[19678d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12f32f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[13a9070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[c80c40]"></a>SoftwareInterrupt</STRONG> (ARM, 0 bytes, Stack size unknown bytes, os_cpu_a.o(subr))
<BR><BR>[Stack]<UL><LI>Max Depth = 4 + Unknown Stack Size
<LI>Call Chain = SoftwareInterrupt &rArr; SWI_Exception
</UL>
<BR>[Calls]<UL><LI><a href="#[c7f450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c815e0]"></a>OSIntCtxSw</STRONG> (ARM, 0 bytes, Stack size unknown bytes, os_cpu_a.o(subr))
<BR><BR>[Calls]<UL><LI><a href="#[c7f2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>
<BR>[Address Reference Count : 2]<UL><LI> os_cpu_a.o(subr)
<LI> irq.o(IRQ)
</UL>
<P><STRONG><a name="[c7edd0]"></a>__OSStartHighRdy</STRONG> (ARM, 0 bytes, Stack size unknown bytes, os_cpu_a.o(subr))
<BR><BR>[Calls]<UL><LI><a href="#[c7f2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_a.o(subr)
</UL>
<P><STRONG><a name="[196b828]"></a>__aeabi_d2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Called By]<UL><LI><a href="#[12f32f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[13a9070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[196b7e0]"></a>_d2f</STRONG> (ARM, 168 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1967230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[196b798]"></a>__fpl_inf_d2f</STRONG> (ARM, 0 bytes, Stack size unknown bytes, d2f.o(x$fpl$d2f), UNUSED)

<P><STRONG><a name="[196b340]"></a>__aeabi_dadd</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[12f32f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[13a9070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[1962858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1965260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1965518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[196b2f8]"></a>_dadd</STRONG> (ARM, 452 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19673e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[196b388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[196b2b0]"></a>__fpl_inf_dadd</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dadd), UNUSED)

<P><STRONG><a name="[19673e0]"></a>__fpl_dcheck_NaN2</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dcheck.o(x$fpl$dcheck))
<BR><BR>[Calls]<UL><LI><a href="#[1962d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[19629c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[1963330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
<LI><a href="#[196ab48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[196ade0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[196b190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[196b2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[1967230]"></a>__fpl_dcheck_NaN1</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[1962d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[1963008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[1965c88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[1966d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[196b7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[19666e8]"></a>__fpl_fcmp_InfNaN</STRONG> (ARM, 100 bytes, Stack size 0 bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1962b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
<LI><a href="#[19669b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[19696b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
</UL>

<P><STRONG><a name="[19666a0]"></a>__fpl_inf_fcmp</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[1963330]"></a>__fpl_dcmp_InfNaN</STRONG> (ARM, 128 bytes, Stack size 4 bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1962b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
<LI><a href="#[19673e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[19660e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[19632e8]"></a>__fpl_inf_dcmp</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[196ae28]"></a>__aeabi_ddiv</STRONG> (ARM, 0 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[12f32f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[13a9070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[1965518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[196ade0]"></a>_ddiv</STRONG> (ARM, 464 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19673e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[196ad50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv_mantissas
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[196ad98]"></a>__fpl_inf_ddiv</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ddiv.o(x$fpl$ddiv), UNUSED)

<P><STRONG><a name="[196ad50]"></a>_ddiv_mantissas</STRONG> (ARM, 608 bytes, Stack size 28 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[196ade0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[1963050]"></a>__aeabi_d2iz</STRONG> (ARM, 0 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[1965260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1965518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[19658a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[1963008]"></a>_dfix</STRONG> (ARM, 172 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1967230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[1962fc0]"></a>__fpl_inf_dfix</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dfix.o(x$fpl$dfix), UNUSED)

<P><STRONG><a name="[1967038]"></a>__aeabi_i2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dflt_noclz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[1965518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[1966ff0]"></a>_dflt</STRONG> (ARM, 88 bytes, Stack size 0 bytes, dflt_noclz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[1966fa8]"></a>__dflt_normalise</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dflt_noclz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[1966130]"></a>__aeabi_cdcmple</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Called By]<UL><LI><a href="#[1968c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[19660e8]"></a>_dcmple</STRONG> (ARM, 132 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1963330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[196ab90]"></a>__aeabi_dmul</STRONG> (ARM, 0 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[12f32f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[13a9070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[1962858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1965260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1965518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[19658a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[196ab48]"></a>_dmul</STRONG> (ARM, 460 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19673e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[196ab00]"></a>__fpl_inf_dmul</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dmul.o(x$fpl$dmul), UNUSED)

<P><STRONG><a name="[19629c0]"></a>_drem</STRONG> (ARM, 496 bytes, Stack size 16 bytes, drem.o(x$fpl$drem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[19673e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[1965518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[1962978]"></a>__fpl_inf_drem</STRONG> (ARM, 0 bytes, Stack size unknown bytes, drem.o(x$fpl$drem), UNUSED)

<P><STRONG><a name="[196b268]"></a>__aeabi_drsub</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[1965260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1965518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[19658a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[196b220]"></a>_drsb</STRONG> (ARM, 24 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196b388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[196b3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[1966d08]"></a>_dsqrt</STRONG> (ARM, 384 bytes, Stack size 16 bytes, dsqrt.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[1967230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[1968c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[1966cc0]"></a>__fpl_inf_dsqrt</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dsqrt.o(x$fpl$dsqrt), UNUSED)

<P><STRONG><a name="[196b1d8]"></a>__aeabi_dsub</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[1965260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1965518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[19658a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[196b190]"></a>_dsub</STRONG> (ARM, 572 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19673e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[196b3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[196b148]"></a>__fpl_inf_dsub</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[1966ba0]"></a>__dunder</STRONG> (ARM, 272 bytes, Stack size 4 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[1966b58]"></a>__dunder_d</STRONG> (ARM, 4 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[196a9e0]"></a>__aeabi_f2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Called By]<UL><LI><a href="#[12f32f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[13a9070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[196a998]"></a>_f2d</STRONG> (ARM, 96 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1966850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[196a950]"></a>__fpl_inf_f2d</STRONG> (ARM, 0 bytes, Stack size unknown bytes, f2d.o(x$fpl$f2d), UNUSED)

<P><STRONG><a name="[196a520]"></a>__aeabi_fadd</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[196a4d8]"></a>_fadd</STRONG> (ARM, 260 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19669b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[196a568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[196a490]"></a>__fpl_inf_fadd</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[19669b8]"></a>__fpl_fcheck_NaN2</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fcheck.o(x$fpl$fcheck), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1962d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[19666e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[1969928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[196a370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[196a4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[1966850]"></a>__fpl_fcheck_NaN1</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1962d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[196a058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[196a998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[196a0a0]"></a>__aeabi_f2uiz</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Called By]<UL><LI><a href="#[12f3260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[13a9028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeAreacirc
</UL>

<P><STRONG><a name="[196a058]"></a>_ffixu</STRONG> (ARM, 92 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1966850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[196a010]"></a>__fpl_inf_ffixu</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ffixu.o(x$fpl$ffixu), UNUSED)

<P><STRONG><a name="[1969ca8]"></a>__aeabi_i2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[1969c60]"></a>_fflt</STRONG> (ARM, 92 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[1969c18]"></a>__fflt_normalise</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fflt_noclz.o(x$fpl$fflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1969b88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffltu
</UL>

<P><STRONG><a name="[1969bd0]"></a>__aeabi_ui2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[12f32f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[13a9070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[1969b88]"></a>_ffltu</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$ffltu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1969c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fflt_normalise
</UL>

<P><STRONG><a name="[1969970]"></a>__aeabi_fmul</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Called By]<UL><LI><a href="#[12f32f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[13a9070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[1969928]"></a>_fmul</STRONG> (ARM, 260 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19669b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[19698e0]"></a>__fpl_inf_fmul</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[1966478]"></a>__fpl_normalise2</STRONG> (ARM, 148 bytes, Stack size 0 bytes, fnorm2_noclz.o(x$fpl$fnorm2), UNUSED)

<P><STRONG><a name="[1961808]"></a>_fp_init</STRONG> (ARM, 24 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[19610b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[19617c0]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[19696f8]"></a>__aeabi_cfrcmple</STRONG> (ARM, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[12f32f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[13a9070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[19696b0]"></a>_frcmple</STRONG> (ARM, 128 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19666e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[196a3b8]"></a>__aeabi_fsub</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fsub))
<BR><BR>[Called By]<UL><LI><a href="#[12f32f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[13a9070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[196a370]"></a>_fsub</STRONG> (ARM, 356 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19669b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[196a5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[196a328]"></a>__fpl_inf_fsub</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[1966308]"></a>__funder</STRONG> (ARM, 140 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[19662c0]"></a>__funder_d</STRONG> (ARM, 4 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[1962d38]"></a>__fpl_return_NaN</STRONG> (ARM, 116 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[1962b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[1966850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[19669b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[1967230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[19673e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[1965cd0]"></a>__ARM_scalbn</STRONG> (ARM, 0 bytes, Stack size 0 bytes, scalbn_noclz.o(x$fpl$scalbn))
<BR><BR>[Called By]<UL><LI><a href="#[1965260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1965518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[19658a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[1968f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1969388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[1965c88]"></a>scalbn</STRONG> (ARM, 108 bytes, Stack size 0 bytes, scalbn_noclz.o(x$fpl$scalbn), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1967230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[196b678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[1965c40]"></a>__fpl_inf_scalbn</STRONG> (ARM, 0 bytes, Stack size unknown bytes, scalbn_noclz.o(x$fpl$scalbn), UNUSED)

<P><STRONG><a name="[1962b38]"></a>__fpl_cmpreturn</STRONG> (ARM, 60 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[1962d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[1963330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
<LI><a href="#[19666e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c82bd8]"></a>InitWTD</STRONG> (ARM, 24 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c81fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetInit
</UL>

<P><STRONG><a name="[c80ec8]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c80ec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c80ec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c80e80]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c80e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c80e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c80e38]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c80e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c80e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c80df0]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c820e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c7e498]"></a>OS_InitTaskStat</STRONG> (ARM, 68 bytes, Stack size 24 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = OS_InitTaskStat &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[c7d718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7e450]"></a>OS_InitTaskIdle</STRONG> (ARM, 68 bytes, Stack size 24 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[c7d718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7e408]"></a>OS_InitEventList</STRONG> (ARM, 80 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7e3c0]"></a>OS_InitTCBList</STRONG> (ARM, 116 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7e378]"></a>OS_InitRdyList</STRONG> (ARM, 88 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7e330]"></a>OS_InitMisc</STRONG> (ARM, 88 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7c8f8]"></a>OS_FlagTaskRdy</STRONG> (ARM, 140 bytes, Stack size 20 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7c430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
</UL>
<BR>[Called By]<UL><LI><a href="#[c7c358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[c7c3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
</UL>

<P><STRONG><a name="[c7c8b0]"></a>OS_FlagBlock</STRONG> (ARM, 220 bytes, Stack size 16 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c7c3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
</UL>

<P><STRONG><a name="[c75680]"></a>nand_trans_result</STRONG> (ARM, 168 bytes, Stack size 16 bytes, _arithmetic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nand_trans_result
</UL>
<BR>[Called By]<UL><LI><a href="#[c75638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_calculate_ecc
</UL>

<P><STRONG><a name="[c75638]"></a>nand_calculate_ecc</STRONG> (ARM, 176 bytes, Stack size 32 bytes, _arithmetic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nand_calculate_ecc &rArr; nand_trans_result
</UL>
<BR>[Calls]<UL><LI><a href="#[c75680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_trans_result
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _arithmetic.o(.constdata)
</UL>
<P><STRONG><a name="[c755f0]"></a>nand_correct_data</STRONG> (ARM, 452 bytes, Stack size 36 bytes, _arithmetic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nand_correct_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _arithmetic.o(.constdata)
</UL>
<P><STRONG><a name="[c755a8]"></a>Crc</STRONG> (ARM, 112 bytes, Stack size 8 bytes, _arithmetic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Crc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _arithmetic.o(.constdata)
</UL>
<P><STRONG><a name="[c75560]"></a>CheckSum</STRONG> (ARM, 44 bytes, Stack size 0 bytes, _arithmetic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _arithmetic.o(.constdata)
</UL>
<P><STRONG><a name="[c75518]"></a>CheckAdd</STRONG> (ARM, 48 bytes, Stack size 0 bytes, _arithmetic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _arithmetic.o(.constdata)
</UL>
<P><STRONG><a name="[c754d0]"></a>Crc1021</STRONG> (ARM, 112 bytes, Stack size 8 bytes, _arithmetic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Crc1021
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _arithmetic.o(.constdata)
</UL>
<P><STRONG><a name="[10565e8]"></a>Bcd2Hex</STRONG> (ARM, 68 bytes, Stack size 8 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[10565a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD2Algorism
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10565a0]"></a>BCD2Algorism</STRONG> (ARM, 96 bytes, Stack size 28 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = BCD2Algorism &rArr; Bcd2Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[10565e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056558]"></a>Hex2Bcd</STRONG> (ARM, 108 bytes, Stack size 24 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1056510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorism2BCD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056510]"></a>Algorism2BCD</STRONG> (ARM, 120 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = Algorism2BCD &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1056558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10564c8]"></a>Asc2Bcd</STRONG> (ARM, 76 bytes, Stack size 8 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Asc2Bcd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056480]"></a>Bcd2Asc</STRONG> (ARM, 80 bytes, Stack size 8 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bcd2Asc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056438]"></a>Asc2Algorism</STRONG> (ARM, 100 bytes, Stack size 12 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Asc2Algorism
</UL>
<BR>[Called By]<UL><LI><a href="#[1055868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Char2IP
<LI><a href="#[1055c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPAsc2INT32
<LI><a href="#[1056120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2Float
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10563f0]"></a>Algorism2Asc</STRONG> (ARM, 176 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Algorism2Asc
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10558b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP2Char
<LI><a href="#[1055c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT322IPAsc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10563a8]"></a>Asc2HexSig</STRONG> (ARM, 96 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1056360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2HexBuf
</UL>

<P><STRONG><a name="[1056360]"></a>Asc2HexBuf</STRONG> (ARM, 112 bytes, Stack size 16 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Asc2HexBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[10563a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2HexSig
</UL>
<BR>[Called By]<UL><LI><a href="#[1055940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpPdu
<LI><a href="#[1056288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2Hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056318]"></a>Hex2AscSig</STRONG> (ARM, 52 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1056240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Asc
<LI><a href="#[10562d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexBuf2Asc
</UL>

<P><STRONG><a name="[10562d0]"></a>HexBuf2Asc</STRONG> (ARM, 88 bytes, Stack size 12 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HexBuf2Asc
</UL>
<BR>[Calls]<UL><LI><a href="#[1056318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2AscSig
</UL>
<BR>[Called By]<UL><LI><a href="#[1055a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056288]"></a>Asc2Hex</STRONG> (ARM, 100 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Asc2Hex &rArr; Asc2HexBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[1056360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2HexBuf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056240]"></a>Hex2Asc</STRONG> (ARM, 220 bytes, Stack size 20 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Hex2Asc
</UL>
<BR>[Calls]<UL><LI><a href="#[1056318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2AscSig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10561f8]"></a>JugeAscBcd</STRONG> (ARM, 68 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10561b0]"></a>JugeHexBcd</STRONG> (ARM, 80 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056168]"></a>JugeAscHex</STRONG> (ARM, 132 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056120]"></a>Asc2Float</STRONG> (ARM, 160 bytes, Stack size 40 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Asc2Float &rArr; Asc2Algorism
</UL>
<BR>[Calls]<UL><LI><a href="#[1056438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2Algorism
<LI><a href="#[196cd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memchr (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10560d8]"></a>JugeAscFloat</STRONG> (ARM, 116 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056090]"></a>ClsArray</STRONG> (ARM, 40 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1055940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpPdu
<LI><a href="#[1055ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056048]"></a>MoveByte</STRONG> (ARM, 52 bytes, Stack size 8 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MoveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1055940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056000]"></a>CompareBuf</STRONG> (ARM, 76 bytes, Stack size 12 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CompareBuf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055fb8]"></a>CompareVa</STRONG> (ARM, 208 bytes, Stack size 8 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CompareVa
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055f70]"></a>Strsize</STRONG> (ARM, 52 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1055a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoPdu
<LI><a href="#[1055bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeBufType
<LI><a href="#[1055c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPAsc2INT32
<LI><a href="#[1055ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSpace
<LI><a href="#[1055e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookStrDown
<LI><a href="#[1055e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookStrInLength
<LI><a href="#[1055f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrATChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055f28]"></a>StrATChar</STRONG> (ARM, 92 bytes, Stack size 12 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = StrATChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1055f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055ee0]"></a>Strsize16</STRONG> (ARM, 56 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1055868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Char2IP
<LI><a href="#[1055a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoPdu
<LI><a href="#[1055e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookStr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055e98]"></a>LookStr</STRONG> (ARM, 156 bytes, Stack size 24 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LookStr
</UL>
<BR>[Calls]<UL><LI><a href="#[1055ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize16
</UL>
<BR>[Called By]<UL><LI><a href="#[1055c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPAsc2INT32
<LI><a href="#[1055ce8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekStr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055e50]"></a>LookStrInLength</STRONG> (ARM, 148 bytes, Stack size 24 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LookStrInLength
</UL>
<BR>[Calls]<UL><LI><a href="#[1055f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055e08]"></a>LookStrDown</STRONG> (ARM, 192 bytes, Stack size 28 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LookStrDown
</UL>
<BR>[Calls]<UL><LI><a href="#[1055f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055dc0]"></a>LookEnable</STRONG> (ARM, 132 bytes, Stack size 16 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LookEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055d78]"></a>LookShowChar</STRONG> (ARM, 64 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055d30]"></a>SeekChar</STRONG> (ARM, 96 bytes, Stack size 8 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1055868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Char2IP
</UL>

<P><STRONG><a name="[1055ce8]"></a>SeekStr</STRONG> (ARM, 100 bytes, Stack size 28 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SeekStr &rArr; LookStr
</UL>
<BR>[Calls]<UL><LI><a href="#[1055e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookStr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055ca0]"></a>MemSpace</STRONG> (ARM, 108 bytes, Stack size 20 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MemSpace
</UL>
<BR>[Calls]<UL><LI><a href="#[1055f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
<LI><a href="#[1056090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055c58]"></a>IPAsc2INT32</STRONG> (ARM, 252 bytes, Stack size 28 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = IPAsc2INT32 &rArr; LookStr
</UL>
<BR>[Calls]<UL><LI><a href="#[1055e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookStr
<LI><a href="#[1055f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
<LI><a href="#[1056438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2Algorism
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055c10]"></a>INT322IPAsc</STRONG> (ARM, 164 bytes, Stack size 24 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = INT322IPAsc &rArr; Algorism2Asc
</UL>
<BR>[Calls]<UL><LI><a href="#[10563f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorism2Asc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055bc8]"></a>JugeBufType</STRONG> (ARM, 112 bytes, Stack size 16 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = JugeBufType
</UL>
<BR>[Calls]<UL><LI><a href="#[1055f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
</UL>
<BR>[Called By]<UL><LI><a href="#[1055a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055b80]"></a>BinarySearchStr</STRONG> (ARM, 208 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BinarySearchStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1055b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrToUni
</UL>

<P><STRONG><a name="[1055b38]"></a>StrToUni</STRONG> (ARM, 212 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = StrToUni &rArr; BinarySearchStr
</UL>
<BR>[Calls]<UL><LI><a href="#[1055b80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BinarySearchStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1055a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055af0]"></a>gsmEncode7bit</STRONG> (ARM, 144 bytes, Stack size 16 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gsmEncode7bit
</UL>
<BR>[Called By]<UL><LI><a href="#[1055a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055aa8]"></a>PduNumber</STRONG> (ARM, 84 bytes, Stack size 4 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PduNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[1055a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055a60]"></a>PhoPdu</STRONG> (ARM, 628 bytes, Stack size 200 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = PhoPdu &rArr; StrToUni &rArr; BinarySearchStr
</UL>
<BR>[Calls]<UL><LI><a href="#[1055aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PduNumber
<LI><a href="#[1055af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmEncode7bit
<LI><a href="#[1055b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrToUni
<LI><a href="#[1055bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeBufType
<LI><a href="#[1055ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize16
<LI><a href="#[1055f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
<LI><a href="#[10562d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexBuf2Asc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055a18]"></a>Bit72Bit8</STRONG> (ARM, 532 bytes, Stack size 12 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Bit72Bit8
</UL>
<BR>[Called By]<UL><LI><a href="#[1055940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10559d0]"></a>BinarySearchUni</STRONG> (ARM, 200 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BinarySearchUni
</UL>
<BR>[Called By]<UL><LI><a href="#[1055988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UniToStr
</UL>

<P><STRONG><a name="[1055988]"></a>UniToStr</STRONG> (ARM, 216 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UniToStr &rArr; BinarySearchUni
</UL>
<BR>[Calls]<UL><LI><a href="#[10559d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BinarySearchUni
</UL>
<BR>[Called By]<UL><LI><a href="#[1055940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055940]"></a>ExpPdu</STRONG> (ARM, 528 bytes, Stack size 40 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ExpPdu &rArr; UniToStr &rArr; BinarySearchUni
</UL>
<BR>[Calls]<UL><LI><a href="#[1055988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UniToStr
<LI><a href="#[1055a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bit72Bit8
<LI><a href="#[1056048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[1056090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[1056360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2HexBuf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10558f8]"></a>GetCsq</STRONG> (ARM, 100 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10558b0]"></a>IP2Char</STRONG> (ARM, 108 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = IP2Char &rArr; Algorism2Asc
</UL>
<BR>[Calls]<UL><LI><a href="#[10563f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorism2Asc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055868]"></a>Char2IP</STRONG> (ARM, 252 bytes, Stack size 40 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Char2IP &rArr; Asc2Algorism
</UL>
<BR>[Calls]<UL><LI><a href="#[1055d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1055ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize16
<LI><a href="#[1056438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2Algorism
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055820]"></a>LookBufInLength</STRONG> (ARM, 128 bytes, Stack size 12 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LookBufInLength
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10557d8]"></a>Value32</STRONG> (ARM, 92 bytes, Stack size 4 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Value32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10533c8]"></a>JugeSecond</STRONG> (ARM, 28 bytes, Stack size 0 bytes, _date.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1053260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juge
</UL>

<P><STRONG><a name="[1053380]"></a>JugeMinute</STRONG> (ARM, 28 bytes, Stack size 0 bytes, _date.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1053260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juge
</UL>

<P><STRONG><a name="[1053338]"></a>JugeHour</STRONG> (ARM, 28 bytes, Stack size 0 bytes, _date.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1053260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juge
</UL>

<P><STRONG><a name="[10532f0]"></a>Bcd2Hex</STRONG> (ARM, 68 bytes, Stack size 8 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSecond
<LI><a href="#[1052fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackMinute
<LI><a href="#[1053020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackHour
<LI><a href="#[1053068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackDate
<LI><a href="#[10530f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextSecond
<LI><a href="#[1053140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextMinute
<LI><a href="#[1053188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextHour
<LI><a href="#[10531d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextDate
<LI><a href="#[10532a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeDate
</UL>

<P><STRONG><a name="[10532a8]"></a>JugeDate</STRONG> (ARM, 396 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = JugeDate &rArr; Bcd2Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[10532f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWeek
<LI><a href="#[1053260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juge
</UL>

<P><STRONG><a name="[1053260]"></a>Juge</STRONG> (ARM, 212 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Juge &rArr; JugeDate &rArr; Bcd2Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[10532a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeDate
<LI><a href="#[1053338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeHour
<LI><a href="#[1053380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeMinute
<LI><a href="#[10533c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeSecond
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[10530b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Next
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _date.o(.constdata)
</UL>
<P><STRONG><a name="[1053218]"></a>Hex2Bcd</STRONG> (ARM, 108 bytes, Stack size 24 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSecond
<LI><a href="#[1052fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackMinute
<LI><a href="#[1053020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackHour
<LI><a href="#[1053068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackDate
<LI><a href="#[10530f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextSecond
<LI><a href="#[1053140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextMinute
<LI><a href="#[1053188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextHour
<LI><a href="#[10531d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextDate
</UL>

<P><STRONG><a name="[10531d0]"></a>NextDate</STRONG> (ARM, 408 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = NextDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1053218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWeek
<LI><a href="#[10530b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Next
<LI><a href="#[1053188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextHour
</UL>

<P><STRONG><a name="[1053188]"></a>NextHour</STRONG> (ARM, 96 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = NextHour &rArr; NextDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10531d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextDate
<LI><a href="#[1053218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[10530b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Next
<LI><a href="#[1053140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextMinute
</UL>

<P><STRONG><a name="[1053140]"></a>NextMinute</STRONG> (ARM, 96 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = NextMinute &rArr; NextHour &rArr; NextDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1053188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextHour
<LI><a href="#[1053218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[10530b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Next
<LI><a href="#[10530f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextSecond
</UL>

<P><STRONG><a name="[10530f8]"></a>NextSecond</STRONG> (ARM, 96 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = NextSecond &rArr; NextMinute &rArr; NextHour &rArr; NextDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1053140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextMinute
<LI><a href="#[1053218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[10530b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Next
</UL>

<P><STRONG><a name="[10530b0]"></a>Next</STRONG> (ARM, 120 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Next &rArr; NextSecond &rArr; NextMinute &rArr; NextHour &rArr; NextDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10530f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextSecond
<LI><a href="#[1053140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextMinute
<LI><a href="#[1053188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextHour
<LI><a href="#[10531d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextDate
<LI><a href="#[1053260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juge
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _date.o(.constdata)
</UL>
<P><STRONG><a name="[1053068]"></a>BackDate</STRONG> (ARM, 380 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BackDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1053218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[1053020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackHour
</UL>

<P><STRONG><a name="[1053020]"></a>BackHour</STRONG> (ARM, 96 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BackHour &rArr; BackDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1053068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackDate
<LI><a href="#[1053218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[1052fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackMinute
</UL>

<P><STRONG><a name="[1052fd8]"></a>BackMinute</STRONG> (ARM, 96 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BackMinute &rArr; BackHour &rArr; BackDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1053020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackHour
<LI><a href="#[1053218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[1052f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSecond
</UL>

<P><STRONG><a name="[1052f90]"></a>BackSecond</STRONG> (ARM, 96 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BackSecond &rArr; BackMinute &rArr; BackHour &rArr; BackDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1052fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackMinute
<LI><a href="#[1053218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
</UL>

<P><STRONG><a name="[1052f48]"></a>Back</STRONG> (ARM, 120 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Back &rArr; BackSecond &rArr; BackMinute &rArr; BackHour &rArr; BackDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1052f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSecond
<LI><a href="#[1052fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackMinute
<LI><a href="#[1053020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackHour
<LI><a href="#[1053068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackDate
<LI><a href="#[1053260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juge
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _date.o(.constdata)
</UL>
<P><STRONG><a name="[1052f00]"></a>GetWeek</STRONG> (ARM, 284 bytes, Stack size 24 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GetWeek &rArr; NextDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10531d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextDate
<LI><a href="#[10532a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeDate
<LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _date.o(.constdata)
</UL>
<P><STRONG><a name="[10511b8]"></a>Init</STRONG> (ARM, 268 bytes, Stack size 8 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _can.o(.data)
</UL>
<P><STRONG><a name="[1051170]"></a>ClearSem</STRONG> (ARM, 84 bytes, Stack size 24 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemQuery
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[1051008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close0
<LI><a href="#[1051050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[10510e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open0
<LI><a href="#[1051128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
</UL>

<P><STRONG><a name="[1051128]"></a>Open1</STRONG> (ARM, 192 bytes, Stack size 16 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Open1 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1051170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[1051098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[10510e0]"></a>Open0</STRONG> (ARM, 192 bytes, Stack size 16 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Open0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1051170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[1051098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[1051098]"></a>Open</STRONG> (ARM, 64 bytes, Stack size 16 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Open &rArr; Open0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[10510e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open0
<LI><a href="#[1051128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _can.o(.data)
</UL>
<P><STRONG><a name="[1051050]"></a>Close1</STRONG> (ARM, 84 bytes, Stack size 8 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Close1 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[1051170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[1050fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[1051008]"></a>Close0</STRONG> (ARM, 84 bytes, Stack size 8 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Close0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[1051170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[1050fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[1050fc0]"></a>Close</STRONG> (ARM, 52 bytes, Stack size 8 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Close &rArr; Close0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[1051008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close0
<LI><a href="#[1051050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _can.o(.data)
</UL>
<P><STRONG><a name="[1050f78]"></a>Read1</STRONG> (ARM, 188 bytes, Stack size 0 bytes, _can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1050ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[1050f30]"></a>Read0</STRONG> (ARM, 188 bytes, Stack size 0 bytes, _can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1050ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[1050ee8]"></a>Read</STRONG> (ARM, 64 bytes, Stack size 8 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Read
</UL>
<BR>[Calls]<UL><LI><a href="#[1050f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read0
<LI><a href="#[1050f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _can.o(.data)
</UL>
<P><STRONG><a name="[1050ea0]"></a>Write1</STRONG> (ARM, 112 bytes, Stack size 0 bytes, _can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1050e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[1050e58]"></a>Write0</STRONG> (ARM, 124 bytes, Stack size 16 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Write0
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[1050e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[1050e10]"></a>Write</STRONG> (ARM, 64 bytes, Stack size 16 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Write &rArr; Write0
</UL>
<BR>[Calls]<UL><LI><a href="#[1050e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write0
<LI><a href="#[1050ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _can.o(.data)
</UL>
<P><STRONG><a name="[104ec78]"></a>RTCInit</STRONG> (ARM, 80 bytes, Stack size 0 bytes, _rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104ec30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init1
</UL>

<P><STRONG><a name="[104ec30]"></a>Init1</STRONG> (ARM, 20 bytes, Stack size 4 bytes, _rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Init1
</UL>
<BR>[Calls]<UL><LI><a href="#[104ec78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCInit
</UL>
<BR>[Called By]<UL><LI><a href="#[104ebe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[104ebe8]"></a>Init</STRONG> (ARM, 104 bytes, Stack size 8 bytes, _rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[104ec30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rtc.o(.constdata)
</UL>
<P><STRONG><a name="[104eba0]"></a>Read1</STRONG> (ARM, 188 bytes, Stack size 24 bytes, _rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = Read1
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[104eb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
<LI><a href="#[104eb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[104eb58]"></a>Read</STRONG> (ARM, 64 bytes, Stack size 16 bytes, _rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104eba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rtc.o(.constdata)
</UL>
<P><STRONG><a name="[104eb10]"></a>Write1</STRONG> (ARM, 180 bytes, Stack size 24 bytes, _rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Write1 &rArr; Read1
</UL>
<BR>[Calls]<UL><LI><a href="#[104eba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>
<BR>[Called By]<UL><LI><a href="#[104eac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[104eac8]"></a>Write</STRONG> (ARM, 64 bytes, Stack size 16 bytes, _rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = Write &rArr; Write1 &rArr; Read1
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104eb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rtc.o(.constdata)
</UL>
<P><STRONG><a name="[104cad8]"></a>Open</STRONG> (ARM, 172 bytes, Stack size 8 bytes, _spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Open &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104ca90]"></a>DelaySpi</STRONG> (ARM, 28 bytes, Stack size 0 bytes, _spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104ca48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start
</UL>

<P><STRONG><a name="[104ca48]"></a>Start</STRONG> (ARM, 116 bytes, Stack size 16 bytes, _spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Start &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104ca90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelaySpi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104ca00]"></a>RwSpi</STRONG> (ARM, 180 bytes, Stack size 4 bytes, _spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RwSpi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104c9b8]"></a>Write</STRONG> (ARM, 144 bytes, Stack size 4 bytes, _spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104c970]"></a>Read</STRONG> (ARM, 172 bytes, Stack size 0 bytes, _spi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104c928]"></a>JugeBuf</STRONG> (ARM, 188 bytes, Stack size 0 bytes, _spi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104c8e0]"></a>JugeByte</STRONG> (ARM, 172 bytes, Stack size 0 bytes, _spi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104c898]"></a>End</STRONG> (ARM, 84 bytes, Stack size 8 bytes, _spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = End &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104c850]"></a>Close</STRONG> (ARM, 32 bytes, Stack size 0 bytes, _spi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104ac70]"></a>Init</STRONG> (ARM, 628 bytes, Stack size 8 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _uart.o(.constdata)
</UL>
<P><STRONG><a name="[104ac28]"></a>ClearSem</STRONG> (ARM, 84 bytes, Stack size 24 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemQuery
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[104a910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close0
<LI><a href="#[104a958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[104a9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close2
<LI><a href="#[104a9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close3
<LI><a href="#[104aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open0
<LI><a href="#[104ab08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[104ab50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open2
<LI><a href="#[104ab98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open3
<LI><a href="#[104abe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open4
</UL>

<P><STRONG><a name="[104abe0]"></a>Open4</STRONG> (ARM, 696 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Open4 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[104aa78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[104ab98]"></a>Open3</STRONG> (ARM, 536 bytes, Stack size 24 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Open3 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[104aa78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[104ab50]"></a>Open2</STRONG> (ARM, 536 bytes, Stack size 24 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Open2 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[104aa78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[104ab08]"></a>Open1</STRONG> (ARM, 548 bytes, Stack size 24 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Open1 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[104aa78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[104aac0]"></a>Open0</STRONG> (ARM, 744 bytes, Stack size 24 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Open0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[104aa78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[104aa78]"></a>Open</STRONG> (ARM, 124 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = Open &rArr; Open0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[104aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open0
<LI><a href="#[104ab08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[104ab50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open2
<LI><a href="#[104ab98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open3
<LI><a href="#[104abe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _uart.o(.constdata)
</UL>
<P><STRONG><a name="[104aa30]"></a>Close4</STRONG> (ARM, 48 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[104a9e8]"></a>Close3</STRONG> (ARM, 96 bytes, Stack size 8 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Close3 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[104ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[104a8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[104a9a0]"></a>Close2</STRONG> (ARM, 92 bytes, Stack size 8 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Close2 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[104ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[104a8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[104a958]"></a>Close1</STRONG> (ARM, 92 bytes, Stack size 8 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Close1 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[104ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[104a8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[104a910]"></a>Close0</STRONG> (ARM, 92 bytes, Stack size 8 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Close0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[104ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[104a8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[104a8c8]"></a>Close</STRONG> (ARM, 100 bytes, Stack size 8 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Close &rArr; Close0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[104a910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close0
<LI><a href="#[104a958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[104a9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close2
<LI><a href="#[104a9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close3
<LI><a href="#[104aa30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _uart.o(.constdata)
</UL>
<P><STRONG><a name="[104a880]"></a>Receive4Byte</STRONG> (ARM, 120 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read4
</UL>

<P><STRONG><a name="[104a838]"></a>Read4</STRONG> (ARM, 80 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read4
</UL>
<BR>[Calls]<UL><LI><a href="#[104a880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive4Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[104a5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[104a7f0]"></a>Receive3Byte</STRONG> (ARM, 120 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read3
</UL>

<P><STRONG><a name="[104a7a8]"></a>Read3</STRONG> (ARM, 80 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read3
</UL>
<BR>[Calls]<UL><LI><a href="#[104a7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive3Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[104a5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[104a760]"></a>Receive2Byte</STRONG> (ARM, 120 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read2
</UL>

<P><STRONG><a name="[104a718]"></a>Read2</STRONG> (ARM, 80 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read2
</UL>
<BR>[Calls]<UL><LI><a href="#[104a760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive2Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[104a5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[104a6d0]"></a>Receive1Byte</STRONG> (ARM, 120 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>

<P><STRONG><a name="[104a688]"></a>Read1</STRONG> (ARM, 80 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read1
</UL>
<BR>[Calls]<UL><LI><a href="#[104a6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[104a5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[104a640]"></a>Receive0Byte</STRONG> (ARM, 120 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read0
</UL>

<P><STRONG><a name="[104a5f8]"></a>Read0</STRONG> (ARM, 80 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read0
</UL>
<BR>[Calls]<UL><LI><a href="#[104a640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive0Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[104a5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[104a5b0]"></a>Read</STRONG> (ARM, 148 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Read &rArr; Read0
</UL>
<BR>[Calls]<UL><LI><a href="#[104a5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read0
<LI><a href="#[104a688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
<LI><a href="#[104a718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read2
<LI><a href="#[104a7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read3
<LI><a href="#[104a838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _uart.o(.constdata)
</UL>
<P><STRONG><a name="[104a568]"></a>Write4</STRONG> (ARM, 124 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[104a520]"></a>Write3</STRONG> (ARM, 68 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[104a4d8]"></a>Write2</STRONG> (ARM, 68 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[104a490]"></a>Write1</STRONG> (ARM, 68 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[104a448]"></a>Write0</STRONG> (ARM, 68 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[104a400]"></a>Write</STRONG> (ARM, 148 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Write
</UL>
<BR>[Calls]<UL><LI><a href="#[104a448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write0
<LI><a href="#[104a490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
<LI><a href="#[104a4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write2
<LI><a href="#[104a520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write3
<LI><a href="#[104a568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _uart.o(.constdata)
</UL>
<P><STRONG><a name="[1047dd8]"></a>Init</STRONG> (ARM, 160 bytes, Stack size 8 bytes, adchard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adchard.o(.constdata)
</UL>
<P><STRONG><a name="[1047d90]"></a>Open</STRONG> (ARM, 708 bytes, Stack size 24 bytes, adchard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adchard.o(.constdata)
</UL>
<P><STRONG><a name="[1047d48]"></a>Close</STRONG> (ARM, 172 bytes, Stack size 16 bytes, adchard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adchard.o(.constdata)
</UL>
<P><STRONG><a name="[1047d00]"></a>Read</STRONG> (ARM, 976 bytes, Stack size 24 bytes, adchard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adchard.o(.constdata)
</UL>
<P><STRONG><a name="[1045858]"></a>Init</STRONG> (ARM, 72 bytes, Stack size 8 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ds18b20.o(.constdata)
</UL>
<P><STRONG><a name="[1045810]"></a>Open</STRONG> (ARM, 260 bytes, Stack size 16 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ds18b20.o(.constdata)
</UL>
<P><STRONG><a name="[10457c8]"></a>DS18B20crc8</STRONG> (ARM, 60 bytes, Stack size 8 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DS18B20crc8
</UL>
<BR>[Called By]<UL><LI><a href="#[1045588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadTemp
</UL>

<P><STRONG><a name="[1045780]"></a>delay_10us</STRONG> (ARM, 40 bytes, Stack size 0 bytes, ds18b20.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1045588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadTemp
<LI><a href="#[1045618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20WriteBit
<LI><a href="#[1045738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20Reset
</UL>

<P><STRONG><a name="[1045738]"></a>DS18B20Reset</STRONG> (ARM, 212 bytes, Stack size 16 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DS18B20Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[1045780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_10us
</UL>
<BR>[Called By]<UL><LI><a href="#[1045588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadTemp
</UL>

<P><STRONG><a name="[10456f0]"></a>delay_1us</STRONG> (ARM, 40 bytes, Stack size 0 bytes, ds18b20.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10455d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20WriteByte
<LI><a href="#[1045618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20WriteBit
<LI><a href="#[1045660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadByte
<LI><a href="#[10456a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadBit
</UL>

<P><STRONG><a name="[10456a8]"></a>DS18B20ReadBit</STRONG> (ARM, 244 bytes, Stack size 16 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DS18B20ReadBit
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[10456f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[1045660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadByte
</UL>

<P><STRONG><a name="[1045660]"></a>DS18B20ReadByte</STRONG> (ARM, 96 bytes, Stack size 16 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DS18B20ReadByte &rArr; DS18B20ReadBit
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[10456a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadBit
<LI><a href="#[10456f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[1045588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadTemp
</UL>

<P><STRONG><a name="[1045618]"></a>DS18B20WriteBit</STRONG> (ARM, 216 bytes, Stack size 16 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DS18B20WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[10456f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
<LI><a href="#[1045780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_10us
</UL>
<BR>[Called By]<UL><LI><a href="#[10455d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20WriteByte
</UL>

<P><STRONG><a name="[10455d0]"></a>DS18B20WriteByte</STRONG> (ARM, 76 bytes, Stack size 16 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DS18B20WriteByte &rArr; DS18B20WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1045618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20WriteBit
<LI><a href="#[10456f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[1045588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadTemp
</UL>

<P><STRONG><a name="[1045588]"></a>DS18B20ReadTemp</STRONG> (ARM, 332 bytes, Stack size 40 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DS18B20ReadTemp &rArr; DS18B20WriteByte &rArr; DS18B20WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[10455d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20WriteByte
<LI><a href="#[1045660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadByte
<LI><a href="#[1045738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20Reset
<LI><a href="#[1045780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_10us
<LI><a href="#[10457c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20crc8
</UL>
<BR>[Called By]<UL><LI><a href="#[1045540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[1045540]"></a>Read</STRONG> (ARM, 248 bytes, Stack size 24 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Read &rArr; DS18B20ReadTemp &rArr; DS18B20WriteByte &rArr; DS18B20WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1045588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadTemp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ds18b20.o(.constdata)
</UL>
<P><STRONG><a name="[10454f8]"></a>Close</STRONG> (ARM, 168 bytes, Stack size 16 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ds18b20.o(.constdata)
</UL>
<P><STRONG><a name="[1043038]"></a>Init</STRONG> (ARM, 36 bytes, Stack size 0 bytes, huaiweigprs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042ff0]"></a>Read</STRONG> (ARM, 216 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042fa8]"></a>Huawei_CloseShow</STRONG> (ARM, 104 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_CloseShow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042f60]"></a>ClearNoDisplay</STRONG> (ARM, 152 bytes, Stack size 16 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ClearNoDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[10424b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SeeCGDCONT
<LI><a href="#[1042540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SEEIPCLOSE
<LI><a href="#[1042618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_CLCC
<LI><a href="#[10426a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_DNSR
<LI><a href="#[10426f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_JugeETCPIP
<LI><a href="#[1042738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_IPDR
<LI><a href="#[1042780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SeeDataRead
<LI><a href="#[1042930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_IMEI
<LI><a href="#[1042a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_ATD
<LI><a href="#[1042a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_Reg
<LI><a href="#[1042c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SQ
<LI><a href="#[1042c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SeeCarrier
<LI><a href="#[1042d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SeeTxtOrPdu
<LI><a href="#[1042db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_GetMessage
<LI><a href="#[1042df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_GetCenterNumber
<LI><a href="#[1042e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_GetModermCard
<LI><a href="#[1042ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_GetModermState
<LI><a href="#[1042f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChipID
</UL>

<P><STRONG><a name="[1042f18]"></a>GetChipID</STRONG> (ARM, 172 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetChipID &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042ed0]"></a>Huawei_GetModermState</STRONG> (ARM, 232 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Huawei_GetModermState &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042e88]"></a>Huawei_GetModermCard</STRONG> (ARM, 160 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Huawei_GetModermCard &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042e40]"></a>SeekChar</STRONG> (ARM, 96 bytes, Stack size 8 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[10424b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SeeCGDCONT
<LI><a href="#[1042540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SEEIPCLOSE
<LI><a href="#[1042618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_CLCC
<LI><a href="#[10426f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_JugeETCPIP
<LI><a href="#[1042738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_IPDR
<LI><a href="#[1042780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SeeDataRead
<LI><a href="#[1042a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_Reg
<LI><a href="#[1042c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SQ
<LI><a href="#[1042db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_GetMessage
<LI><a href="#[1042df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_GetCenterNumber
</UL>

<P><STRONG><a name="[1042df8]"></a>Huawei_GetCenterNumber</STRONG> (ARM, 304 bytes, Stack size 40 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Huawei_GetCenterNumber &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042db0]"></a>Huawei_GetMessage</STRONG> (ARM, 672 bytes, Stack size 48 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Huawei_GetMessage &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042d68]"></a>Huawei_SetTxtOrPdu</STRONG> (ARM, 216 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_SetTxtOrPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042d20]"></a>Huawei_SeeTxtOrPdu</STRONG> (ARM, 208 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Huawei_SeeTxtOrPdu &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042cd8]"></a>Huawei_MsgSend</STRONG> (ARM, 156 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_MsgSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042c90]"></a>Huawei_MsgSendData</STRONG> (ARM, 160 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_MsgSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042c48]"></a>Huawei_SeeCarrier</STRONG> (ARM, 244 bytes, Stack size 40 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Huawei_SeeCarrier &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042c00]"></a>Huawei_SQ</STRONG> (ARM, 260 bytes, Stack size 56 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Huawei_SQ &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042bb8]"></a>Huawei_DelMsg</STRONG> (ARM, 204 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_DelMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042b70]"></a>Huawei_Set_Mem</STRONG> (ARM, 132 bytes, Stack size 48 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Huawei_Set_Mem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042b28]"></a>Huawei_MessSet</STRONG> (ARM, 128 bytes, Stack size 40 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Huawei_MessSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042ae0]"></a>Huawei_Upadate</STRONG> (ARM, 112 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_Upadate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042a98]"></a>Huawei_Reg</STRONG> (ARM, 284 bytes, Stack size 40 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Huawei_Reg &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042a50]"></a>Huawei_CLIP</STRONG> (ARM, 112 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_CLIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042a08]"></a>Huawei_ATD</STRONG> (ARM, 332 bytes, Stack size 40 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Huawei_ATD &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10429c0]"></a>Huawei_Chup</STRONG> (ARM, 116 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_Chup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042978]"></a>Huawei_ATA</STRONG> (ARM, 240 bytes, Stack size 40 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Huawei_ATA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042930]"></a>Huawei_IMEI</STRONG> (ARM, 180 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Huawei_IMEI &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10428e8]"></a>Huawei_CGDCONT</STRONG> (ARM, 236 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_CGDCONT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10428a0]"></a>Huawei_Etcpip</STRONG> (ARM, 404 bytes, Stack size 40 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Huawei_Etcpip
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042858]"></a>Huawei_IOMODE</STRONG> (ARM, 108 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_IOMODE
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042810]"></a>Huawei_IPOPENX</STRONG> (ARM, 600 bytes, Stack size 56 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Huawei_IPOPENX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10427c8]"></a>Huawei_IPSENDX</STRONG> (ARM, 384 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_IPSENDX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042780]"></a>Huawei_SeeDataRead</STRONG> (ARM, 276 bytes, Stack size 56 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Huawei_SeeDataRead &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042738]"></a>Huawei_IPDR</STRONG> (ARM, 716 bytes, Stack size 56 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Huawei_IPDR &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10426f0]"></a>Huawei_JugeETCPIP</STRONG> (ARM, 936 bytes, Stack size 64 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Huawei_JugeETCPIP &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10426a8]"></a>Huawei_DNSR</STRONG> (ARM, 248 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Huawei_DNSR &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042660]"></a>Huawei_IPR</STRONG> (ARM, 156 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_IPR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042618]"></a>Huawei_CLCC</STRONG> (ARM, 932 bytes, Stack size 56 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Huawei_CLCC &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10425d0]"></a>Huawei_IPCLOSE</STRONG> (ARM, 204 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_IPCLOSE
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042588]"></a>Huawei_LogOnTCPIP</STRONG> (ARM, 104 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_LogOnTCPIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042540]"></a>Huawei_SEEIPCLOSE</STRONG> (ARM, 408 bytes, Stack size 56 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Huawei_SEEIPCLOSE &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10424f8]"></a>Huawei_PowerDown</STRONG> (ARM, 72 bytes, Stack size 24 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Huawei_PowerDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10424b0]"></a>Huawei_SeeCGDCONT</STRONG> (ARM, 420 bytes, Stack size 56 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Huawei_SeeCGDCONT &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042468]"></a>Huawei_SendExtension</STRONG> (ARM, 152 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_SendExtension
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042420]"></a>Huawei_SetVolume</STRONG> (ARM, 116 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_SetVolume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[124f4f8]"></a>Init</STRONG> (ARM, 36 bytes, Stack size 8 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprshard.o(.constdata)
</UL>
<P><STRONG><a name="[124f4b0]"></a>InitModerm</STRONG> (ARM, 92 bytes, Stack size 16 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InitModerm
</UL>
<BR>[Called By]<UL><LI><a href="#[124f228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp
</UL>

<P><STRONG><a name="[124f468]"></a>ModermCom1</STRONG> (ARM, 980 bytes, Stack size 80 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[124f420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom
</UL>

<P><STRONG><a name="[124f420]"></a>ModermCom</STRONG> (ARM, 108 bytes, Stack size 32 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ModermCom &rArr; ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[124f468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom1
</UL>
<BR>[Called By]<UL><LI><a href="#[124f2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBpsAT
<LI><a href="#[124f300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBps
<LI><a href="#[124f348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseShow
<LI><a href="#[124f390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChipID
</UL>

<P><STRONG><a name="[124f3d8]"></a>ClearNoDisplay</STRONG> (ARM, 152 bytes, Stack size 16 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ClearNoDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[124f390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChipID
</UL>

<P><STRONG><a name="[124f390]"></a>GetChipID</STRONG> (ARM, 132 bytes, Stack size 16 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GetChipID &rArr; ModermCom &rArr; ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[124f3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
<LI><a href="#[124f420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom
</UL>
<BR>[Called By]<UL><LI><a href="#[124f270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChipID
</UL>

<P><STRONG><a name="[124f348]"></a>CloseShow</STRONG> (ARM, 36 bytes, Stack size 8 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CloseShow &rArr; ModermCom &rArr; ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[124f420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom
</UL>
<BR>[Called By]<UL><LI><a href="#[124f270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChipID
</UL>

<P><STRONG><a name="[124f300]"></a>SetBps</STRONG> (ARM, 88 bytes, Stack size 24 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SetBps &rArr; ModermCom &rArr; ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[124f420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom
</UL>
<BR>[Called By]<UL><LI><a href="#[124f270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChipID
</UL>

<P><STRONG><a name="[124f2b8]"></a>GetBpsAT</STRONG> (ARM, 36 bytes, Stack size 8 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GetBpsAT &rArr; ModermCom &rArr; ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[124f420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom
</UL>
<BR>[Called By]<UL><LI><a href="#[124f270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChipID
</UL>

<P><STRONG><a name="[124f270]"></a>LookChipID</STRONG> (ARM, 388 bytes, Stack size 40 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = LookChipID &rArr; SetBps &rArr; ModermCom &rArr; ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[124f2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBpsAT
<LI><a href="#[124f300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBps
<LI><a href="#[124f348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseShow
<LI><a href="#[124f390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChipID
</UL>
<BR>[Called By]<UL><LI><a href="#[124f228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp
</UL>

<P><STRONG><a name="[124f228]"></a>PowerUp</STRONG> (ARM, 176 bytes, Stack size 8 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = PowerUp &rArr; LookChipID &rArr; SetBps &rArr; ModermCom &rArr; ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[124f270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChipID
<LI><a href="#[124f4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitModerm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprshard.o(.constdata)
</UL>
<P><STRONG><a name="[124f1e0]"></a>PowerDown</STRONG> (ARM, 80 bytes, Stack size 8 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PowerDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprshard.o(.constdata)
</UL>
<P><STRONG><a name="[124f198]"></a>Read</STRONG> (ARM, 72 bytes, Stack size 32 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprshard.o(.constdata)
</UL>
<P><STRONG><a name="[124c250]"></a>Init</STRONG> (ARM, 340 bytes, Stack size 16 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[124c208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init1
</UL>

<P><STRONG><a name="[124c208]"></a>Init1</STRONG> (ARM, 16 bytes, Stack size 8 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Init1 &rArr; Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[124c250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> less.o(.constdata)
</UL>
<P><STRONG><a name="[124c1c0]"></a>ReadData</STRONG> (ARM, 48 bytes, Stack size 16 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[124c178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreeData
</UL>

<P><STRONG><a name="[124c178]"></a>AgreeData</STRONG> (ARM, 432 bytes, Stack size 32 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[124c1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[124bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[124c058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configuration
</UL>

<P><STRONG><a name="[124c130]"></a>WriteData</STRONG> (ARM, 48 bytes, Stack size 16 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[124c0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
</UL>

<P><STRONG><a name="[124c0e8]"></a>SendData</STRONG> (ARM, 196 bytes, Stack size 24 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SendData &rArr; WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[124c130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[124bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[124c058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configuration
</UL>

<P><STRONG><a name="[124c0a0]"></a>ClsData</STRONG> (ARM, 52 bytes, Stack size 8 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClsData
</UL>
<BR>[Called By]<UL><LI><a href="#[124bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[124c058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configuration
</UL>

<P><STRONG><a name="[124c058]"></a>Configuration</STRONG> (ARM, 468 bytes, Stack size 64 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Configuration &rArr; AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[124c0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsData
<LI><a href="#[124c0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
<LI><a href="#[124c178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreeData
</UL>
<BR>[Called By]<UL><LI><a href="#[124bf38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[124bfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[124c010]"></a>Lookfd</STRONG> (ARM, 56 bytes, Stack size 0 bytes, less.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[124bfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[124bfc8]"></a>Open</STRONG> (ARM, 312 bytes, Stack size 24 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Open &rArr; Configuration &rArr; AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[124c010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lookfd
<LI><a href="#[124c058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[124bf80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
</UL>

<P><STRONG><a name="[124bf80]"></a>Open1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Open1 &rArr; Open &rArr; Configuration &rArr; AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[124bfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> less.o(.constdata)
</UL>
<P><STRONG><a name="[124bf38]"></a>Close</STRONG> (ARM, 120 bytes, Stack size 16 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Close &rArr; Configuration &rArr; AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[124c058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[124bef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
</UL>

<P><STRONG><a name="[124bef0]"></a>Close1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Close1 &rArr; Close &rArr; Configuration &rArr; AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[124bf38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> less.o(.constdata)
</UL>
<P><STRONG><a name="[124bea8]"></a>LookID</STRONG> (ARM, 96 bytes, Stack size 0 bytes, less.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[124be18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExplainState
<LI><a href="#[124be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExplainData
</UL>

<P><STRONG><a name="[124be60]"></a>ExplainData</STRONG> (ARM, 232 bytes, Stack size 36 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ExplainData
</UL>
<BR>[Calls]<UL><LI><a href="#[124bea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookID
</UL>
<BR>[Called By]<UL><LI><a href="#[124bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[124be18]"></a>ExplainState</STRONG> (ARM, 344 bytes, Stack size 36 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ExplainState
</UL>
<BR>[Calls]<UL><LI><a href="#[124bea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookID
</UL>
<BR>[Called By]<UL><LI><a href="#[124bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[124bdd0]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[124bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[124bd88]"></a>Read</STRONG> (ARM, 632 bytes, Stack size 32 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Read &rArr; AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[124bdd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
<LI><a href="#[124be18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExplainState
<LI><a href="#[124be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExplainData
<LI><a href="#[124c0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsData
<LI><a href="#[124c0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
<LI><a href="#[124c178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreeData
</UL>
<BR>[Called By]<UL><LI><a href="#[124bd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>

<P><STRONG><a name="[124bd40]"></a>Read1</STRONG> (ARM, 80 bytes, Stack size 24 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Read1 &rArr; Read &rArr; AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[124bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> less.o(.constdata)
</UL>
<P><STRONG><a name="[124bcf8]"></a>GetState</STRONG> (ARM, 104 bytes, Stack size 16 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[124bcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState1
</UL>

<P><STRONG><a name="[124bcb0]"></a>GetState1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetState1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[124bcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> less.o(.constdata)
</UL>
<P><STRONG><a name="[1248e50]"></a>Init</STRONG> (ARM, 144 bytes, Stack size 8 bytes, acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> acc.o(.constdata)
</UL>
<P><STRONG><a name="[1248e08]"></a>Open</STRONG> (ARM, 112 bytes, Stack size 16 bytes, acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> acc.o(.constdata)
</UL>
<P><STRONG><a name="[1248dc0]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> acc.o(.constdata)
</UL>
<P><STRONG><a name="[1248d78]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[1248d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[1248d30]"></a>Read</STRONG> (ARM, 256 bytes, Stack size 32 bytes, acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1248d78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> acc.o(.constdata)
</UL>
<P><STRONG><a name="[1246230]"></a>Init</STRONG> (ARM, 104 bytes, Stack size 8 bytes, oil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oil.o(.constdata)
</UL>
<P><STRONG><a name="[12461e8]"></a>Open</STRONG> (ARM, 240 bytes, Stack size 32 bytes, oil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oil.o(.constdata)
</UL>
<P><STRONG><a name="[12461a0]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, oil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oil.o(.constdata)
</UL>
<P><STRONG><a name="[1246158]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, oil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[1246110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[1246110]"></a>Read</STRONG> (ARM, 480 bytes, Stack size 40 bytes, oil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1246158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oil.o(.constdata)
</UL>
<P><STRONG><a name="[1242b78]"></a>Init</STRONG> (ARM, 132 bytes, Stack size 8 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[1242b30]"></a>Open</STRONG> (ARM, 596 bytes, Stack size 32 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[1242ae8]"></a>Close</STRONG> (ARM, 212 bytes, Stack size 16 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[1242aa0]"></a>Read</STRONG> (ARM, 184 bytes, Stack size 24 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[1242a58]"></a>GetState</STRONG> (ARM, 264 bytes, Stack size 24 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetState &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[1242a10]"></a>GetSi</STRONG> (ARM, 92 bytes, Stack size 16 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetSi &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[12429c8]"></a>Get</STRONG> (ARM, 164 bytes, Stack size 24 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Get &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[1242980]"></a>GetPar2ID</STRONG> (ARM, 160 bytes, Stack size 24 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetPar2ID &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[1242938]"></a>GetID2Par</STRONG> (ARM, 148 bytes, Stack size 16 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetID2Par &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[12fec20]"></a>Init</STRONG> (ARM, 232 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.constdata)
</UL>
<P><STRONG><a name="[12febd8]"></a>Open</STRONG> (ARM, 140 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.constdata)
</UL>
<P><STRONG><a name="[12feb90]"></a>Close</STRONG> (ARM, 152 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.constdata)
</UL>
<P><STRONG><a name="[12feb48]"></a>SeekChar</STRONG> (ARM, 96 bytes, Stack size 8 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[12fe8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_LocationTrue
<LI><a href="#[12fe908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_GetTime
<LI><a href="#[12fe950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Lat
<LI><a href="#[12fe998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Long
<LI><a href="#[12fe9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Speed
<LI><a href="#[12fea28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Angle
<LI><a href="#[12feab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPGGA_StarNumber
<LI><a href="#[12feb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPGGA_Height
</UL>

<P><STRONG><a name="[12feb00]"></a>Parse_GPGGA_Height</STRONG> (ARM, 232 bytes, Stack size 40 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Parse_GPGGA_Height &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12feb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[12fea70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPGGA
</UL>

<P><STRONG><a name="[12feab8]"></a>Parse_GPGGA_StarNumber</STRONG> (ARM, 196 bytes, Stack size 32 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Parse_GPGGA_StarNumber &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12feb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[12fea70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPGGA
</UL>

<P><STRONG><a name="[12fea70]"></a>Parse_GPGGA</STRONG> (ARM, 92 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Parse_GPGGA &rArr; Parse_GPGGA_Height &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12feab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPGGA_StarNumber
<LI><a href="#[12feb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPGGA_Height
</UL>
<BR>[Called By]<UL><LI><a href="#[12fe7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsCommInput
</UL>

<P><STRONG><a name="[12fea28]"></a>Parse_GPRMC_Angle</STRONG> (ARM, 192 bytes, Stack size 32 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Parse_GPRMC_Angle &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12feb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[12fe878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC
</UL>

<P><STRONG><a name="[12fe9e0]"></a>Parse_GPRMC_Speed</STRONG> (ARM, 168 bytes, Stack size 32 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Parse_GPRMC_Speed &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12feb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[12fe878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC
</UL>

<P><STRONG><a name="[12fe998]"></a>Parse_GPRMC_Long</STRONG> (ARM, 356 bytes, Stack size 56 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = Parse_GPRMC_Long &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12feb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12fe878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC
</UL>

<P><STRONG><a name="[12fe950]"></a>Parse_GPRMC_Lat</STRONG> (ARM, 340 bytes, Stack size 56 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = Parse_GPRMC_Lat &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12feb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12fe878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC
</UL>

<P><STRONG><a name="[12fe908]"></a>Parse_GPRMC_GetTime</STRONG> (ARM, 356 bytes, Stack size 32 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Parse_GPRMC_GetTime &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12feb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[12fe878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC
</UL>

<P><STRONG><a name="[12fe8c0]"></a>Parse_GPRMC_LocationTrue</STRONG> (ARM, 112 bytes, Stack size 20 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Parse_GPRMC_LocationTrue &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12feb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[12fe878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC
</UL>

<P><STRONG><a name="[12fe878]"></a>Parse_GPRMC</STRONG> (ARM, 320 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = Parse_GPRMC &rArr; Parse_GPRMC_Lat &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12fe8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_LocationTrue
<LI><a href="#[12fe908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_GetTime
<LI><a href="#[12fe950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Lat
<LI><a href="#[12fe998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Long
<LI><a href="#[12fe9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Speed
<LI><a href="#[12fea28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Angle
</UL>
<BR>[Called By]<UL><LI><a href="#[12fe7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsCommInput
</UL>

<P><STRONG><a name="[12fe830]"></a>JugeOrder</STRONG> (ARM, 512 bytes, Stack size 40 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = JugeOrder &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[196cd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memchr (via Veneer)
<LI><a href="#[196cee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12fe7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsCommInput
</UL>

<P><STRONG><a name="[12fe7e8]"></a>GpsCommInput</STRONG> (ARM, 268 bytes, Stack size 24 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GpsCommInput &rArr; Parse_GPRMC &rArr; Parse_GPRMC_Lat &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12fe830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeOrder
<LI><a href="#[12fe878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC
<LI><a href="#[12fea70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPGGA
</UL>
<BR>[Called By]<UL><LI><a href="#[12fe7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12fe7a0]"></a>Read</STRONG> (ARM, 164 bytes, Stack size 32 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = Read &rArr; GpsCommInput &rArr; Parse_GPRMC &rArr; Parse_GPRMC_Lat &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12fe7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsCommInput
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.constdata)
</UL>
<P><STRONG><a name="[12fe758]"></a>GetState</STRONG> (ARM, 84 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetState &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.constdata)
</UL>
<P><STRONG><a name="[12fa9e0]"></a>Init</STRONG> (ARM, 80 bytes, Stack size 8 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12fa998]"></a>Open</STRONG> (ARM, 188 bytes, Stack size 24 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12fa950]"></a>CommType2App</STRONG> (ARM, 584 bytes, Stack size 40 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CommType2App
</UL>
<BR>[Called By]<UL><LI><a href="#[12fa8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Agree
</UL>

<P><STRONG><a name="[12fa908]"></a>AgreeData</STRONG> (ARM, 240 bytes, Stack size 32 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AgreeData
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[12fa8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Agree
</UL>

<P><STRONG><a name="[12fa8c0]"></a>Agree</STRONG> (ARM, 892 bytes, Stack size 520 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = Agree &rArr; CommType2App
</UL>
<BR>[Calls]<UL><LI><a href="#[12fa908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreeData
<LI><a href="#[12fa950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommType2App
</UL>
<BR>[Called By]<UL><LI><a href="#[12fa878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12fa878]"></a>Read</STRONG> (ARM, 304 bytes, Stack size 40 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = Read &rArr; Agree &rArr; CommType2App
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[12fa8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Agree
</UL>
<BR>[Called By]<UL><LI><a href="#[12fa830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>

<P><STRONG><a name="[12fa830]"></a>Read1</STRONG> (ARM, 80 bytes, Stack size 24 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = Read1 &rArr; Read &rArr; Agree &rArr; CommType2App
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12fa878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12fa7e8]"></a>Close</STRONG> (ARM, 88 bytes, Stack size 16 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12fa7a0]"></a>Send</STRONG> (ARM, 256 bytes, Stack size 32 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Send
</UL>
<BR>[Called By]<UL><LI><a href="#[12fa4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_ParAnswer
<LI><a href="#[12fa560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_ConInfor
<LI><a href="#[12fa5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_HostSoft
<LI><a href="#[12fa5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_InitOver
<LI><a href="#[12fa638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_InitStart
<LI><a href="#[12fa680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_Phone
<LI><a href="#[12fa6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_SysInfor
<LI><a href="#[12fa710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_DeliverCentr
<LI><a href="#[12fa758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_Answer
</UL>

<P><STRONG><a name="[12fa758]"></a>Host_Answer</STRONG> (ARM, 68 bytes, Stack size 24 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Host_Answer &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12fa7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12fa710]"></a>Host_DeliverCentr</STRONG> (ARM, 48 bytes, Stack size 16 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Host_DeliverCentr &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12fa7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12fa6c8]"></a>Host_SysInfor</STRONG> (ARM, 508 bytes, Stack size 40 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Host_SysInfor &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12fa7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12fa680]"></a>Host_Phone</STRONG> (ARM, 140 bytes, Stack size 48 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Host_Phone &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12fa7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12fa638]"></a>Host_InitStart</STRONG> (ARM, 40 bytes, Stack size 16 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Host_InitStart &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12fa7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12fa5f0]"></a>Host_InitOver</STRONG> (ARM, 40 bytes, Stack size 16 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Host_InitOver &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12fa7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12fa5a8]"></a>Host_HostSoft</STRONG> (ARM, 56 bytes, Stack size 24 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Host_HostSoft &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12fa7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12fa560]"></a>Host_ConInfor</STRONG> (ARM, 164 bytes, Stack size 120 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Host_ConInfor &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12fa7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12fa518]"></a>App2CommType</STRONG> (ARM, 728 bytes, Stack size 32 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = App2CommType
</UL>
<BR>[Called By]<UL><LI><a href="#[12fa4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_ParAnswer
</UL>

<P><STRONG><a name="[12fa4d0]"></a>Host_ParAnswer</STRONG> (ARM, 276 bytes, Stack size 544 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = Host_ParAnswer &rArr; App2CommType
</UL>
<BR>[Calls]<UL><LI><a href="#[12fa518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App2CommType
<LI><a href="#[12fa7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12f67f8]"></a>Init</STRONG> (ARM, 192 bytes, Stack size 8 bytes, temperture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temperture.o(.constdata)
</UL>
<P><STRONG><a name="[12f67b0]"></a>Open</STRONG> (ARM, 516 bytes, Stack size 24 bytes, temperture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temperture.o(.constdata)
</UL>
<P><STRONG><a name="[12f6768]"></a>Close</STRONG> (ARM, 144 bytes, Stack size 16 bytes, temperture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temperture.o(.constdata)
</UL>
<P><STRONG><a name="[12f6720]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, temperture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[12f66d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12f66d8]"></a>Read</STRONG> (ARM, 268 bytes, Stack size 40 bytes, temperture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12f6720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temperture.o(.constdata)
</UL>
<P><STRONG><a name="[12f6690]"></a>GetState</STRONG> (ARM, 116 bytes, Stack size 16 bytes, temperture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetState &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temperture.o(.constdata)
</UL>
<P><STRONG><a name="[12f33c8]"></a>Init</STRONG> (ARM, 152 bytes, Stack size 8 bytes, mileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mileage.o(.constdata)
</UL>
<P><STRONG><a name="[12f3380]"></a>Open</STRONG> (ARM, 260 bytes, Stack size 16 bytes, mileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mileage.o(.constdata)
</UL>
<P><STRONG><a name="[12f3338]"></a>Close</STRONG> (ARM, 116 bytes, Stack size 16 bytes, mileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mileage.o(.constdata)
</UL>
<P><STRONG><a name="[12f32f0]"></a>CalcMil</STRONG> (ARM, 1172 bytes, Stack size 240 bytes, mileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = CalcMil &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1968c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[1968f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1969388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[19696f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[1969970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[1969bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[196a3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[196a9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[196ab90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[196ae28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[196b340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[196b828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[12f3260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12f32a8]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, mileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[12f3260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12f3260]"></a>Read</STRONG> (ARM, 848 bytes, Stack size 64 bytes, mileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = Read &rArr; CalcMil &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12f32a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
<LI><a href="#[12f32f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[196a0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mileage.o(.constdata)
</UL>
<P><STRONG><a name="[12f0108]"></a>Init</STRONG> (ARM, 120 bytes, Stack size 8 bytes, gprstzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprstzxy.o(.constdata)
</UL>
<P><STRONG><a name="[12f00c0]"></a>Open</STRONG> (ARM, 196 bytes, Stack size 16 bytes, gprstzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprstzxy.o(.constdata)
</UL>
<P><STRONG><a name="[12f0078]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, gprstzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprstzxy.o(.constdata)
</UL>
<P><STRONG><a name="[12f0030]"></a>Read</STRONG> (ARM, 212 bytes, Stack size 32 bytes, gprstzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprstzxy.o(.constdata)
</UL>
<P><STRONG><a name="[13ac008]"></a>Init</STRONG> (ARM, 120 bytes, Stack size 8 bytes, uarttzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uarttzxy.o(.constdata)
</UL>
<P><STRONG><a name="[13abfc0]"></a>Open</STRONG> (ARM, 268 bytes, Stack size 24 bytes, uarttzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uarttzxy.o(.constdata)
</UL>
<P><STRONG><a name="[13abf78]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, uarttzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uarttzxy.o(.constdata)
</UL>
<P><STRONG><a name="[13abf30]"></a>Agree</STRONG> (ARM, 252 bytes, Stack size 24 bytes, uarttzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Agree
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[13abea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[13abee8]"></a>Send</STRONG> (ARM, 140 bytes, Stack size 24 bytes, uarttzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Send
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[13abea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[13abea0]"></a>Read</STRONG> (ARM, 188 bytes, Stack size 32 bytes, uarttzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[13abee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
<LI><a href="#[13abf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Agree
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uarttzxy.o(.constdata)
</UL>
<P><STRONG><a name="[13a9148]"></a>Init</STRONG> (ARM, 132 bytes, Stack size 8 bytes, arealrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arealrm.o(.constdata)
</UL>
<P><STRONG><a name="[13a9100]"></a>Open</STRONG> (ARM, 356 bytes, Stack size 24 bytes, arealrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arealrm.o(.constdata)
</UL>
<P><STRONG><a name="[13a90b8]"></a>Close</STRONG> (ARM, 124 bytes, Stack size 16 bytes, arealrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arealrm.o(.constdata)
</UL>
<P><STRONG><a name="[13a9070]"></a>CalcMil</STRONG> (ARM, 1152 bytes, Stack size 232 bytes, arealrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = CalcMil &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1968c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[1968f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1969388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[19696f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[1969970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[1969bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[196a3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[196a9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[196ab90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[196ae28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[196b340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[196b828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[13a9028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeAreacirc
</UL>

<P><STRONG><a name="[13a9028]"></a>JugeAreacirc</STRONG> (ARM, 124 bytes, Stack size 48 bytes, arealrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = JugeAreacirc &rArr; CalcMil &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[13a9070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[196a0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[13a8f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[13a8fe0]"></a>JugeArearect</STRONG> (ARM, 116 bytes, Stack size 20 bytes, arealrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = JugeArearect
</UL>
<BR>[Called By]<UL><LI><a href="#[13a8f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[13a8f98]"></a>Read</STRONG> (ARM, 264 bytes, Stack size 40 bytes, arealrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = Read &rArr; JugeAreacirc &rArr; CalcMil &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[13a8fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeArearect
<LI><a href="#[13a9028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeAreacirc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arealrm.o(.constdata)
</UL>
<P><STRONG><a name="[13a6330]"></a>Init</STRONG> (ARM, 104 bytes, Stack size 8 bytes, help.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> help.o(.constdata)
</UL>
<P><STRONG><a name="[13a62e8]"></a>Open</STRONG> (ARM, 112 bytes, Stack size 16 bytes, help.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> help.o(.constdata)
</UL>
<P><STRONG><a name="[13a62a0]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, help.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> help.o(.constdata)
</UL>
<P><STRONG><a name="[13a6258]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, help.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[13a6210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[13a6210]"></a>Read</STRONG> (ARM, 264 bytes, Stack size 32 bytes, help.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[13a6258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> help.o(.constdata)
</UL>
<P><STRONG><a name="[13a3938]"></a>Init</STRONG> (ARM, 124 bytes, Stack size 8 bytes, onoroff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> onoroff.o(.constdata)
</UL>
<P><STRONG><a name="[13a38f0]"></a>Open</STRONG> (ARM, 112 bytes, Stack size 16 bytes, onoroff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> onoroff.o(.constdata)
</UL>
<P><STRONG><a name="[13a38a8]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, onoroff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> onoroff.o(.constdata)
</UL>
<P><STRONG><a name="[13a3860]"></a>Read</STRONG> (ARM, 204 bytes, Stack size 24 bytes, onoroff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> onoroff.o(.constdata)
</UL>
<P><STRONG><a name="[13a0fc8]"></a>Init</STRONG> (ARM, 84 bytes, Stack size 8 bytes, adc1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adc1.o(.constdata)
</UL>
<P><STRONG><a name="[13a0f80]"></a>Open</STRONG> (ARM, 172 bytes, Stack size 32 bytes, adc1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adc1.o(.constdata)
</UL>
<P><STRONG><a name="[13a0f38]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, adc1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adc1.o(.constdata)
</UL>
<P><STRONG><a name="[13a0ef0]"></a>Read</STRONG> (ARM, 192 bytes, Stack size 32 bytes, adc1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adc1.o(.constdata)
</UL>
<P><STRONG><a name="[146d510]"></a>Init</STRONG> (ARM, 120 bytes, Stack size 8 bytes, smstzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smstzxy.o(.constdata)
</UL>
<P><STRONG><a name="[146d4c8]"></a>Open</STRONG> (ARM, 260 bytes, Stack size 24 bytes, smstzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smstzxy.o(.constdata)
</UL>
<P><STRONG><a name="[146d480]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, smstzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smstzxy.o(.constdata)
</UL>
<P><STRONG><a name="[146d438]"></a>Agree</STRONG> (ARM, 756 bytes, Stack size 48 bytes, smstzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Agree
</UL>
<BR>[Called By]<UL><LI><a href="#[146d3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[146d3f0]"></a>Send</STRONG> (ARM, 412 bytes, Stack size 56 bytes, smstzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Send &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[146d3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[146d3a8]"></a>Read</STRONG> (ARM, 188 bytes, Stack size 32 bytes, smstzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Read &rArr; Send &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[146d3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
<LI><a href="#[146d438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Agree
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smstzxy.o(.constdata)
</UL>
<P><STRONG><a name="[146a8b8]"></a>ClsArray</STRONG> (ARM, 36 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1469fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder1
<LI><a href="#[146a048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWriteHeadTail
<LI><a href="#[146a0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder1
<LI><a href="#[146a360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[146a3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookFileNameAgain
<LI><a href="#[146a558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
<LI><a href="#[146a5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
<LI><a href="#[146a870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[146a870]"></a>Init</STRONG> (ARM, 44 bytes, Stack size 8 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Init
</UL>
<BR>[Calls]<UL><LI><a href="#[146a8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
</UL>
<BR>[Called By]<UL><LI><a href="#[146a828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init1
</UL>

<P><STRONG><a name="[146a828]"></a>Init1</STRONG> (ARM, 56 bytes, Stack size 8 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init1 &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[146a870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[146a7e0]"></a>Crc</STRONG> (ARM, 112 bytes, Stack size 16 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Crc
</UL>
<BR>[Called By]<UL><LI><a href="#[146a048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWriteHeadTail
<LI><a href="#[146a708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecode
<LI><a href="#[146a798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecode
</UL>

<P><STRONG><a name="[146a798]"></a>WriteRecode</STRONG> (ARM, 236 bytes, Stack size 32 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[146a7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Crc
</UL>
<BR>[Called By]<UL><LI><a href="#[146a048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWriteHeadTail
<LI><a href="#[146a558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
<LI><a href="#[146a5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
<LI><a href="#[146a708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecode
</UL>

<P><STRONG><a name="[146a750]"></a>MoveByte</STRONG> (ARM, 36 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1469d78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPor
<LI><a href="#[1469fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder1
<LI><a href="#[146a0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder1
<LI><a href="#[146a360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[146a3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookFileNameAgain
<LI><a href="#[146a438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileInfor
<LI><a href="#[146a558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
<LI><a href="#[146a5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
</UL>

<P><STRONG><a name="[146a708]"></a>ReadRecode</STRONG> (ARM, 484 bytes, Stack size 40 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[146a798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecode
<LI><a href="#[146a7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Crc
</UL>
<BR>[Called By]<UL><LI><a href="#[146a480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHeadTailPoint
<LI><a href="#[146a678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookSpace
</UL>

<P><STRONG><a name="[146a6c0]"></a>CompareBuf</STRONG> (ARM, 64 bytes, Stack size 4 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CompareBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[146a0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder1
<LI><a href="#[146a3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookFileNameAgain
<LI><a href="#[146a678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookSpace
</UL>

<P><STRONG><a name="[146a678]"></a>LookSpace</STRONG> (ARM, 312 bytes, Stack size 56 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LookSpace &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[146a6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareBuf
<LI><a href="#[146a708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecode
</UL>
<BR>[Called By]<UL><LI><a href="#[146a360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[146a558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
<LI><a href="#[146a5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
</UL>

<P><STRONG><a name="[146a630]"></a>LookChip</STRONG> (ARM, 56 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[146a360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[146a558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
<LI><a href="#[146a5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
</UL>

<P><STRONG><a name="[146a5e8]"></a>CreateBin</STRONG> (ARM, 448 bytes, Stack size 80 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = CreateBin &rArr; LookSpace &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[146a630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChip
<LI><a href="#[146a678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookSpace
<LI><a href="#[146a750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[146a798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecode
<LI><a href="#[146a8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[196cee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[196d190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[146a5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin1
</UL>

<P><STRONG><a name="[146a5a0]"></a>CreateBin1</STRONG> (ARM, 76 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = CreateBin1 &rArr; CreateBin &rArr; LookSpace &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[146a5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[146a558]"></a>CreateRecoder</STRONG> (ARM, 584 bytes, Stack size 112 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CreateRecoder &rArr; LookSpace &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[146a630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChip
<LI><a href="#[146a678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookSpace
<LI><a href="#[146a750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[146a798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecode
<LI><a href="#[146a8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[196cee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[196d190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[146a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder1
</UL>

<P><STRONG><a name="[146a510]"></a>CreateRecoder1</STRONG> (ARM, 92 bytes, Stack size 32 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = CreateRecoder1 &rArr; CreateRecoder &rArr; LookSpace &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[146a558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[146a4c8]"></a>LookHeadTailFF</STRONG> (ARM, 220 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LookHeadTailFF
</UL>
<BR>[Called By]<UL><LI><a href="#[146a048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWriteHeadTail
<LI><a href="#[146a480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHeadTailPoint
</UL>

<P><STRONG><a name="[146a480]"></a>GetHeadTailPoint</STRONG> (ARM, 312 bytes, Stack size 40 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GetHeadTailPoint &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[146a4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookHeadTailFF
<LI><a href="#[146a708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecode
</UL>
<BR>[Called By]<UL><LI><a href="#[146a438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileInfor
</UL>

<P><STRONG><a name="[146a438]"></a>GetFileInfor</STRONG> (ARM, 280 bytes, Stack size 16 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GetFileInfor &rArr; GetHeadTailPoint &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[146a480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHeadTailPoint
<LI><a href="#[146a750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[146a360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[146a3f0]"></a>LookFileNameAgain</STRONG> (ARM, 212 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LookFileNameAgain &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[146a6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareBuf
<LI><a href="#[146a750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[146a8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[196cee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[146a360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[146a3a8]"></a>LookFileBufSpace</STRONG> (ARM, 68 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[146a360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[146a360]"></a>Open</STRONG> (ARM, 300 bytes, Stack size 72 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Open &rArr; GetFileInfor &rArr; GetHeadTailPoint &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[146a3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookFileBufSpace
<LI><a href="#[146a3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookFileNameAgain
<LI><a href="#[146a438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileInfor
<LI><a href="#[146a630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChip
<LI><a href="#[146a678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookSpace
<LI><a href="#[146a750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[146a8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[196cee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[146a318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
</UL>

<P><STRONG><a name="[146a318]"></a>Open1</STRONG> (ARM, 76 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Open1 &rArr; Open &rArr; GetFileInfor &rArr; GetHeadTailPoint &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[146a360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[146a2d0]"></a>Close</STRONG> (ARM, 32 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[146a288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
</UL>

<P><STRONG><a name="[146a288]"></a>Close1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[146a2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[146a240]"></a>ReadBin</STRONG> (ARM, 232 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadBin
</UL>
<BR>[Called By]<UL><LI><a href="#[146a1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBin1
</UL>

<P><STRONG><a name="[146a1f8]"></a>ReadBin1</STRONG> (ARM, 88 bytes, Stack size 32 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ReadBin1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[146a240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[146a1b0]"></a>WriteBin</STRONG> (ARM, 236 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteBin
</UL>
<BR>[Called By]<UL><LI><a href="#[146a168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBin1
</UL>

<P><STRONG><a name="[146a168]"></a>WriteBin1</STRONG> (ARM, 88 bytes, Stack size 32 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WriteBin1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[146a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[146a120]"></a>GetJlNum</STRONG> (ARM, 188 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1469f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJlNum1
<LI><a href="#[1469fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder1
<LI><a href="#[146a0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder1
</UL>

<P><STRONG><a name="[146a0d8]"></a>ReadRecoder1</STRONG> (ARM, 1788 bytes, Stack size 48 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = ReadRecoder1 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[146a120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJlNum
<LI><a href="#[146a6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareBuf
<LI><a href="#[146a750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[146a8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[146a090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder2
</UL>

<P><STRONG><a name="[146a090]"></a>ReadRecoder2</STRONG> (ARM, 84 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = ReadRecoder2 &rArr; ReadRecoder1 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[146a0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[146a048]"></a>fWriteHeadTail</STRONG> (ARM, 620 bytes, Stack size 40 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = fWriteHeadTail &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[146a4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookHeadTailFF
<LI><a href="#[146a798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecode
<LI><a href="#[146a7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Crc
<LI><a href="#[146a8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[196d600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[146a000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateHeadTailPoint
</UL>

<P><STRONG><a name="[146a000]"></a>UpdateHeadTailPoint</STRONG> (ARM, 328 bytes, Stack size 32 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = UpdateHeadTailPoint &rArr; fWriteHeadTail &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[146a048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWriteHeadTail
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1469fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder1
</UL>

<P><STRONG><a name="[1469fb8]"></a>WriteRecoder1</STRONG> (ARM, 1352 bytes, Stack size 56 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = WriteRecoder1 &rArr; UpdateHeadTailPoint &rArr; fWriteHeadTail &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[146a000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateHeadTailPoint
<LI><a href="#[146a120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJlNum
<LI><a href="#[146a750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[146a8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1469f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder2
</UL>

<P><STRONG><a name="[1469f70]"></a>WriteRecoder2</STRONG> (ARM, 84 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = WriteRecoder2 &rArr; WriteRecoder1 &rArr; UpdateHeadTailPoint &rArr; fWriteHeadTail &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1469fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[1469f28]"></a>GetJlNum1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetJlNum1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[146a120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJlNum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[1469ee0]"></a>Seek</STRONG> (ARM, 12 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1469e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek1
</UL>

<P><STRONG><a name="[1469e98]"></a>Seek1</STRONG> (ARM, 88 bytes, Stack size 32 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Seek1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1469ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[1469e50]"></a>SeekSize</STRONG> (ARM, 36 bytes, Stack size 16 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SeekSize
</UL>
<BR>[Called By]<UL><LI><a href="#[1469e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekSize1
</UL>

<P><STRONG><a name="[1469e08]"></a>SeekSize1</STRONG> (ARM, 108 bytes, Stack size 64 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SeekSize1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1469e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[1469dc0]"></a>ReadHeadTail</STRONG> (ARM, 120 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ReadHeadTail &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[1469d78]"></a>ReadPor</STRONG> (ARM, 84 bytes, Stack size 16 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ReadPor &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[146a750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[1469d30]"></a>GetPointNum</STRONG> (ARM, 136 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[1467540]"></a>ClsArray</STRONG> (ARM, 36 bytes, Stack size 0 bytes, _downfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1466fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanProperty1
<LI><a href="#[1467390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFile1
<LI><a href="#[1467420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[14674f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[14674f8]"></a>Init</STRONG> (ARM, 60 bytes, Stack size 8 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[1467540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _downfile.o(.constdata)
</UL>
<P><STRONG><a name="[14674b0]"></a>MoveByte</STRONG> (ARM, 36 bytes, Stack size 0 bytes, _downfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1467030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFileName1
<LI><a href="#[1467150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileProperty1
<LI><a href="#[1467300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFile1
<LI><a href="#[1467390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFile1
<LI><a href="#[1467420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
</UL>

<P><STRONG><a name="[1467468]"></a>Strsize</STRONG> (ARM, 56 bytes, Stack size 0 bytes, _downfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1467030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFileName1
<LI><a href="#[1467390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFile1
<LI><a href="#[1467420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
</UL>

<P><STRONG><a name="[1467420]"></a>Open1</STRONG> (ARM, 328 bytes, Stack size 40 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Open1
</UL>
<BR>[Calls]<UL><LI><a href="#[1467468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
<LI><a href="#[14674b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[1467540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
</UL>
<BR>[Called By]<UL><LI><a href="#[14673d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[14673d8]"></a>Open</STRONG> (ARM, 72 bytes, Stack size 24 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Open &rArr; Open1
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1467420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _downfile.o(.constdata)
</UL>
<P><STRONG><a name="[1467390]"></a>CreateFile1</STRONG> (ARM, 384 bytes, Stack size 256 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CreateFile1
</UL>
<BR>[Calls]<UL><LI><a href="#[1467468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
<LI><a href="#[14674b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[1467540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
</UL>
<BR>[Called By]<UL><LI><a href="#[1467348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFile
</UL>

<P><STRONG><a name="[1467348]"></a>CreateFile</STRONG> (ARM, 72 bytes, Stack size 24 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = CreateFile &rArr; CreateFile1
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1467390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFile1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _downfile.o(.constdata)
</UL>
<P><STRONG><a name="[1467300]"></a>ReadFile1</STRONG> (ARM, 296 bytes, Stack size 264 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = ReadFile1
</UL>
<BR>[Calls]<UL><LI><a href="#[14674b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[14672b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFile
</UL>

<P><STRONG><a name="[14672b8]"></a>ReadFile</STRONG> (ARM, 88 bytes, Stack size 32 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = ReadFile &rArr; ReadFile1
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1467300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFile1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _downfile.o(.constdata)
</UL>
<P><STRONG><a name="[1467270]"></a>WriteFile1</STRONG> (ARM, 276 bytes, Stack size 240 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WriteFile1
</UL>
<BR>[Called By]<UL><LI><a href="#[1467228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFile
</UL>

<P><STRONG><a name="[1467228]"></a>WriteFile</STRONG> (ARM, 80 bytes, Stack size 24 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = WriteFile &rArr; WriteFile1
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1467270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFile1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _downfile.o(.constdata)
</UL>
<P><STRONG><a name="[14671e0]"></a>Close1</STRONG> (ARM, 132 bytes, Stack size 8 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Close1
</UL>
<BR>[Called By]<UL><LI><a href="#[1467198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[1467198]"></a>Close</STRONG> (ARM, 64 bytes, Stack size 16 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[14671e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _downfile.o(.constdata)
</UL>
<P><STRONG><a name="[1467150]"></a>GetFileProperty1</STRONG> (ARM, 104 bytes, Stack size 232 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GetFileProperty1
</UL>
<BR>[Calls]<UL><LI><a href="#[14674b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1467108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileProperty
</UL>

<P><STRONG><a name="[1467108]"></a>GetFileProperty</STRONG> (ARM, 72 bytes, Stack size 24 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GetFileProperty &rArr; GetFileProperty1
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1467150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileProperty1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _downfile.o(.constdata)
</UL>
<P><STRONG><a name="[14670c0]"></a>SetFileLength1</STRONG> (ARM, 148 bytes, Stack size 232 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = SetFileLength1
</UL>
<BR>[Called By]<UL><LI><a href="#[1467078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFileLength
</UL>

<P><STRONG><a name="[1467078]"></a>SetFileLength</STRONG> (ARM, 72 bytes, Stack size 24 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = SetFileLength &rArr; SetFileLength1
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[14670c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFileLength1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _downfile.o(.constdata)
</UL>
<P><STRONG><a name="[1467030]"></a>SetFileName1</STRONG> (ARM, 192 bytes, Stack size 240 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = SetFileName1
</UL>
<BR>[Calls]<UL><LI><a href="#[1467468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
<LI><a href="#[14674b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1466fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFileName
</UL>

<P><STRONG><a name="[1466fe8]"></a>SetFileName</STRONG> (ARM, 72 bytes, Stack size 24 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = SetFileName &rArr; SetFileName1
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1467030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFileName1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _downfile.o(.constdata)
</UL>
<P><STRONG><a name="[1466fa0]"></a>CleanProperty1</STRONG> (ARM, 128 bytes, Stack size 224 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = CleanProperty1
</UL>
<BR>[Calls]<UL><LI><a href="#[1467540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
</UL>
<BR>[Called By]<UL><LI><a href="#[1466f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanProperty
</UL>

<P><STRONG><a name="[1466f58]"></a>CleanProperty</STRONG> (ARM, 64 bytes, Stack size 16 bytes, _downfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = CleanProperty &rArr; CleanProperty1
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1466fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanProperty1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _downfile.o(.constdata)
</UL>
<P><STRONG><a name="[1464318]"></a>Task</STRONG> (ARM, 396 bytes, Stack size 40 bytes, sensorcontr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>

<P><STRONG><a name="[14642d0]"></a>Init</STRONG> (ARM, 156 bytes, Stack size 8 bytes, sensorcontr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensorcontr.o(.constdata)
</UL>
<P><STRONG><a name="[1464288]"></a>Open</STRONG> (ARM, 248 bytes, Stack size 24 bytes, sensorcontr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensorcontr.o(.constdata)
</UL>
<P><STRONG><a name="[1464240]"></a>Close</STRONG> (ARM, 80 bytes, Stack size 16 bytes, sensorcontr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensorcontr.o(.constdata)
</UL>
<P><STRONG><a name="[1461078]"></a>OperPhone</STRONG> (ARM, 616 bytes, Stack size 40 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[1460b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[1461030]"></a>OperMessage</STRONG> (ARM, 700 bytes, Stack size 48 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[1460b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[1460fe8]"></a>CloseIP</STRONG> (ARM, 712 bytes, Stack size 80 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CloseIP
</UL>
<BR>[Called By]<UL><LI><a href="#[1460730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseIP1
<LI><a href="#[1460da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys
<LI><a href="#[1460f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpIP
<LI><a href="#[1460fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGprs
</UL>

<P><STRONG><a name="[1460fa0]"></a>InitGprs</STRONG> (ARM, 460 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = InitGprs &rArr; CloseIP
</UL>
<BR>[Calls]<UL><LI><a href="#[1460fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseIP
</UL>
<BR>[Called By]<UL><LI><a href="#[1460a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGprs1
<LI><a href="#[1460f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpIP
</UL>

<P><STRONG><a name="[1460f58]"></a>BackUpIP</STRONG> (ARM, 116 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1460fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGprs
<LI><a href="#[1460fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseIP
</UL>
<BR>[Called By]<UL><LI><a href="#[145fda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpAPNAndIp
<LI><a href="#[1460d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpSys2
</UL>

<P><STRONG><a name="[1460f10]"></a>InitPhone</STRONG> (ARM, 76 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InitPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[1460a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhone1
<LI><a href="#[1460d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpSys2
</UL>

<P><STRONG><a name="[1460ec8]"></a>InitMessage</STRONG> (ARM, 320 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InitMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[1460a90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMessage1
<LI><a href="#[1460d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpSys2
</UL>

<P><STRONG><a name="[1460e80]"></a>InitSys</STRONG> (ARM, 336 bytes, Stack size 40 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitSys
</UL>
<BR>[Called By]<UL><LI><a href="#[1460ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSys1
<LI><a href="#[1460d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpSys2
</UL>

<P><STRONG><a name="[1460e38]"></a>ClosePhone</STRONG> (ARM, 20 bytes, Stack size 0 bytes, gprs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14606a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClosePhone1
<LI><a href="#[1460da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys
</UL>

<P><STRONG><a name="[1460df0]"></a>CloseMessage</STRONG> (ARM, 84 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CloseMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[14606e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMessage1
<LI><a href="#[1460da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys
</UL>

<P><STRONG><a name="[1460da8]"></a>CloseSys</STRONG> (ARM, 60 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CloseSys &rArr; CloseIP
</UL>
<BR>[Calls]<UL><LI><a href="#[1460df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMessage
<LI><a href="#[1460e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClosePhone
<LI><a href="#[1460fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseIP
</UL>
<BR>[Called By]<UL><LI><a href="#[1460778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys1
<LI><a href="#[1460d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpSys2
</UL>

<P><STRONG><a name="[1460d60]"></a>BackUpSys2</STRONG> (ARM, 236 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1460da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys
<LI><a href="#[1460e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSys
<LI><a href="#[1460ec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMessage
<LI><a href="#[1460f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhone
<LI><a href="#[1460f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpIP
</UL>
<BR>[Called By]<UL><LI><a href="#[1460d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpSys
</UL>

<P><STRONG><a name="[1460d18]"></a>BackUpSys</STRONG> (ARM, 144 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1460d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpSys2
</UL>
<BR>[Called By]<UL><LI><a href="#[1460b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[1460cd0]"></a>JugeMessage</STRONG> (ARM, 132 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1460b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[1460c88]"></a>SendIP</STRONG> (ARM, 220 bytes, Stack size 40 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SendIP
</UL>
<BR>[Called By]<UL><LI><a href="#[145ff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendIP1
<LI><a href="#[1460bf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperIPData
</UL>

<P><STRONG><a name="[1460c40]"></a>GetTimeAdd</STRONG> (ARM, 212 bytes, Stack size 24 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1460bf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperIPData
</UL>

<P><STRONG><a name="[1460bf8]"></a>OperIPData</STRONG> (ARM, 1332 bytes, Stack size 80 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460c40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
<LI><a href="#[1460c88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendIP
</UL>
<BR>[Called By]<UL><LI><a href="#[1460b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[1460bb0]"></a>JugeSys</STRONG> (ARM, 384 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1460b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[1460b68]"></a>Task</STRONG> (ARM, 408 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[1460bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeSys
<LI><a href="#[1460bf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperIPData
<LI><a href="#[1460cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeMessage
<LI><a href="#[1460d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpSys
<LI><a href="#[1461030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperMessage
<LI><a href="#[1461078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperPhone
</UL>

<P><STRONG><a name="[1460b20]"></a>Init</STRONG> (ARM, 404 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460ad8]"></a>InitSys1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitSys1 &rArr; InitSys
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSys
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460a90]"></a>InitMessage1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InitMessage1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460ec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460a48]"></a>InitPhone1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InitPhone1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460a00]"></a>InitGprs1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = InitGprs1 &rArr; InitGprs &rArr; CloseIP
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGprs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[14609b8]"></a>OpenSys</STRONG> (ARM, 72 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OpenSys
</UL>
<BR>[Called By]<UL><LI><a href="#[1460970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSys1
</UL>

<P><STRONG><a name="[1460970]"></a>OpenSys1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OpenSys1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[14609b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSys
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460928]"></a>OpenMessage</STRONG> (ARM, 72 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OpenMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[14608e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessage1
</UL>

<P><STRONG><a name="[14608e0]"></a>OpenMessage1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OpenMessage1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460898]"></a>OpenIP</STRONG> (ARM, 560 bytes, Stack size 48 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OpenIP
</UL>
<BR>[Called By]<UL><LI><a href="#[1460850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenIP1
</UL>

<P><STRONG><a name="[1460850]"></a>OpenIP1</STRONG> (ARM, 80 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = OpenIP1 &rArr; OpenIP
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460808]"></a>OpenPhone</STRONG> (ARM, 72 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OpenPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[14607c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenPhone1
</UL>

<P><STRONG><a name="[14607c0]"></a>OpenPhone1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OpenPhone1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenPhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460778]"></a>CloseSys1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CloseSys1 &rArr; CloseSys &rArr; CloseIP
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460730]"></a>CloseIP1</STRONG> (ARM, 80 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CloseIP1 &rArr; CloseIP
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[14606e8]"></a>CloseMessage1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CloseMessage1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[14606a0]"></a>ClosePhone1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ClosePhone1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClosePhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460658]"></a>GetSysState</STRONG> (ARM, 72 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetSysState
</UL>
<BR>[Called By]<UL><LI><a href="#[1460610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysState1
</UL>

<P><STRONG><a name="[1460610]"></a>GetSysState1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetSysState1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[14605c8]"></a>GetMessageState</STRONG> (ARM, 72 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetMessageState
</UL>
<BR>[Called By]<UL><LI><a href="#[1460580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageState1
</UL>

<P><STRONG><a name="[1460580]"></a>GetMessageState1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetMessageState1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[14605c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460538]"></a>GetPhoneState</STRONG> (ARM, 76 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetPhoneState
</UL>
<BR>[Called By]<UL><LI><a href="#[14604f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneState1
</UL>

<P><STRONG><a name="[14604f0]"></a>GetPhoneState1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetPhoneState1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[14604a8]"></a>GetIPState</STRONG> (ARM, 132 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetIPState
</UL>
<BR>[Called By]<UL><LI><a href="#[1460460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIPState1
</UL>

<P><STRONG><a name="[1460460]"></a>GetIPState1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetIPState1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[14604a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIPState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460418]"></a>GetIpPro</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetIpPro
</UL>
<BR>[Called By]<UL><LI><a href="#[14603d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIpPro1
</UL>

<P><STRONG><a name="[14603d0]"></a>GetIpPro1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetIpPro1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIpPro
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460388]"></a>DNSRIP</STRONG> (ARM, 104 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DNSRIP
</UL>
<BR>[Called By]<UL><LI><a href="#[1460340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSRIP1
</UL>

<P><STRONG><a name="[1460340]"></a>DNSRIP1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DNSRIP1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSRIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[14602f8]"></a>ReadMessage</STRONG> (ARM, 196 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[14602b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMessage1
</UL>

<P><STRONG><a name="[14602b0]"></a>ReadMessage1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ReadMessage1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[14602f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460268]"></a>ReadIP</STRONG> (ARM, 152 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadIP
</UL>
<BR>[Called By]<UL><LI><a href="#[1460220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadIP1
</UL>

<P><STRONG><a name="[1460220]"></a>ReadIP1</STRONG> (ARM, 80 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ReadIP1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[14601d8]"></a>ReadPhone</STRONG> (ARM, 124 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[1460190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPhone1
</UL>

<P><STRONG><a name="[1460190]"></a>ReadPhone1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ReadPhone1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[14601d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460148]"></a>AgreePhone</STRONG> (ARM, 76 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AgreePhone
</UL>
<BR>[Called By]<UL><LI><a href="#[1460100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreePhone1
</UL>

<P><STRONG><a name="[1460100]"></a>AgreePhone1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AgreePhone1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreePhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[14600b8]"></a>CloseCall</STRONG> (ARM, 48 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CloseCall
</UL>
<BR>[Called By]<UL><LI><a href="#[1460070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseCall1
</UL>

<P><STRONG><a name="[1460070]"></a>CloseCall1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CloseCall1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[14600b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseCall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1460028]"></a>SendMessage</STRONG> (ARM, 336 bytes, Stack size 40 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[145ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage1
</UL>

<P><STRONG><a name="[145ffe0]"></a>SendMessage1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SendMessage1 &rArr; SendMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145ff98]"></a>SendIP1</STRONG> (ARM, 80 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SendIP1 &rArr; SendIP
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1460c88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145ff50]"></a>SendPhone</STRONG> (ARM, 240 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SendPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[145ff08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPhone1
</UL>

<P><STRONG><a name="[145ff08]"></a>SendPhone1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SendPhone1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145ff50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145fec0]"></a>SetVolume</STRONG> (ARM, 160 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetVolume
</UL>
<BR>[Called By]<UL><LI><a href="#[145fe78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVolume1
</UL>

<P><STRONG><a name="[145fe78]"></a>SetVolume1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SetVolume1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145fec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVolume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145fe30]"></a>GetCurIPState</STRONG> (ARM, 104 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetCurIPState &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145fde8]"></a>JugeIPData</STRONG> (ARM, 440 bytes, Stack size 24 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>

<P><STRONG><a name="[145fda0]"></a>BackUpAPNAndIp</STRONG> (ARM, 144 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1460f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpIP
</UL>

<P><STRONG><a name="[14fbce0]"></a>JugeEvent</STRONG> (ARM, 520 bytes, Stack size 24 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[14fbc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14fbc98]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14fbc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14fbc50]"></a>Task</STRONG> (ARM, 156 bytes, Stack size 24 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[14fbc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
<LI><a href="#[14fbce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeEvent
</UL>

<P><STRONG><a name="[14fbc08]"></a>Init</STRONG> (ARM, 108 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[14fbbc0]"></a>SeekSpace</STRONG> (ARM, 60 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14fbb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[14fbb78]"></a>Open</STRONG> (ARM, 160 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[14fbbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[14fbb30]"></a>Close</STRONG> (ARM, 80 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[14fbae8]"></a>Read</STRONG> (ARM, 80 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[14fbaa0]"></a>Enable</STRONG> (ARM, 108 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Enable &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[14fba58]"></a>DisEnable</STRONG> (ARM, 108 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DisEnable &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[14fba10]"></a>GetEnable</STRONG> (ARM, 112 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetEnable &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[14fb9c8]"></a>GetPro</STRONG> (ARM, 116 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetPro &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[14fb980]"></a>EditPro</STRONG> (ARM, 132 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EditPro &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[14f8958]"></a>CheckSum</STRONG> (ARM, 48 bytes, Stack size 0 bytes, photo.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14f8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPhoto
</UL>

<P><STRONG><a name="[14f8910]"></a>ReadPhoto</STRONG> (ARM, 488 bytes, Stack size 48 bytes, photo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[14f8958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[14f8880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo
</UL>

<P><STRONG><a name="[14f88c8]"></a>PhotoCommon</STRONG> (ARM, 456 bytes, Stack size 64 bytes, photo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[14f8880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo
</UL>

<P><STRONG><a name="[14f8880]"></a>Photo</STRONG> (ARM, 364 bytes, Stack size 552 bytes, photo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[14f88c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhotoCommon
<LI><a href="#[14f8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPhoto
</UL>
<BR>[Called By]<UL><LI><a href="#[14f8838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14f8838]"></a>Task</STRONG> (ARM, 152 bytes, Stack size 16 bytes, photo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c78f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[c7b658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[14f8880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo
</UL>

<P><STRONG><a name="[14f87f0]"></a>Init</STRONG> (ARM, 156 bytes, Stack size 8 bytes, photo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c79040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> photo.o(.constdata)
</UL>
<P><STRONG><a name="[14f87a8]"></a>Open</STRONG> (ARM, 72 bytes, Stack size 16 bytes, photo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> photo.o(.constdata)
</UL>
<P><STRONG><a name="[14f8760]"></a>Close</STRONG> (ARM, 56 bytes, Stack size 8 bytes, photo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> photo.o(.constdata)
</UL>
<P><STRONG><a name="[14f5720]"></a>JugeEvent</STRONG> (ARM, 184 bytes, Stack size 16 bytes, gpsandmileage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[14f5648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14f56d8]"></a>CountMileage</STRONG> (ARM, 52 bytes, Stack size 16 bytes, gpsandmileage.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14f5648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14f5690]"></a>ReadGpsData</STRONG> (ARM, 132 bytes, Stack size 24 bytes, gpsandmileage.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14f5648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14f5648]"></a>Task</STRONG> (ARM, 268 bytes, Stack size 32 bytes, gpsandmileage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[14f5690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGpsData
<LI><a href="#[14f56d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountMileage
<LI><a href="#[14f5720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeEvent
</UL>

<P><STRONG><a name="[14f5600]"></a>Init</STRONG> (ARM, 152 bytes, Stack size 8 bytes, gpsandmileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpsandmileage.o(.constdata)
</UL>
<P><STRONG><a name="[14f55b8]"></a>Open</STRONG> (ARM, 216 bytes, Stack size 24 bytes, gpsandmileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpsandmileage.o(.constdata)
</UL>
<P><STRONG><a name="[14f5570]"></a>Close</STRONG> (ARM, 80 bytes, Stack size 16 bytes, gpsandmileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpsandmileage.o(.constdata)
</UL>
<P><STRONG><a name="[14f5528]"></a>Get</STRONG> (ARM, 80 bytes, Stack size 16 bytes, gpsandmileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Get &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpsandmileage.o(.constdata)
</UL>
<P><STRONG><a name="[14f2298]"></a>ClearQ</STRONG> (ARM, 88 bytes, Stack size 24 bytes, ftp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c78e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQQuery
<LI><a href="#[c78f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
</UL>
<BR>[Called By]<UL><LI><a href="#[14f1f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14f2250]"></a>FtpClose</STRONG> (ARM, 156 bytes, Stack size 8 bytes, ftp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14f1f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14f2208]"></a>RevFtpData</STRONG> (ARM, 124 bytes, Stack size 224 bytes, ftp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14f1f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14f21c0]"></a>GetFileLength</STRONG> (ARM, 208 bytes, Stack size 40 bytes, ftp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14f2058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FtpConfig
</UL>

<P><STRONG><a name="[14f2178]"></a>JudgeFtpAsk</STRONG> (ARM, 144 bytes, Stack size 24 bytes, ftp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7b6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>
<BR>[Called By]<UL><LI><a href="#[14f2010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogOnFtpServer
<LI><a href="#[14f2130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTP_SendCommand
</UL>

<P><STRONG><a name="[14f2130]"></a>FTP_SendCommand</STRONG> (ARM, 376 bytes, Stack size 88 bytes, ftp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14f2178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeFtpAsk
</UL>
<BR>[Called By]<UL><LI><a href="#[14f2058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FtpConfig
</UL>

<P><STRONG><a name="[14f20e8]"></a>GetDataLinkPra</STRONG> (ARM, 556 bytes, Stack size 48 bytes, ftp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14f2058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FtpConfig
</UL>

<P><STRONG><a name="[14f20a0]"></a>GetFileNameDir</STRONG> (ARM, 260 bytes, Stack size 32 bytes, ftp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14f2058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FtpConfig
</UL>

<P><STRONG><a name="[14f2058]"></a>FtpConfig</STRONG> (ARM, 572 bytes, Stack size 520 bytes, ftp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14f20a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileNameDir
<LI><a href="#[14f20e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDataLinkPra
<LI><a href="#[14f2130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTP_SendCommand
<LI><a href="#[14f21c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileLength
</UL>
<BR>[Called By]<UL><LI><a href="#[14f2010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogOnFtpServer
</UL>

<P><STRONG><a name="[14f2010]"></a>LogOnFtpServer</STRONG> (ARM, 244 bytes, Stack size 120 bytes, ftp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14f2058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FtpConfig
<LI><a href="#[14f2178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeFtpAsk
</UL>
<BR>[Called By]<UL><LI><a href="#[14f1f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14f1fc8]"></a>FTP_File_Init</STRONG> (ARM, 844 bytes, Stack size 560 bytes, ftp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14f1f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14f1f80]"></a>ClearSem</STRONG> (ARM, 84 bytes, Stack size 24 bytes, ftp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7b5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxQuery
<LI><a href="#[c7b6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>
<BR>[Called By]<UL><LI><a href="#[14f1f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14f1f38]"></a>Task</STRONG> (ARM, 712 bytes, Stack size 16 bytes, ftp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c78f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[c78f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[14f1f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[14f1fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTP_File_Init
<LI><a href="#[14f2010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogOnFtpServer
<LI><a href="#[14f2208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RevFtpData
<LI><a href="#[14f2250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FtpClose
<LI><a href="#[14f2298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearQ
</UL>

<P><STRONG><a name="[14f1ef0]"></a>Init</STRONG> (ARM, 300 bytes, Stack size 328 bytes, ftp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c79040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ftp.o(.constdata)
</UL>
<P><STRONG><a name="[14f1ea8]"></a>FTP_CtrReceive</STRONG> (ARM, 76 bytes, Stack size 16 bytes, ftp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FTP_CtrReceive &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c7b658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ftp.o(.constdata)
</UL>
<P><STRONG><a name="[14f1e60]"></a>FTP_DataReceive</STRONG> (ARM, 660 bytes, Stack size 568 bytes, ftp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = FTP_DataReceive &rArr; OSQPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ftp.o(.constdata)
</UL>
<P><STRONG><a name="[14f1e18]"></a>GetState</STRONG> (ARM, 48 bytes, Stack size 0 bytes, ftp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ftp.o(.constdata)
</UL>
<P><STRONG><a name="[14ee590]"></a>Explain_Par</STRONG> (ARM, 2456 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Explain_Par &rArr; FileData_BackSet &rArr; BackFacFile
</UL>
<BR>[Calls]<UL><LI><a href="#[15db718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileData_BackSet
</UL>
<BR>[Called By]<UL><LI><a href="#[14ee428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_SetPar
</UL>

<P><STRONG><a name="[14ee548]"></a>Explain_WorkPar</STRONG> (ARM, 3660 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_WorkPar
</UL>
<BR>[Called By]<UL><LI><a href="#[14eded0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_SetWaringTerm
<LI><a href="#[14ee038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_SetVidType
</UL>

<P><STRONG><a name="[14ee500]"></a>Explain</STRONG> (ARM, 140 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee4b8]"></a>Explain_Answer</STRONG> (ARM, 80 bytes, Stack size 4 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Explain_Answer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee470]"></a>Explain_Track</STRONG> (ARM, 104 bytes, Stack size 4 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Explain_Track
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee428]"></a>Explain_SetPar</STRONG> (ARM, 184 bytes, Stack size 40 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Explain_SetPar &rArr; Explain_Par &rArr; FileData_BackSet &rArr; BackFacFile
</UL>
<BR>[Calls]<UL><LI><a href="#[14ee590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Par
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee3e0]"></a>Explain_AmendMenum</STRONG> (ARM, 240 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_AmendMenum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee398]"></a>Explain_LoaderTxt</STRONG> (ARM, 92 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_LoaderTxt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee350]"></a>Explain_LoaderTxtMenum</STRONG> (ARM, 280 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_LoaderTxtMenum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee308]"></a>Explain_SetPhone</STRONG> (ARM, 276 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_SetPhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee2c0]"></a>Explain_CallAnswer</STRONG> (ARM, 92 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_CallAnswer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee278]"></a>Explain_UpdateSoftWare</STRONG> (ARM, 380 bytes, Stack size 48 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Explain_UpdateSoftWare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee230]"></a>Explain_LookPar</STRONG> (ARM, 208 bytes, Stack size 16 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Explain_LookPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee1e8]"></a>Explain_Contrl</STRONG> (ARM, 124 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_Contrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee1a0]"></a>Explain_ConfineCall</STRONG> (ARM, 108 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_ConfineCall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee158]"></a>Explain_ConfigCentrSever</STRONG> (ARM, 188 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_ConfigCentrSever
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee0c8]"></a>Explain_LookJpg</STRONG> (ARM, 340 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_LookJpg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee080]"></a>Explain_JpgIng</STRONG> (ARM, 68 bytes, Stack size 4 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Explain_JpgIng
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ee038]"></a>Explain_SetVidType</STRONG> (ARM, 228 bytes, Stack size 48 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = Explain_SetVidType &rArr; Explain_WorkPar
</UL>
<BR>[Calls]<UL><LI><a href="#[14ee548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar
<LI><a href="#[196d600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14edff0]"></a>Explain_TabelList</STRONG> (ARM, 804 bytes, Stack size 56 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Explain_TabelList
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14edfa8]"></a>Explain_WorkParTimer</STRONG> (ARM, 144 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_WorkParTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14edf60]"></a>Explain_WorkParSpace</STRONG> (ARM, 104 bytes, Stack size 4 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Explain_WorkParSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14edf18]"></a>Explain_LookLog</STRONG> (ARM, 128 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_LookLog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14eded0]"></a>Explain_SetWaringTerm</STRONG> (ARM, 204 bytes, Stack size 48 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = Explain_SetWaringTerm &rArr; Explain_WorkPar
</UL>
<BR>[Calls]<UL><LI><a href="#[14ee548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar
<LI><a href="#[196d600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ede88]"></a>Explain_SetRound</STRONG> (ARM, 512 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_SetRound
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ede40]"></a>Explain_DelRound</STRONG> (ARM, 104 bytes, Stack size 16 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Explain_DelRound
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14eddf8]"></a>Explain_SetRectangle</STRONG> (ARM, 548 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_SetRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14eddb0]"></a>Explain_DelRectangle</STRONG> (ARM, 104 bytes, Stack size 16 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Explain_DelRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14edd68]"></a>Explain_SetPolygon</STRONG> (ARM, 360 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_SetPolygon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14edd20]"></a>Explain_DelPolygon</STRONG> (ARM, 104 bytes, Stack size 16 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Explain_DelPolygon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14edcd8]"></a>Explain_SetRoadMap</STRONG> (ARM, 400 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_SetRoadMap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14edc90]"></a>Explain_DelRoadMap</STRONG> (ARM, 104 bytes, Stack size 16 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Explain_DelRoadMap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14edc48]"></a>Explain_Reduce</STRONG> (ARM, 120 bytes, Stack size 4 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Explain_Reduce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14edc00]"></a>Explain_Driver</STRONG> (ARM, 268 bytes, Stack size 40 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Explain_Driver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14edbb8]"></a>Explain_Navigation</STRONG> (ARM, 388 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_Navigation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14edb70]"></a>Explain_HandTxt</STRONG> (ARM, 80 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_HandTxt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14edb28]"></a>Explain_HandAttemper</STRONG> (ARM, 272 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_HandAttemper
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14edae0]"></a>Explain_AmendForm</STRONG> (ARM, 192 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_AmendForm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14eda98]"></a>Explain_UpLoaderForm</STRONG> (ARM, 188 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_UpLoaderForm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14eda50]"></a>Explain_UpLoaderFormSuc</STRONG> (ARM, 184 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_UpLoaderFormSuc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14eda08]"></a>Explain_UpLoaderFormErro</STRONG> (ARM, 44 bytes, Stack size 4 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Explain_UpLoaderFormErro
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[14ed9c0]"></a>Explain_UpLoaderCan</STRONG> (ARM, 44 bytes, Stack size 4 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Explain_UpLoaderCan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[15d9470]"></a>Explain_Par</STRONG> (ARM, 6048 bytes, Stack size 40 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Explain_Par &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[196d600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[15d8ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_LookPar
</UL>

<P><STRONG><a name="[15d9428]"></a>Explain_WorkPar</STRONG> (ARM, 2992 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Explain_WorkPar &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15d8db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UploaderJpg2
<LI><a href="#[15d8e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Waring
</UL>

<P><STRONG><a name="[15d93e0]"></a>Explain_WorkPar1</STRONG> (ARM, 4180 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Explain_WorkPar1 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15d8d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UploaderPar
<LI><a href="#[15d9080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpPar
</UL>

<P><STRONG><a name="[15d9398]"></a>Explain_WorkPar2</STRONG> (ARM, 6676 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Explain_WorkPar2 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15d8cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderWarning
</UL>

<P><STRONG><a name="[15d9350]"></a>Expain_VidType2LessAddree</STRONG> (ARM, 168 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d8e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Waring
</UL>

<P><STRONG><a name="[15d9308]"></a>Gps2CenGps_Timer</STRONG> (ARM, 76 bytes, Stack size 16 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Gps2CenGps_Timer
</UL>
<BR>[Called By]<UL><LI><a href="#[15d9158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps
</UL>

<P><STRONG><a name="[15d92c0]"></a>Gps2CenGps_Height</STRONG> (ARM, 100 bytes, Stack size 16 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Gps2CenGps_Height
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15d9158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps
</UL>

<P><STRONG><a name="[15d9278]"></a>Gps2CenGps_Angle</STRONG> (ARM, 36 bytes, Stack size 16 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15d9158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps
</UL>

<P><STRONG><a name="[15d9230]"></a>Gps2CenGps_Speed</STRONG> (ARM, 16 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d9158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps
</UL>

<P><STRONG><a name="[15d91e8]"></a>Gps2CenGps_LongHem</STRONG> (ARM, 44 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d9158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps
</UL>

<P><STRONG><a name="[15d91a0]"></a>Gps2CenGps_Latitude</STRONG> (ARM, 44 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d9158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps
</UL>

<P><STRONG><a name="[15d9158]"></a>Gps2CenGps</STRONG> (ARM, 92 bytes, Stack size 16 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[15d91a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_Latitude
<LI><a href="#[15d91e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_LongHem
<LI><a href="#[15d9230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_Speed
<LI><a href="#[15d9278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_Angle
<LI><a href="#[15d92c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_Height
<LI><a href="#[15d9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_Timer
</UL>
<BR>[Called By]<UL><LI><a href="#[15d8ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
</UL>

<P><STRONG><a name="[15d9110]"></a>Gps2ReduceGps_Height</STRONG> (ARM, 116 bytes, Stack size 16 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Gps2ReduceGps_Height &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15d8c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderReduce
</UL>

<P><STRONG><a name="[15d90c8]"></a>Explain_state</STRONG> (ARM, 132 bytes, Stack size 16 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Explain_state
</UL>
<BR>[Called By]<UL><LI><a href="#[15d8c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderReduce
</UL>

<P><STRONG><a name="[15d9080]"></a>Explain_UpPar</STRONG> (ARM, 176 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Explain_UpPar &rArr; Explain_WorkPar1 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15d93e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar1
</UL>
<BR>[Called By]<UL><LI><a href="#[15d8c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderReduce
</UL>

<P><STRONG><a name="[15d9038]"></a>Explain</STRONG> (ARM, 156 bytes, Stack size 24 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8ff0]"></a>Explain_GetSeverComPar</STRONG> (ARM, 180 bytes, Stack size 40 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[15d9158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps
</UL>
<BR>[Called By]<UL><LI><a href="#[15d8b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_NoSem
<LI><a href="#[15d8bb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderHandMess
<LI><a href="#[15d8c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderDriver
<LI><a href="#[15d8c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderReduce
<LI><a href="#[15d8c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_OutRoadMap
<LI><a href="#[15d8d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UploaderPar
<LI><a href="#[15d8db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UploaderJpg2
<LI><a href="#[15d8df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UploaderJpg1
<LI><a href="#[15d8e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Waring
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8fa8]"></a>Explain_Answer</STRONG> (ARM, 88 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8f60]"></a>Explain_Menum</STRONG> (ARM, 116 bytes, Stack size 24 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_Menum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8f18]"></a>Explain_TxtMenum</STRONG> (ARM, 136 bytes, Stack size 24 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_TxtMenum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8ed0]"></a>Explain_LookPar</STRONG> (ARM, 248 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = Explain_LookPar &rArr; Explain_Par &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15d9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Par
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8e88]"></a>Explain_UpdateSoftWare</STRONG> (ARM, 28 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8e40]"></a>Explain_Waring</STRONG> (ARM, 660 bytes, Stack size 40 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = Explain_Waring &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[15d8ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
<LI><a href="#[15d9350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Expain_VidType2LessAddree
<LI><a href="#[15d9428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8df8]"></a>Explain_UploaderJpg1</STRONG> (ARM, 228 bytes, Stack size 24 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Explain_UploaderJpg1 &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[15d8ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8db0]"></a>Explain_UploaderJpg2</STRONG> (ARM, 316 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Explain_UploaderJpg2 &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[15d8ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
<LI><a href="#[15d9428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8d68]"></a>Explain_UploaderPar</STRONG> (ARM, 220 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Explain_UploaderPar &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[15d8ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
<LI><a href="#[15d93e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar1
</UL>
<BR>[Called By]<UL><LI><a href="#[15d8c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderReduce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8cd8]"></a>Explain_UpLoaderWarning</STRONG> (ARM, 204 bytes, Stack size 40 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Explain_UpLoaderWarning &rArr; Explain_WorkPar2 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15d9398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8c90]"></a>Explain_OutRoadMap</STRONG> (ARM, 136 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Explain_OutRoadMap &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[15d8ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8c48]"></a>Explain_UpLoaderReduce</STRONG> (ARM, 1668 bytes, Stack size 360 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = Explain_UpLoaderReduce &rArr; Explain_UploaderPar &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[15d8d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UploaderPar
<LI><a href="#[15d8ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
<LI><a href="#[15d9080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpPar
<LI><a href="#[15d90c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_state
<LI><a href="#[15d9110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2ReduceGps_Height
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8c00]"></a>Explain_UpLoaderDriver</STRONG> (ARM, 180 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Explain_UpLoaderDriver &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[15d8ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8bb8]"></a>Explain_UpLoaderHandMess</STRONG> (ARM, 352 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Explain_UpLoaderHandMess &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[15d8ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8b70]"></a>Explain_NoSem</STRONG> (ARM, 336 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Explain_NoSem &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[15d8ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8b28]"></a>Explain_UpLoaderFrom</STRONG> (ARM, 48 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8ae0]"></a>Explain_OverFromErro</STRONG> (ARM, 56 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d8a98]"></a>Explain_PriceData</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15d4cc0]"></a>Read1</STRONG> (ARM, 520 bytes, Stack size 48 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Read1
</UL>
<BR>[Called By]<UL><LI><a href="#[15d4b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[15d4c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[15d4c78]"></a>Task</STRONG> (ARM, 188 bytes, Stack size 16 bytes, tzv2.1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[15d4cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>

<P><STRONG><a name="[15d4c30]"></a>Init</STRONG> (ARM, 160 bytes, Stack size 8 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tzv2.1.o(.constdata)
</UL>
<P><STRONG><a name="[15d4be8]"></a>Open1</STRONG> (ARM, 188 bytes, Stack size 24 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Open1
</UL>
<BR>[Called By]<UL><LI><a href="#[15d4ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[15d4ba0]"></a>Open</STRONG> (ARM, 80 bytes, Stack size 24 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[15d4be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tzv2.1.o(.constdata)
</UL>
<P><STRONG><a name="[15d4b58]"></a>Close</STRONG> (ARM, 80 bytes, Stack size 16 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tzv2.1.o(.constdata)
</UL>
<P><STRONG><a name="[15d4b10]"></a>Read</STRONG> (ARM, 72 bytes, Stack size 24 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Read &rArr; Read1
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[15d4cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tzv2.1.o(.constdata)
</UL>
<P><STRONG><a name="[15d4ac8]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[15d4a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
<LI><a href="#[15d4a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSig
</UL>

<P><STRONG><a name="[15d4a80]"></a>WriteSig</STRONG> (ARM, 1092 bytes, Stack size 80 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = WriteSig &rArr; GetTimeAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[15d4ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[15d4a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
</UL>

<P><STRONG><a name="[15d4a38]"></a>Write1</STRONG> (ARM, 252 bytes, Stack size 40 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Write1 &rArr; WriteSig &rArr; GetTimeAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[15d4a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSig
<LI><a href="#[15d4ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[15d49f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[15d49f0]"></a>Write</STRONG> (ARM, 112 bytes, Stack size 24 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Write &rArr; Write1 &rArr; WriteSig &rArr; GetTimeAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[15d4a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tzv2.1.o(.constdata)
</UL>
<P><STRONG><a name="[15d49a8]"></a>GetPar2ID</STRONG> (ARM, 152 bytes, Stack size 24 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetPar2ID &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tzv2.1.o(.constdata)
</UL>
<P><STRONG><a name="[15d1e20]"></a>Init</STRONG> (ARM, 244 bytes, Stack size 0 bytes, _nandflash512.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15d1dd8]"></a>ReadData</STRONG> (ARM, 104 bytes, Stack size 0 bytes, _nandflash512.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d1b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMwrPg
<LI><a href="#[15d1b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ease
<LI><a href="#[15d1be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeBuf
<LI><a href="#[15d1c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeByte
<LI><a href="#[15d1cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMrdPg517
<LI><a href="#[15d1d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadID
</UL>

<P><STRONG><a name="[15d1d90]"></a>WriteData</STRONG> (ARM, 112 bytes, Stack size 0 bytes, _nandflash512.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d1b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMwrPg
<LI><a href="#[15d1b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ease
<LI><a href="#[15d1d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dzflash
<LI><a href="#[15d1d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadID
</UL>

<P><STRONG><a name="[15d1d48]"></a>ReadID</STRONG> (ARM, 544 bytes, Stack size 12 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ReadID
</UL>
<BR>[Calls]<UL><LI><a href="#[15d1d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[15d1dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15d1d00]"></a>dzflash</STRONG> (ARM, 612 bytes, Stack size 24 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dzflash
</UL>
<BR>[Calls]<UL><LI><a href="#[15d1d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[15d1b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMwrPg
<LI><a href="#[15d1be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeBuf
<LI><a href="#[15d1c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeByte
<LI><a href="#[15d1cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMrdPg517
</UL>

<P><STRONG><a name="[15d1cb8]"></a>FMrdPg517</STRONG> (ARM, 180 bytes, Stack size 28 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FMrdPg517 &rArr; dzflash
</UL>
<BR>[Calls]<UL><LI><a href="#[15d1d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dzflash
<LI><a href="#[15d1dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[15d1c70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookBad
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15d1c70]"></a>LookBad</STRONG> (ARM, 168 bytes, Stack size 24 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = LookBad &rArr; FMrdPg517 &rArr; dzflash
</UL>
<BR>[Calls]<UL><LI><a href="#[15d1cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMrdPg517
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15d1c28]"></a>JugeByte</STRONG> (ARM, 256 bytes, Stack size 28 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = JugeByte &rArr; dzflash
</UL>
<BR>[Calls]<UL><LI><a href="#[15d1d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dzflash
<LI><a href="#[15d1dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15d1be0]"></a>JugeBuf</STRONG> (ARM, 260 bytes, Stack size 28 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = JugeBuf &rArr; dzflash
</UL>
<BR>[Calls]<UL><LI><a href="#[15d1d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dzflash
<LI><a href="#[15d1dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15d1b98]"></a>Ease</STRONG> (ARM, 676 bytes, Stack size 16 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Ease
</UL>
<BR>[Calls]<UL><LI><a href="#[15d1d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[15d1dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15d1b50]"></a>FMwrPg</STRONG> (ARM, 328 bytes, Stack size 32 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FMwrPg &rArr; dzflash
</UL>
<BR>[Calls]<UL><LI><a href="#[15d1d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dzflash
<LI><a href="#[15d1d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[15d1dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15cfbd8]"></a>Init</STRONG> (ARM, 28 bytes, Stack size 8 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15cfb90]"></a>CE_High</STRONG> (ARM, 40 bytes, Stack size 0 bytes, _spiflash512.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.text)
</UL>
<P><STRONG><a name="[15cfb48]"></a>CE_Low</STRONG> (ARM, 40 bytes, Stack size 0 bytes, _spiflash512.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.text)
</UL>
<P><STRONG><a name="[15cfb00]"></a>ReadID</STRONG> (ARM, 120 bytes, Stack size 16 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15cfab8]"></a>JugeByte</STRONG> (ARM, 180 bytes, Stack size 40 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = JugeByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15cfa70]"></a>JugeBuf</STRONG> (ARM, 180 bytes, Stack size 40 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = JugeBuf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15cfa28]"></a>ReadStatus</STRONG> (ARM, 116 bytes, Stack size 8 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[15cf9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatusOutTime
</UL>

<P><STRONG><a name="[15cf9e0]"></a>ReadStatusOutTime</STRONG> (ARM, 72 bytes, Stack size 16 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15cfa28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[15cf878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOpen
<LI><a href="#[15cf8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[15cf908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteStatus
<LI><a href="#[15cf950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteClose
<LI><a href="#[15cf998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDisable
</UL>

<P><STRONG><a name="[15cf998]"></a>WriteDisable</STRONG> (ARM, 164 bytes, Stack size 24 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WriteDisable &rArr; ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15cf9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatusOutTime
</UL>
<BR>[Called By]<UL><LI><a href="#[15cf950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteClose
</UL>

<P><STRONG><a name="[15cf950]"></a>WriteClose</STRONG> (ARM, 80 bytes, Stack size 16 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WriteClose &rArr; WriteDisable &rArr; ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15cf998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDisable
<LI><a href="#[15cf9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatusOutTime
</UL>
<BR>[Called By]<UL><LI><a href="#[15cf7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
<LI><a href="#[15cf830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ease
</UL>

<P><STRONG><a name="[15cf908]"></a>WriteStatus</STRONG> (ARM, 172 bytes, Stack size 24 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WriteStatus &rArr; ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15cf9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatusOutTime
</UL>
<BR>[Called By]<UL><LI><a href="#[15cf878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOpen
</UL>

<P><STRONG><a name="[15cf8c0]"></a>WriteEnable</STRONG> (ARM, 164 bytes, Stack size 24 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WriteEnable &rArr; ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15cf9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatusOutTime
</UL>
<BR>[Called By]<UL><LI><a href="#[15cf878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOpen
</UL>

<P><STRONG><a name="[15cf878]"></a>WriteOpen</STRONG> (ARM, 160 bytes, Stack size 16 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WriteOpen &rArr; WriteEnable &rArr; ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15cf8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[15cf908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteStatus
<LI><a href="#[15cf9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatusOutTime
</UL>
<BR>[Called By]<UL><LI><a href="#[15cf7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
<LI><a href="#[15cf830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ease
</UL>

<P><STRONG><a name="[15cf830]"></a>Ease</STRONG> (ARM, 156 bytes, Stack size 24 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Ease &rArr; WriteOpen &rArr; WriteEnable &rArr; ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15cf878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOpen
<LI><a href="#[15cf950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15cf7e8]"></a>Write</STRONG> (ARM, 192 bytes, Stack size 40 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Write &rArr; WriteOpen &rArr; WriteEnable &rArr; ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15cf878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOpen
<LI><a href="#[15cf950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15cf7a0]"></a>Read</STRONG> (ARM, 176 bytes, Stack size 40 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.constdata)
</UL>
<P><STRONG><a name="[15cd5d0]"></a>CreatBad</STRONG> (ARM, 212 bytes, Stack size 40 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = CreatBad
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatFlash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _flash.o(.constdata)
</UL>
<P><STRONG><a name="[15cd588]"></a>FormatFlash</STRONG> (ARM, 504 bytes, Stack size 40 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = FormatFlash &rArr; CreatBad
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatBad
<LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _flash.o(.constdata)
</UL>
<P><STRONG><a name="[15cd540]"></a>CompareBuf</STRONG> (ARM, 64 bytes, Stack size 4 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CompareBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[15cd4f8]"></a>Open</STRONG> (ARM, 240 bytes, Stack size 32 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = Open &rArr; FormatFlash &rArr; CreatBad
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareBuf
<LI><a href="#[15cd588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatFlash
<LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _flash.o(.constdata)
</UL>
<P><STRONG><a name="[15cd4b0]"></a>JugeFlash</STRONG> (ARM, 184 bytes, Stack size 48 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = JugeFlash
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _flash.o(.constdata)
</UL>
<P><STRONG><a name="[15cd468]"></a>WriteFlash</STRONG> (ARM, 244 bytes, Stack size 48 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = WriteFlash
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _flash.o(.constdata)
</UL>
<P><STRONG><a name="[15cd420]"></a>ReadFlash</STRONG> (ARM, 188 bytes, Stack size 48 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = ReadFlash
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _flash.o(.constdata)
</UL>
<P><STRONG><a name="[15cd3d8]"></a>EaseFlash</STRONG> (ARM, 60 bytes, Stack size 16 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = EaseFlash
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _flash.o(.constdata)
</UL>
<P><STRONG><a name="[16ae678]"></a>Open</STRONG> (ARM, 116 bytes, Stack size 8 bytes, _rwflashlgc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwflashlgc.o(.constdata)
</UL>
<P><STRONG><a name="[16ae630]"></a>Lgc2Phy</STRONG> (ARM, 204 bytes, Stack size 24 bytes, _rwflashlgc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lgc2Phy
</UL>
<BR>[Called By]<UL><LI><a href="#[16ae480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ease
<LI><a href="#[16ae510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlock
<LI><a href="#[16ae5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[16ae5e8]"></a>Read</STRONG> (ARM, 352 bytes, Stack size 40 bytes, _rwflashlgc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = Read &rArr; Lgc2Phy
</UL>
<BR>[Calls]<UL><LI><a href="#[16ae630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lgc2Phy
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwflashlgc.o(.constdata)
</UL>
<P><STRONG><a name="[16ae5a0]"></a>MoveByte</STRONG> (ARM, 36 bytes, Stack size 0 bytes, _rwflashlgc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16ae558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyBlock
</UL>

<P><STRONG><a name="[16ae558]"></a>CopyBlock</STRONG> (ARM, 596 bytes, Stack size 56 bytes, _rwflashlgc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CopyBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[16ae5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[16ae510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlock
</UL>

<P><STRONG><a name="[16ae510]"></a>WriteBlock</STRONG> (ARM, 540 bytes, Stack size 48 bytes, _rwflashlgc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WriteBlock &rArr; CopyBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[16ae558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyBlock
<LI><a href="#[16ae630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lgc2Phy
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16ae4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[16ae4c8]"></a>Write</STRONG> (ARM, 260 bytes, Stack size 32 bytes, _rwflashlgc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = Write &rArr; WriteBlock &rArr; CopyBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[16ae510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlock
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwflashlgc.o(.constdata)
</UL>
<P><STRONG><a name="[16ae480]"></a>Ease</STRONG> (ARM, 212 bytes, Stack size 16 bytes, _rwflashlgc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = Ease &rArr; Lgc2Phy
</UL>
<BR>[Calls]<UL><LI><a href="#[16ae630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lgc2Phy
<LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwflashlgc.o(.constdata)
</UL>
<P><STRONG><a name="[16ab198]"></a>BackFacFile</STRONG> (ARM, 192 bytes, Stack size 16 bytes, _filedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BackFacFile
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[15db718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileData_BackSet
<LI><a href="#[16a98d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileData_CheckFile
</UL>

<P><STRONG><a name="[16a75c0]"></a>ReadFlow</STRONG> (ARM, 236 bytes, Stack size 32 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadFlow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a7578]"></a>SendReduceData</STRONG> (ARM, 284 bytes, Stack size 104 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SendReduceData
</UL>
<BR>[Called By]<UL><LI><a href="#[16a7410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
</UL>

<P><STRONG><a name="[16a7530]"></a>ReadDataFlow</STRONG> (ARM, 92 bytes, Stack size 16 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadDataFlow
</UL>
<BR>[Called By]<UL><LI><a href="#[16a74e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadParTable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a74e8]"></a>ReadParTable</STRONG> (ARM, 100 bytes, Stack size 288 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ReadParTable &rArr; ReadDataFlow
</UL>
<BR>[Calls]<UL><LI><a href="#[16a7530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFlow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a74a0]"></a>JugeReduceLen</STRONG> (ARM, 168 bytes, Stack size 600 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = JugeReduceLen &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[196ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16a7410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
</UL>

<P><STRONG><a name="[16a7458]"></a>JugeReduceData</STRONG> (ARM, 220 bytes, Stack size 360 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = JugeReduceData
</UL>
<BR>[Called By]<UL><LI><a href="#[16a7410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
</UL>

<P><STRONG><a name="[16a7410]"></a>WriteFlow</STRONG> (ARM, 668 bytes, Stack size 384 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 992<LI>Call Chain = WriteFlow &rArr; JugeReduceLen &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[16a7458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeReduceData
<LI><a href="#[16a74a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeReduceLen
<LI><a href="#[16a7578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendReduceData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a73c8]"></a>GetFlowWaringType</STRONG> (ARM, 100 bytes, Stack size 32 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetFlowWaringType
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a7380]"></a>ReadSpace</STRONG> (ARM, 92 bytes, Stack size 24 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a7338]"></a>AddSpace</STRONG> (ARM, 332 bytes, Stack size 64 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = AddSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a72f0]"></a>GetPhonesSize</STRONG> (ARM, 244 bytes, Stack size 536 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = GetPhonesSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a72a8]"></a>GetPhoneCut</STRONG> (ARM, 380 bytes, Stack size 552 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = GetPhoneCut
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a7260]"></a>WritePhone</STRONG> (ARM, 204 bytes, Stack size 32 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WritePhone &rArr; OSMboxDel &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[c7b6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[c7b6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
<LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a7218]"></a>ClearState</STRONG> (ARM, 164 bytes, Stack size 104 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ClearState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a71d0]"></a>GetState</STRONG> (ARM, 140 bytes, Stack size 104 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a7188]"></a>SetState</STRONG> (ARM, 204 bytes, Stack size 104 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a7140]"></a>GetAreaData</STRONG> (ARM, 360 bytes, Stack size 328 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GetAreaData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a70f8]"></a>JugeID</STRONG> (ARM, 68 bytes, Stack size 0 bytes, takedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16a7068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelAear
<LI><a href="#[16a70b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccessAear
</UL>

<P><STRONG><a name="[16a70b0]"></a>AccessAear</STRONG> (ARM, 492 bytes, Stack size 328 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = AccessAear
</UL>
<BR>[Calls]<UL><LI><a href="#[16a70f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a7068]"></a>DelAear</STRONG> (ARM, 260 bytes, Stack size 320 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = DelAear
</UL>
<BR>[Calls]<UL><LI><a href="#[16a70f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[16a29b0]"></a>GetPar</STRONG> (ARM, 3660 bytes, Stack size 392 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = GetPar
</UL>
<BR>[Called By]<UL><LI><a href="#[16a21d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookPar
</UL>

<P><STRONG><a name="[16a2968]"></a>Send</STRONG> (ARM, 168 bytes, Stack size 24 bytes, appsendagreeon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[16a24e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[16a28d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
<LI><a href="#[16a2920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadJpg
</UL>

<P><STRONG><a name="[16a2920]"></a>LoadJpg</STRONG> (ARM, 268 bytes, Stack size 120 bytes, appsendagreeon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a2968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Called By]<UL><LI><a href="#[16a28d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
</UL>

<P><STRONG><a name="[16a28d8]"></a>SendData</STRONG> (ARM, 304 bytes, Stack size 24 bytes, appsendagreeon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a2920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadJpg
<LI><a href="#[16a2968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Called By]<UL><LI><a href="#[16a2848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow2
</UL>

<P><STRONG><a name="[16a2890]"></a>WriteFlow1</STRONG> (ARM, 200 bytes, Stack size 128 bytes, appsendagreeon.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16a2848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow2
</UL>

<P><STRONG><a name="[16a2848]"></a>WriteFlow2</STRONG> (ARM, 228 bytes, Stack size 24 bytes, appsendagreeon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a2890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow1
<LI><a href="#[16a28d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[16a24e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[16a2800]"></a>UpLoaderDriverExplain</STRONG> (ARM, 336 bytes, Stack size 376 bytes, appsendagreeon.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16a27b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemDriver
</UL>

<P><STRONG><a name="[16a27b8]"></a>NoSemDriver</STRONG> (ARM, 772 bytes, Stack size 56 bytes, appsendagreeon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[16a2800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderDriverExplain
</UL>
<BR>[Called By]<UL><LI><a href="#[16a2530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend1
</UL>

<P><STRONG><a name="[16a2770]"></a>LoaderJpgData</STRONG> (ARM, 460 bytes, Stack size 320 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = LoaderJpgData
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16a1fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderJpHistory
<LI><a href="#[16a2728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemJpgData
</UL>

<P><STRONG><a name="[16a2728]"></a>NoSemJpgData</STRONG> (ARM, 676 bytes, Stack size 152 bytes, appsendagreeon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[16a2770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoaderJpgData
</UL>
<BR>[Called By]<UL><LI><a href="#[16a2530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend1
</UL>

<P><STRONG><a name="[16a26e0]"></a>UpLoaderReduce</STRONG> (ARM, 104 bytes, Stack size 96 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = UpLoaderReduce
</UL>
<BR>[Called By]<UL><LI><a href="#[16a1f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderLog_Par
<LI><a href="#[16a2698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemReduce
</UL>

<P><STRONG><a name="[16a2698]"></a>NoSemReduce</STRONG> (ARM, 900 bytes, Stack size 160 bytes, appsendagreeon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[16a26e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderReduce
</UL>
<BR>[Called By]<UL><LI><a href="#[16a2530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend1
</UL>

<P><STRONG><a name="[16a2650]"></a>WorkParDataExpalin</STRONG> (ARM, 148 bytes, Stack size 544 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = WorkParDataExpalin
</UL>
<BR>[Called By]<UL><LI><a href="#[16a1f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderLog_Par
<LI><a href="#[16a2608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemWorkPar
</UL>

<P><STRONG><a name="[16a2608]"></a>NoSemWorkPar</STRONG> (ARM, 824 bytes, Stack size 160 bytes, appsendagreeon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[16a2650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorkParDataExpalin
</UL>
<BR>[Called By]<UL><LI><a href="#[16a2530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend1
</UL>

<P><STRONG><a name="[16a25c0]"></a>TrackDataExplain</STRONG> (ARM, 92 bytes, Stack size 288 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = TrackDataExplain
</UL>
<BR>[Called By]<UL><LI><a href="#[16a1f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderLog_Par
<LI><a href="#[16a2578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemTrack
</UL>

<P><STRONG><a name="[16a2578]"></a>NoSemTrack</STRONG> (ARM, 824 bytes, Stack size 160 bytes, appsendagreeon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[16a25c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackDataExplain
</UL>
<BR>[Called By]<UL><LI><a href="#[16a2530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend1
</UL>

<P><STRONG><a name="[16a2530]"></a>NoSemSend1</STRONG> (ARM, 132 bytes, Stack size 16 bytes, appsendagreeon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a2578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemTrack
<LI><a href="#[16a2608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemWorkPar
<LI><a href="#[16a2698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemReduce
<LI><a href="#[16a2728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemJpgData
<LI><a href="#[16a27b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[16a24e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[16a24e8]"></a>Task</STRONG> (ARM, 156 bytes, Stack size 24 bytes, appsendagreeon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c7b6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[16a2530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend1
<LI><a href="#[16a2848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow2
<LI><a href="#[16a2968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>

<P><STRONG><a name="[16a24a0]"></a>Init</STRONG> (ARM, 156 bytes, Stack size 8 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a2458]"></a>SendLogin</STRONG> (ARM, 32 bytes, Stack size 8 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SendLogin
</UL>
<BR>[Called By]<UL><LI><a href="#[16a2380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[16a23c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
<LI><a href="#[16a2410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend
</UL>

<P><STRONG><a name="[16a2410]"></a>NoSemSend</STRONG> (ARM, 164 bytes, Stack size 16 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = NoSemSend &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c7b658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[16a2458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a23c8]"></a>WriteFlow</STRONG> (ARM, 216 bytes, Stack size 40 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WriteFlow &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c7b658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[16a2458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a2380]"></a>WriteCommand</STRONG> (ARM, 208 bytes, Stack size 40 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WriteCommand &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c7b658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[16a2458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a2338]"></a>Answer</STRONG> (ARM, 168 bytes, Stack size 48 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Answer &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c781e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a22f0]"></a>LogInfor</STRONG> (ARM, 56 bytes, Stack size 16 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LogInfor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a22a8]"></a>Orientation</STRONG> (ARM, 120 bytes, Stack size 296 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Orientation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a2260]"></a>Menum</STRONG> (ARM, 56 bytes, Stack size 16 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Menum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a2218]"></a>TxtMenum</STRONG> (ARM, 56 bytes, Stack size 16 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TxtMenum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a21d0]"></a>LookPar</STRONG> (ARM, 152 bytes, Stack size 32 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = LookPar &rArr; GetPar
</UL>
<BR>[Calls]<UL><LI><a href="#[16a29b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a2188]"></a>UpdateSoftWare</STRONG> (ARM, 112 bytes, Stack size 16 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpdateSoftWare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a2140]"></a>Waring</STRONG> (ARM, 468 bytes, Stack size 304 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = Waring
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a20f8]"></a>UploaderJpg1</STRONG> (ARM, 396 bytes, Stack size 312 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = UploaderJpg1
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a20b0]"></a>UploaderJpg2Sig</STRONG> (ARM, 416 bytes, Stack size 312 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = UploaderJpg2Sig
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[196d600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[16a2068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploaderJpg2
</UL>

<P><STRONG><a name="[16a2068]"></a>UploaderJpg2</STRONG> (ARM, 432 bytes, Stack size 56 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = UploaderJpg2 &rArr; UploaderJpg2Sig
</UL>
<BR>[Calls]<UL><LI><a href="#[16a20b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploaderJpg2Sig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a2020]"></a>UploaderPar</STRONG> (ARM, 152 bytes, Stack size 296 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = UploaderPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a1fd8]"></a>UpLoaderJpHistory</STRONG> (ARM, 184 bytes, Stack size 48 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = UpLoaderJpHistory &rArr; LoaderJpgData
</UL>
<BR>[Calls]<UL><LI><a href="#[16a2770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoaderJpgData
</UL>
<BR>[Called By]<UL><LI><a href="#[16a1f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploaderLog
</UL>

<P><STRONG><a name="[16a1f90]"></a>UpLoaderLog_Par</STRONG> (ARM, 684 bytes, Stack size 72 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = UpLoaderLog_Par &rArr; WorkParDataExpalin
</UL>
<BR>[Calls]<UL><LI><a href="#[16a25c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackDataExplain
<LI><a href="#[16a2650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorkParDataExpalin
<LI><a href="#[16a26e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderReduce
</UL>
<BR>[Called By]<UL><LI><a href="#[16a1f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploaderLog
</UL>

<P><STRONG><a name="[16a1f48]"></a>UploaderLog</STRONG> (ARM, 68 bytes, Stack size 16 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = UploaderLog &rArr; UpLoaderLog_Par &rArr; WorkParDataExpalin
</UL>
<BR>[Calls]<UL><LI><a href="#[16a1f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderLog_Par
<LI><a href="#[16a1fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderJpHistory
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a1f00]"></a>UpLoaderWarning</STRONG> (ARM, 104 bytes, Stack size 24 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UpLoaderWarning
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a1eb8]"></a>OutRoadMap</STRONG> (ARM, 184 bytes, Stack size 328 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = OutRoadMap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a1e70]"></a>UpLoaderReduce1</STRONG> (ARM, 100 bytes, Stack size 24 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UpLoaderReduce1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a1e28]"></a>UpLoaderDriver</STRONG> (ARM, 356 bytes, Stack size 304 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = UpLoaderDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[16a1de0]"></a>UpLoaderHandMess</STRONG> (ARM, 208 bytes, Stack size 24 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UpLoaderHandMess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1753658]"></a>SetPar</STRONG> (ARM, 4064 bytes, Stack size 392 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = SetPar
</UL>
<BR>[Called By]<UL><LI><a href="#[1753538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPar1
</UL>

<P><STRONG><a name="[1753610]"></a>AgreeData</STRONG> (ARM, 140 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AgreeData
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[17535c8]"></a>Orientation</STRONG> (ARM, 80 bytes, Stack size 32 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Orientation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1753580]"></a>Track</STRONG> (ARM, 148 bytes, Stack size 120 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Track
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1753538]"></a>SetPar1</STRONG> (ARM, 316 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = SetPar1 &rArr; SetPar
</UL>
<BR>[Calls]<UL><LI><a href="#[1753658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[17534f0]"></a>UnlockWaring</STRONG> (ARM, 160 bytes, Stack size 120 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = UnlockWaring
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[17534a8]"></a>AmendMenum</STRONG> (ARM, 304 bytes, Stack size 72 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = AmendMenum
</UL>
<BR>[Calls]<UL><LI><a href="#[196d600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1753460]"></a>LoaderTxt</STRONG> (ARM, 268 bytes, Stack size 256 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LoaderTxt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1753418]"></a>LoaderTxtMenum</STRONG> (ARM, 52 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LoaderTxtMenum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[17533d0]"></a>SetPhone</STRONG> (ARM, 624 bytes, Stack size 88 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = SetPhone
</UL>
<BR>[Calls]<UL><LI><a href="#[196d600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1753388]"></a>CallAnswer</STRONG> (ARM, 280 bytes, Stack size 64 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CallAnswer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1753340]"></a>SoftWareState</STRONG> (ARM, 128 bytes, Stack size 24 bytes, appgprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[17532b0]"></a>UpdateSoftWare</STRONG> (ARM, 244 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UpdateSoftWare &rArr; OSQPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1753268]"></a>LookPar</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LookPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1753220]"></a>Contrl</STRONG> (ARM, 416 bytes, Stack size 120 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Contrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[17531d8]"></a>ConfineCall</STRONG> (ARM, 148 bytes, Stack size 120 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ConfineCall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1753190]"></a>ConfigCentrSever</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ConfigCentrSever
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1753148]"></a>Activation</STRONG> (ARM, 4 bytes, Stack size 0 bytes, appgprs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1753100]"></a>LookJpg</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LookJpg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[17530b8]"></a>JpgIng</STRONG> (ARM, 4 bytes, Stack size 0 bytes, appgprs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1753070]"></a>SetVidType</STRONG> (ARM, 128 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetVidType
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1753028]"></a>TabelList</STRONG> (ARM, 4 bytes, Stack size 0 bytes, appgprs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752fe0]"></a>GetLessAdree</STRONG> (ARM, 456 bytes, Stack size 296 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GetLessAdree
</UL>
<BR>[Called By]<UL><LI><a href="#[1752f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookWorkPar
</UL>

<P><STRONG><a name="[1752f98]"></a>LookWorkPar</STRONG> (ARM, 264 bytes, Stack size 320 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = LookWorkPar &rArr; GetLessAdree
</UL>
<BR>[Calls]<UL><LI><a href="#[1752fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLessAdree
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752f50]"></a>WorkParTimer</STRONG> (ARM, 80 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WorkParTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752f08]"></a>WorkParSpace</STRONG> (ARM, 148 bytes, Stack size 120 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WorkParSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752ec0]"></a>LookLog</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LookLog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752e78]"></a>SetWaringTerm</STRONG> (ARM, 80 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetWaringTerm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752e30]"></a>LookWaringTerm</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LookWaringTerm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752de8]"></a>SetRound</STRONG> (ARM, 152 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetRound
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752da0]"></a>DelRound</STRONG> (ARM, 108 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DelRound
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752d58]"></a>SetRectangle</STRONG> (ARM, 148 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752d10]"></a>DelRectangle</STRONG> (ARM, 108 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DelRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752cc8]"></a>SetPolygon</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetPolygon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752c80]"></a>DelPolygon</STRONG> (ARM, 108 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DelPolygon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752c38]"></a>SetRoadMap</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetRoadMap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752bf0]"></a>DelRoadMap</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DelRoadMap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752ba8]"></a>Reduce</STRONG> (ARM, 140 bytes, Stack size 96 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Reduce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752b60]"></a>GetDriver</STRONG> (ARM, 296 bytes, Stack size 272 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GetDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1752b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver
</UL>

<P><STRONG><a name="[1752b18]"></a>Driver</STRONG> (ARM, 536 bytes, Stack size 88 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Driver &rArr; GetDriver
</UL>
<BR>[Calls]<UL><LI><a href="#[1752b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752ad0]"></a>Navigation</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Navigation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752a88]"></a>HandTxt</STRONG> (ARM, 432 bytes, Stack size 272 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = HandTxt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752a40]"></a>HandAttemper</STRONG> (ARM, 588 bytes, Stack size 304 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = HandAttemper
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[17529f8]"></a>AmendForm</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AmendForm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[17529b0]"></a>UpLoaderForm</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpLoaderForm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752968]"></a>UpLoaderFormSuc</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpLoaderFormSuc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1752920]"></a>UpLoaderFormErro</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpLoaderFormErro
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[17528d8]"></a>UpLoaderCan</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpLoaderCan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[174d4c8]"></a>Init</STRONG> (ARM, 1080 bytes, Stack size 464 bytes, opensensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opensensor.o(.constdata)
</UL>
<P><STRONG><a name="[1748670]"></a>GetTimeAdd</STRONG> (ARM, 488 bytes, Stack size 40 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[1748628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
</UL>

<P><STRONG><a name="[1748628]"></a>GetData</STRONG> (ARM, 624 bytes, Stack size 240 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GetData &rArr; GetTimeAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1748670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[1748478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOper
</UL>

<P><STRONG><a name="[17485e0]"></a>JugeTimerPar</STRONG> (ARM, 196 bytes, Stack size 16 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = JugeTimerPar
</UL>
<BR>[Called By]<UL><LI><a href="#[1748478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOper
</UL>

<P><STRONG><a name="[1748598]"></a>AccClose</STRONG> (ARM, 588 bytes, Stack size 16 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AccClose
</UL>
<BR>[Called By]<UL><LI><a href="#[1748478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOper
</UL>

<P><STRONG><a name="[1748550]"></a>AccTimer</STRONG> (ARM, 120 bytes, Stack size 16 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AccTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[1748508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOpen
</UL>

<P><STRONG><a name="[1748508]"></a>AccOpen</STRONG> (ARM, 236 bytes, Stack size 16 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AccOpen &rArr; AccTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[1748550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[1748478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOper
</UL>

<P><STRONG><a name="[17484c0]"></a>AccStateChange</STRONG> (ARM, 324 bytes, Stack size 120 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = AccStateChange
</UL>
<BR>[Called By]<UL><LI><a href="#[1748478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOper
</UL>

<P><STRONG><a name="[1748478]"></a>AccOper</STRONG> (ARM, 228 bytes, Stack size 16 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = AccOper &rArr; GetData &rArr; GetTimeAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[17484c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccStateChange
<LI><a href="#[1748508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOpen
<LI><a href="#[1748598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccClose
<LI><a href="#[17485e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeTimerPar
<LI><a href="#[1748628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> accoper.o(.constdata)
</UL>
<P><STRONG><a name="[1748430]"></a>OpenGps</STRONG> (ARM, 28 bytes, Stack size 8 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OpenGps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> accoper.o(.constdata)
</UL>
<P><STRONG><a name="[17483e8]"></a>OpenGprs</STRONG> (ARM, 28 bytes, Stack size 8 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OpenGprs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> accoper.o(.constdata)
</UL>
<P><STRONG><a name="[17483a0]"></a>CloseGps</STRONG> (ARM, 28 bytes, Stack size 8 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CloseGps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> accoper.o(.constdata)
</UL>
<P><STRONG><a name="[1748358]"></a>CloseGprs</STRONG> (ARM, 28 bytes, Stack size 8 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CloseGprs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> accoper.o(.constdata)
</UL>
<P><STRONG><a name="[180c820]"></a>Init</STRONG> (ARM, 208 bytes, Stack size 32 bytes, appagreedatasensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appagreedatasensor.o(.constdata)
</UL>
<P><STRONG><a name="[180c7d8]"></a>HelpWaring</STRONG> (ARM, 328 bytes, Stack size 120 bytes, appagreedatasensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HelpWaring
</UL>
<BR>[Called By]<UL><LI><a href="#[180c5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
</UL>

<P><STRONG><a name="[180c790]"></a>JugeVo</STRONG> (ARM, 536 bytes, Stack size 120 bytes, appagreedatasensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = JugeVo
</UL>
<BR>[Called By]<UL><LI><a href="#[180c700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoCheck
</UL>

<P><STRONG><a name="[180c748]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, appagreedatasensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[180c700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoCheck
</UL>

<P><STRONG><a name="[180c700]"></a>VoCheck</STRONG> (ARM, 100 bytes, Stack size 24 bytes, appagreedatasensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = VoCheck &rArr; JugeVo
</UL>
<BR>[Calls]<UL><LI><a href="#[180c748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
<LI><a href="#[180c790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeVo
</UL>
<BR>[Called By]<UL><LI><a href="#[180c5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
</UL>

<P><STRONG><a name="[180c6b8]"></a>Jugeuint16</STRONG> (ARM, 80 bytes, Stack size 0 bytes, appagreedatasensor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[180c5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
</UL>

<P><STRONG><a name="[180c670]"></a>Jugeint32</STRONG> (ARM, 80 bytes, Stack size 0 bytes, appagreedatasensor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[180c5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
</UL>

<P><STRONG><a name="[180c628]"></a>Jugeuint8</STRONG> (ARM, 80 bytes, Stack size 0 bytes, appagreedatasensor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[180c5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
</UL>

<P><STRONG><a name="[180c5e0]"></a>GetData</STRONG> (ARM, 248 bytes, Stack size 24 bytes, appagreedatasensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GetData &rArr; VoCheck &rArr; JugeVo
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[180c628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Jugeuint8
<LI><a href="#[180c670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Jugeint32
<LI><a href="#[180c6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Jugeuint16
<LI><a href="#[180c700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoCheck
<LI><a href="#[180c7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HelpWaring
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appagreedatasensor.o(.constdata)
</UL>
<P><STRONG><a name="[18075b8]"></a>InitSpace</STRONG> (ARM, 356 bytes, Stack size 128 bytes, space.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = InitSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> space.o(.constdata)
</UL>
<P><STRONG><a name="[1807570]"></a>JugeSpeed</STRONG> (ARM, 608 bytes, Stack size 120 bytes, space.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = JugeSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[18074e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGps
</UL>

<P><STRONG><a name="[1807528]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, space.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[18074e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGps
</UL>

<P><STRONG><a name="[18074e0]"></a>GetGps</STRONG> (ARM, 532 bytes, Stack size 64 bytes, space.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GetGps &rArr; JugeSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[1807528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
<LI><a href="#[1807570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[1807450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Space_WorkParSpace
<LI><a href="#[1807498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Space_Track
</UL>
<BR>[Address Reference Count : 1]<UL><LI> space.o(.constdata)
</UL>
<P><STRONG><a name="[1807498]"></a>Space_Track</STRONG> (ARM, 192 bytes, Stack size 120 bytes, space.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = Space_Track &rArr; GetGps &rArr; JugeSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[18074e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> space.o(.constdata)
</UL>
<P><STRONG><a name="[1807450]"></a>Space_WorkParSpace</STRONG> (ARM, 192 bytes, Stack size 120 bytes, space.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = Space_WorkParSpace &rArr; GetGps &rArr; JugeSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[18074e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> space.o(.constdata)
</UL>
<P><STRONG><a name="[1803968]"></a>Warning</STRONG> (ARM, 388 bytes, Stack size 24 bytes, jugeoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Warning
</UL>
<BR>[Called By]<UL><LI><a href="#[1803920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeAppair
</UL>

<P><STRONG><a name="[1803920]"></a>JugeAppair</STRONG> (ARM, 308 bytes, Stack size 360 bytes, jugeoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = JugeAppair &rArr; Warning
</UL>
<BR>[Calls]<UL><LI><a href="#[1803968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning
</UL>
<BR>[Called By]<UL><LI><a href="#[18038d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juge
</UL>

<P><STRONG><a name="[18038d8]"></a>Juge</STRONG> (ARM, 188 bytes, Stack size 16 bytes, jugeoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = Juge &rArr; JugeAppair &rArr; Warning
</UL>
<BR>[Calls]<UL><LI><a href="#[1803920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeAppair
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jugeoper.o(.constdata)
</UL>
<P><STRONG><a name="[18af208]"></a>JugeGpsState</STRONG> (ARM, 172 bytes, Stack size 16 bytes, warningupate.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18af0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[18af1c0]"></a>LoadWaringJugeWorkParState</STRONG> (ARM, 140 bytes, Stack size 0 bytes, warningupate.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18af0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeWorkPar
</UL>

<P><STRONG><a name="[18af178]"></a>LoadWaringJugeWorkPar</STRONG> (ARM, 76 bytes, Stack size 0 bytes, warningupate.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18af0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeWorkPar
</UL>

<P><STRONG><a name="[18af130]"></a>SendWarning</STRONG> (ARM, 236 bytes, Stack size 16 bytes, warningupate.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18af0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeWorkPar
</UL>

<P><STRONG><a name="[18af0e8]"></a>JugeWorkPar</STRONG> (ARM, 300 bytes, Stack size 320 bytes, warningupate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18af130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendWarning
<LI><a href="#[18af178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadWaringJugeWorkPar
<LI><a href="#[18af1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadWaringJugeWorkParState
</UL>
<BR>[Called By]<UL><LI><a href="#[18af0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[18af0a0]"></a>Task</STRONG> (ARM, 32 bytes, Stack size 8 bytes, warningupate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[18af0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeWorkPar
<LI><a href="#[18af208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeGpsState
</UL>

<P><STRONG><a name="[18af058]"></a>Init</STRONG> (ARM, 40 bytes, Stack size 8 bytes, warningupate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> warningupate.o(.constdata)
</UL>
<P><STRONG><a name="[18aa840]"></a>Init</STRONG> (ARM, 60 bytes, Stack size 8 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[18aa7f8]"></a>GetData</STRONG> (ARM, 156 bytes, Stack size 24 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetData
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[18aa7b0]"></a>Answer</STRONG> (ARM, 116 bytes, Stack size 32 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Answer
</UL>
<BR>[Called By]<UL><LI><a href="#[18aa600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voic
<LI><a href="#[18aa690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPar
<LI><a href="#[18aa768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Order_Phone
</UL>

<P><STRONG><a name="[18aa768]"></a>Order_Phone</STRONG> (ARM, 440 bytes, Stack size 40 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Order_Phone &rArr; Answer
</UL>
<BR>[Calls]<UL><LI><a href="#[18aa7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Answer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[18aa720]"></a>GetCentrIP</STRONG> (ARM, 144 bytes, Stack size 112 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GetCentrIP
</UL>
<BR>[Called By]<UL><LI><a href="#[18aa6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeePar
</UL>

<P><STRONG><a name="[18aa6d8]"></a>SeePar</STRONG> (ARM, 844 bytes, Stack size 992 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = SeePar &rArr; GetCentrIP
</UL>
<BR>[Calls]<UL><LI><a href="#[18aa720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCentrIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[18aa690]"></a>SetPar</STRONG> (ARM, 692 bytes, Stack size 544 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = SetPar &rArr; Answer
</UL>
<BR>[Calls]<UL><LI><a href="#[18aa7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Answer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[18aa648]"></a>Log</STRONG> (ARM, 560 bytes, Stack size 88 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Log
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[18aa600]"></a>Voic</STRONG> (ARM, 84 bytes, Stack size 16 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Voic &rArr; Answer
</UL>
<BR>[Calls]<UL><LI><a href="#[18aa7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Answer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[18aa5b8]"></a>LCDRef</STRONG> (ARM, 628 bytes, Stack size 200 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = LCDRef
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[18a5c30]"></a>Init</STRONG> (ARM, 216 bytes, Stack size 40 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Init &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[196d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messageandphone.o(.constdata)
</UL>
<P><STRONG><a name="[18a5be8]"></a>AgreePhone</STRONG> (ARM, 216 bytes, Stack size 48 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AgreePhone
</UL>
<BR>[Called By]<UL><LI><a href="#[18a59a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptFunMostPhone
<LI><a href="#[18a59f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptFunNewPhone
<LI><a href="#[18a5ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptFunHupWork
</UL>

<P><STRONG><a name="[18a5ba0]"></a>ptFunHupWork</STRONG> (ARM, 28 bytes, Stack size 8 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ptFunHupWork &rArr; AgreePhone
</UL>
<BR>[Calls]<UL><LI><a href="#[18a5be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreePhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messageandphone.o(.constdata)
</UL>
<P><STRONG><a name="[18a5b58]"></a>NewMessage</STRONG> (ARM, 580 bytes, Stack size 488 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = NewMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messageandphone.o(.constdata)
</UL>
<P><STRONG><a name="[18a5b10]"></a>JugePhone</STRONG> (ARM, 208 bytes, Stack size 120 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = JugePhone
</UL>
<BR>[Called By]<UL><LI><a href="#[18a59f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptFunNewPhone
</UL>

<P><STRONG><a name="[18a5ac8]"></a>JugeDriver</STRONG> (ARM, 1532 bytes, Stack size 432 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = JugeDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[18a59f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptFunNewPhone
</UL>

<P><STRONG><a name="[18a5a80]"></a>ConsPhone</STRONG> (ARM, 452 bytes, Stack size 160 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ConsPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[18a59f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptFunNewPhone
</UL>

<P><STRONG><a name="[18a5a38]"></a>BasicPhone</STRONG> (ARM, 244 bytes, Stack size 48 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BasicPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[18a59f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptFunNewPhone
</UL>

<P><STRONG><a name="[18a59f0]"></a>ptFunNewPhone</STRONG> (ARM, 400 bytes, Stack size 16 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = ptFunNewPhone &rArr; JugeDriver
</UL>
<BR>[Calls]<UL><LI><a href="#[18a5a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicPhone
<LI><a href="#[18a5a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsPhone
<LI><a href="#[18a5ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeDriver
<LI><a href="#[18a5b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugePhone
<LI><a href="#[18a5be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreePhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messageandphone.o(.constdata)
</UL>
<P><STRONG><a name="[18a59a8]"></a>ptFunMostPhone</STRONG> (ARM, 112 bytes, Stack size 8 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ptFunMostPhone &rArr; AgreePhone
</UL>
<BR>[Calls]<UL><LI><a href="#[18a5be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreePhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messageandphone.o(.constdata)
</UL>
<P><STRONG><a name="[18a5960]"></a>CloseCall</STRONG> (ARM, 56 bytes, Stack size 16 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CloseCall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messageandphone.o(.constdata)
</UL>
<P><STRONG><a name="[18a0a78]"></a>OpenSms</STRONG> (ARM, 296 bytes, Stack size 344 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[18a0718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[18a0a30]"></a>CreartAgreeOn</STRONG> (ARM, 272 bytes, Stack size 448 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18a07a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Login
</UL>

<P><STRONG><a name="[18a09e8]"></a>CreatDev</STRONG> (ARM, 168 bytes, Stack size 32 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18a07a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Login
</UL>

<P><STRONG><a name="[18a09a0]"></a>OpenSev</STRONG> (ARM, 324 bytes, Stack size 520 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18a07a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Login
</UL>

<P><STRONG><a name="[18a0958]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18a08c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevPar
<LI><a href="#[18a0910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevParSigle
</UL>

<P><STRONG><a name="[18a0910]"></a>GetSevParSigle</STRONG> (ARM, 568 bytes, Stack size 168 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[18a0958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[18a08c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevPar
</UL>

<P><STRONG><a name="[18a08c8]"></a>GetSevPar</STRONG> (ARM, 212 bytes, Stack size 72 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[18a0910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevParSigle
<LI><a href="#[18a0958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[18a07a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Login
</UL>

<P><STRONG><a name="[18a0880]"></a>LoginUDP</STRONG> (ARM, 228 bytes, Stack size 112 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18a0838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dev_Login
</UL>

<P><STRONG><a name="[18a0838]"></a>Dev_Login</STRONG> (ARM, 112 bytes, Stack size 376 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18a0880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoginUDP
</UL>
<BR>[Called By]<UL><LI><a href="#[18a07a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Login
</UL>

<P><STRONG><a name="[18a07f0]"></a>Dev_APN</STRONG> (ARM, 164 bytes, Stack size 432 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18a07a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Login
</UL>

<P><STRONG><a name="[18a07a8]"></a>Login</STRONG> (ARM, 212 bytes, Stack size 64 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18a07f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dev_APN
<LI><a href="#[18a0838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dev_Login
<LI><a href="#[18a08c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevPar
<LI><a href="#[18a09a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSev
<LI><a href="#[18a09e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatDev
<LI><a href="#[18a0a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreartAgreeOn
</UL>
<BR>[Called By]<UL><LI><a href="#[18a0718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[18a0760]"></a>CloseSms</STRONG> (ARM, 88 bytes, Stack size 8 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18a0718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[18a0718]"></a>Task</STRONG> (ARM, 652 bytes, Stack size 16 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7b658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[c7b6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[18a0760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSms
<LI><a href="#[18a07a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Login
<LI><a href="#[18a0a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSms
</UL>

<P><STRONG><a name="[18a06d0]"></a>Init</STRONG> (ARM, 200 bytes, Stack size 8 bytes, logonserver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logonserver.o(.constdata)
</UL>
<P><STRONG><a name="[18cab78]"></a>Init</STRONG> (ARM, 212 bytes, Stack size 8 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSMboxCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[18cab30]"></a>OpenGps</STRONG> (ARM, 116 bytes, Stack size 24 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OpenGps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[18caae8]"></a>CloseGps</STRONG> (ARM, 136 bytes, Stack size 8 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CloseGps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[18caaa0]"></a>LogSucOper</STRONG> (ARM, 156 bytes, Stack size 8 bytes, openandclose.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18ca9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenGprs
</UL>

<P><STRONG><a name="[18caa58]"></a>OpenGprsNo</STRONG> (ARM, 64 bytes, Stack size 8 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = OpenGprsNo &rArr; OpenGprs &rArr; ClearSem &rArr; OSMboxPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[18ca9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenGprs
</UL>
<BR>[Called By]<UL><LI><a href="#[18ca8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeLogin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[18caa10]"></a>ClearSem</STRONG> (ARM, 88 bytes, Stack size 16 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ClearSem &rArr; OSMboxPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c78198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemQuery
<LI><a href="#[c7b6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>
<BR>[Called By]<UL><LI><a href="#[18ca980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGprs
<LI><a href="#[18ca9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenGprs
</UL>

<P><STRONG><a name="[18ca9c8]"></a>OpenGprs</STRONG> (ARM, 192 bytes, Stack size 8 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OpenGprs &rArr; ClearSem &rArr; OSMboxPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7b658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[c7b6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[18caa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[18caa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenGprsNo
<LI><a href="#[18caaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogSucOper
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[18ca980]"></a>CloseGprs</STRONG> (ARM, 124 bytes, Stack size 8 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CloseGprs &rArr; ClearSem &rArr; OSMboxPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7b658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[18caa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[18ca938]"></a>ClearTimer</STRONG> (ARM, 20 bytes, Stack size 0 bytes, openandclose.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[18ca8f0]"></a>OpenUart</STRONG> (ARM, 108 bytes, Stack size 40 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OpenUart &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[196d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[18ca8a8]"></a>ChargeLogin</STRONG> (ARM, 48 bytes, Stack size 16 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ChargeLogin &rArr; OpenGprsNo &rArr; OpenGprs &rArr; ClearSem &rArr; OSMboxPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[18caa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenGprsNo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[18ca860]"></a>ChargeLoadDev</STRONG> (ARM, 56 bytes, Stack size 16 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ChargeLoadDev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[18c7068]"></a>Task</STRONG> (ARM, 876 bytes, Stack size 16 bytes, updatesoftware.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c78f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[c78f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[c7b658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>

<P><STRONG><a name="[18c7020]"></a>Init</STRONG> (ARM, 104 bytes, Stack size 8 bytes, updatesoftware.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c79040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> updatesoftware.o(.data)
</UL>
<P><STRONG><a name="[18c24b8]"></a>MODEM_Dly100ms</STRONG> (ARM, 128 bytes, Stack size 4 bytes, _init.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18c2470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckLed
</UL>

<P><STRONG><a name="[18c2470]"></a>CheckLed</STRONG> (ARM, 452 bytes, Stack size 8 bytes, _init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18c24b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_Dly100ms
</UL>
<BR>[Called By]<UL><LI><a href="#[18c2428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[18c2428]"></a>Init</STRONG> (ARM, 440 bytes, Stack size 24 bytes, _init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[16a98d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileData_CheckFile
<LI><a href="#[18c2470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckLed
</UL>

<P><STRONG><a name="[196cb78]"></a>__arm_div8</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[196cb30]"></a>__arm_div4</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[196cae8]"></a>__arm_div_large</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[196c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[196b3d0]"></a>_dadd1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[196b190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[196b220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[196b388]"></a>_dsub1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[196b220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[196b2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[196a5b0]"></a>_fadd1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[196a370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[196a568]"></a>_fsub1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[196a4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[19640d0]"></a>__ARM_exceptions_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1964088]"></a>__Heap_DescSize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1964040]"></a>__alloca_initialize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1963ff8]"></a>__cpp_initialize__aeabi_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1963fb0]"></a>__cxa_finalize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>

<P><STRONG><a name="[196b678]"></a>__fpl_infinity</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19629c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem (Weak Reference)
<LI><a href="#[1963008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix (Weak Reference)
<LI><a href="#[1963330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN (Weak Reference)
<LI><a href="#[1965c88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn (Weak Reference)
<LI><a href="#[19666e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN (Weak Reference)
<LI><a href="#[1966d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt (Weak Reference)
<LI><a href="#[1969928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul (Weak Reference)
<LI><a href="#[196a058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu (Weak Reference)
<LI><a href="#[196a370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub (Weak Reference)
<LI><a href="#[196a4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd (Weak Reference)
<LI><a href="#[196a998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d (Weak Reference)
<LI><a href="#[196ab48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul (Weak Reference)
<LI><a href="#[196ade0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv (Weak Reference)
<LI><a href="#[196b190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub (Weak Reference)
<LI><a href="#[196b2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd (Weak Reference)
<LI><a href="#[196b7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f (Weak Reference)
</UL>

<P><STRONG><a name="[196bbf8]"></a>__user_heap_extend</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[196bcd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_extend (Weak Reference)
</UL>

<P><STRONG><a name="[1963f68]"></a>_atexit_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[19645e0]"></a>_call_atexit_fns</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1964670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (Weak Reference)
</UL>

<P><STRONG><a name="[1963f20]"></a>_clock_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1963ed8]"></a>_fp_trap_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1963e90]"></a>_get_lc_collate</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1963e48]"></a>_get_lc_ctype</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1963e00]"></a>_get_lc_monetary</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1963db8]"></a>_get_lc_numeric</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1963d70]"></a>_get_lc_time</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1963d28]"></a>_getenv_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1963ce0]"></a>_init_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1963c98]"></a>_init_user_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1963c50]"></a>_initio</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1963bc0]"></a>_signal_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[1963b78]"></a>_terminate_user_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>

<P><STRONG><a name="[1963b30]"></a>_terminateio</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19641a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>
<HR></body></html>
