


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************
    2 00000000         ;*   startup.s: startup file for NXP LPC230x Family Micr
                       oprocessors
    3 00000000         ;*
    4 00000000         ;*   Copyright(C) 2006, NXP Semiconductor
    5 00000000         ;*   All rights reserved.
    6 00000000         ;*
    7 00000000         ;*   History
    8 00000000         ;*   2006.09.01  ver 1.00    Prelimnary version, first R
                       elease
    9 00000000         ;*
   10 00000000         ;*******************************************************
                       **********************/
   11 00000000                 PRESERVE8
   12 00000000         
   13 00000000         ;/*
   14 00000000         ; *  The STARTUP.S code is executed after CPU Reset. Thi
                       s file may be 
   15 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   16 00000000         ; *  symbols are entered under Options - ASM - Define.
   17 00000000         ; *
   18 00000000         ; *  REMAP: when set the startup code initializes the re
                       gister MEMMAP 
   19 00000000         ; *  which overwrites the settings of the CPU configurat
                       ion pins. The 
   20 00000000         ; *  startup and interrupt vectors are remapped from:
   21 00000000         ; *     0x00000000  default setting (not remapped)
   22 00000000         ; *     0x40000000  when RAM_MODE is used
   23 00000000         ; *
   24 00000000         ; *  RAM_MODE: when set the device is configured for cod
                       e execution
   25 00000000         ; *  from on-chip RAM starting at address 0x40000000. 
   26 00000000         ; */
   27 00000000         
   28 00000000         
   29 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   30 00000000         
   31 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   32 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   33 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   34 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   35 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   36 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   37 00000000 0000001F 



ARM Macro Assembler    Page 2 


                       Mode_SYS
                               EQU              0x1F
   38 00000000         
   39 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   40 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   41 00000000         
   42 00000000         
   43 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   44 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   45 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   46 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   47 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   48 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   49 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   50 00000000         ;// </h>
   51 00000000         
   52 00000000 00000000 
                       UND_Stack_Size
                               EQU              0x00000000
   53 00000000 00000100 
                       SVC_Stack_Size
                               EQU              0x00000100
   54 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   55 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000
   56 00000000 00000120 
                       IRQ_Stack_Size
                               EQU              0x00000120  ;Ã¿²ãÇ¶Ì×ÐèÒª9¸ö×Ö¶
                                                            ÑÕ»£¬ÔÊÐí8²ãÇ¶Ì×
   57 00000000 00000200 
                       USR_Stack_Size
                               EQU              0x00000200
   58 00000000         
   60 00000000 00000420 
                       Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
 + USR_Stack_Size)
   61 00000000         
   62 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   63 00000000         Stack_Mem
                               SPACE            Stack_Size
   64 00000420         
   65 00000420 00000200 
                       StackUsr
                               EQU              Stack_Mem+USR_Stack_Size
   66 00000420         
   67 00000420 00000420 
                       Stack_Top
                               EQU              Stack_Mem + Stack_Size
   68 00000420         



ARM Macro Assembler    Page 3 


   69 00000420                 EXPORT           StackUsr    ;ÉùÃ÷ÎªÍâ²¿±êºÅ£¬¹©
                                                            IRQ.Sµ÷ÓÃ¡£
   70 00000420         ;// <h> Heap Configuration
   71 00000420         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
   72 00000420         ;// </h>
   73 00000420         
   74 00000420 00000001 
                       Heap_Size
                               EQU              0x00000001
   75 00000420         
   76 00000420                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   77 00000000         Heap_Mem
                               SPACE            Heap_Size
   78 00000001         
   79 00000001         ; Area Definition and Entry Point
   80 00000001         ;  Startup Code must be linked first at Address at which
                        it expects to run.
   81 00000001         
   82 00000001         ;ÒýÈëµÄÍâ²¿±êºÅÔÚÕâÉùÃ÷
   83 00000001                 IMPORT           FIQ_Exception ;¿ìËÙÖÐ¶ÏÒì³£´¦Àí
                                                            ³ÌÐò
   84 00000001                 IMPORT           __main      ;CÓïÑÔÖ÷³ÌÐòÈë¿Ú 
   85 00000001                 IMPORT           TargetResetInit 
                                                            ;Ä¿±ê°å»ù±¾³õÊ¼»¯
   86 00000001                 IMPORT           SoftwareInterrupt 
                                                            ;Èí¼þÖÐ¶ÏµÄ´¦Àíº¯Êý
                                                            
   87 00000001         
   88 00000001                 AREA             RESET, CODE, READONLY
   89 00000000                 ARM
   90 00000000         
   91 00000000         ; Exception Vectors
   92 00000000         ;  Mapped to Address 0.
   93 00000000         ;  Absolute addressing mode must be used.
   94 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
   95 00000000         
   96 00000000         ;;ÖÐ¶ÏÏòÁ¿±í
   97 00000000         ;;¶ÔÓÚ1.Î´¶¨ÒåÖ¸Áî 2.Ô¤È¡Ö¸ÖÐÖ¹ 3.Êý¾ÝÖÐÖ¹ÈýÖÖÒì³£²»×ö´¦
                       Àí
   98 00000000         ;;
   99 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr
  100 00000004 E59FF018        LDR              PC, Undef_Addr
  101 00000008 E59FF018        LDR              PC, SWI_Addr
  102 0000000C E59FF018        LDR              PC, PAbt_Addr
  103 00000010 E59FF018        LDR              PC, DAbt_Addr
  104 00000014 E1A00000        NOP                          ; Reserved Vector 
  105 00000018         ;               LDR     PC, IRQ_Addr
  106 00000018 E51FF120        LDR              PC, [PC, #-0x0120] ; Vector fro
                                                            m VicVectAddr
  107 0000001C E59FF014        LDR              PC, FIQ_Addr
  108 00000020         
  109 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
  110 00000024 00000000 
                       Undef_Addr



ARM Macro Assembler    Page 4 


                               DCD              Undef_Handler
  111 00000028 00000000 
                       SWI_Addr
                               DCD              SoftwareInterrupt
  112 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
  113 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
  114 00000034 B9206E28        DCD              0xB9206E28  ; Reserved Address 
                                                            
  115 00000038         ;IRQ_Addr       DCD     IRQ_Handler
  116 00000038 00000000 
                       FIQ_Addr
                               DCD              FIQ_Handler
  117 0000003C         
  118 0000003C EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
  119 00000040         ;SWI_Handler    B       SWI_Handler
  120 00000040 EAFFFFFE 
                       PAbt_Handler
                               B                PAbt_Handler
  121 00000044 EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
  122 00000048         ;IRQ_Handler    B       IRQ_Handler
  123 00000048         FIQ_Handler
  124 00000048 E92D400F        STMFD            SP!, {R0-R3, LR}
  125 0000004C EBFFFFFE        BL               FIQ_Exception
  126 00000050 E8BD400F        LDMFD            SP!, {R0-R3, LR}
  127 00000054 E25EF004        SUBS             PC,  LR,  #4
  128 00000058         
  129 00000058         
  130 00000058         ; Reset Handler     
  131 00000058                 EXPORT           Reset_Handler
  132 00000058         Reset_Handler
  133 00000058         
  134 00000058         ; Setup Stack for each mode
  135 00000058 E59F0050        LDR              R0, =Stack_Top
  136 0000005C         
  137 0000005C         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  138 0000005C E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  139 00000060 E1A0D000        MOV              SP, R0
  140 00000064 E2400000        SUB              R0, R0, #UND_Stack_Size
  141 00000068         
  142 00000068         ;  Enter Abort Mode and set its Stack Pointer
  143 00000068 E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  144 0000006C E1A0D000        MOV              SP, R0
  145 00000070 E2400000        SUB              R0, R0, #ABT_Stack_Size
  146 00000074         
  147 00000074         ;  Enter FIQ Mode and set its Stack Pointer
  148 00000074 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  149 00000078 E1A0D000        MOV              SP, R0



ARM Macro Assembler    Page 5 


  150 0000007C E2400000        SUB              R0, R0, #FIQ_Stack_Size
  151 00000080         
  152 00000080         ;  Enter IRQ Mode and set its Stack Pointer
  153 00000080 E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  154 00000084 E1A0D000        MOV              SP, R0
  155 00000088 E2400E12        SUB              R0, R0, #IRQ_Stack_Size
  156 0000008C         
  157 0000008C         ;  Enter Supervisor Mode and set its Stack Pointer
  158 0000008C E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  159 00000090 E1A0D000        MOV              SP, R0
  160 00000094 E2400C01        SUB              R0, R0, #SVC_Stack_Size
  161 00000098         
  162 00000098         ;  Enter User Mode and set its Stack Pointer
  163 00000098 E321F010        MSR              CPSR_c, #Mode_USR
  164 0000009C E1A0D000        MOV              SP, R0
  165 000000A0 E24DAC02        SUB              SL, SP, #USR_Stack_Size
  166 000000A4         
  167 000000A4         ;    IMPORT TargetResetInit
  168 000000A4 EBFFFFFE        BL               TargetResetInit 
                                                            ;ÔÚtarget.cÎÄ¼þÖÐ
  169 000000A8         
  170 000000A8         ; Enter the C code
  171 000000A8         
  172 000000A8         ;                IMPORT  __main
  173 000000A8 E59F0004        LDR              R0, =__main
  174 000000AC E12FFF10        BX               R0
  175 000000B0         
  176 000000B0         
  177 000000B0         ; User Initial Stack & Heap
  178 000000B0         
  179 000000B0         ;;º¯ÊýËµÃ÷²Î¿¼RV_CC.PDFÎÄ¼þP291
  180 000000B0         ;;function:  __user_initial_stackheap
  181 000000B0         ;;description:³õÊ¼»¯¶ÑÕ»(stack)ºÍ¶Ñ(heap),º¯Êý²ÉÓÃË«´æ´¢
                       Æ÷ÇøÓò¡£
  182 000000B0         ;;parameter:r0,sp,r2
  183 000000B0         ;;return value:r0--¶ÑµÄ»ùÖ·£¨heap base in r0£©
  184 000000B0         ;;r1--¶ÑÕ»»ùÖ·£¬¶ÑÕ»ÇøÓòµÄ×î¸ßµØÖ·
  185 000000B0         ;;r2--¶ÑµÄÏÞÖÆµØÖ·(heap limit in r2)
  186 000000B0         ;;r3--¶ÑÕ»ÏÞÖÆµØÖ·£¬¶ÑÕ»ÇøÓòµÄ×îµÍµØÖ·
  187 000000B0         ;;
  188 000000B0         
  189 000000B0 00000000 
              00000000         AREA             |.text|, CODE, READONLY
  190 00000000         
  191 00000000                 IMPORT           __use_two_region_memory ;select
                                                             memory model of tw
                                                            o memory region
  192 00000000                 EXPORT           __user_initial_stackheap
  193 00000000         __user_initial_stackheap
  194 00000000         
  195 00000000 E59F000C        LDR              R0, =  Heap_Mem
  196 00000004 E59F100C        LDR              R1, =(Stack_Mem + USR_Stack_Siz
e)
  197 00000008 E59F200C        LDR              R2, = (Heap_Mem +      Heap_Siz
e)
  198 0000000C E59F300C        LDR              R3, = Stack_Mem
  199 00000010 E12FFF1E        BX               LR



ARM Macro Assembler    Page 6 


  200 00000014         
  201 00000014                 END
              00000000 
              00000200 
              00000001 
              00000000 
Command Line: --debug --no_warn --xref --device=DARMP --apcs=interwork -o.\obj\
Startup.o -IC:\Keil\ARM\INC\Philips --list=.\lst\Startup.lst app\Startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 62 in file app\Startup.s
   Uses
      None
Comment: STACK unused
StackUsr 00000200

Symbol: StackUsr
   Definitions
      At line 65 in file app\Startup.s
   Uses
      At line 69 in file app\Startup.s
Comment: StackUsr used once
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 63 in file app\Startup.s
   Uses
      At line 65 in file app\Startup.s
      At line 67 in file app\Startup.s
      At line 196 in file app\Startup.s
      At line 198 in file app\Startup.s

Stack_Top 00000420

Symbol: Stack_Top
   Definitions
      At line 67 in file app\Startup.s
   Uses
      At line 135 in file app\Startup.s
Comment: Stack_Top used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 76 in file app\Startup.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 77 in file app\Startup.s
   Uses
      At line 195 in file app\Startup.s
      At line 197 in file app\Startup.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 113 in file app\Startup.s
   Uses
      At line 103 in file app\Startup.s
Comment: DAbt_Addr used once
DAbt_Handler 00000044

Symbol: DAbt_Handler
   Definitions
      At line 121 in file app\Startup.s
   Uses
      At line 113 in file app\Startup.s
      At line 121 in file app\Startup.s

FIQ_Addr 00000038

Symbol: FIQ_Addr
   Definitions
      At line 116 in file app\Startup.s
   Uses
      At line 107 in file app\Startup.s
Comment: FIQ_Addr used once
FIQ_Handler 00000048

Symbol: FIQ_Handler
   Definitions
      At line 123 in file app\Startup.s
   Uses
      At line 116 in file app\Startup.s
Comment: FIQ_Handler used once
PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 112 in file app\Startup.s
   Uses
      At line 102 in file app\Startup.s
Comment: PAbt_Addr used once
PAbt_Handler 00000040

Symbol: PAbt_Handler
   Definitions
      At line 120 in file app\Startup.s
   Uses
      At line 112 in file app\Startup.s
      At line 120 in file app\Startup.s

RESET 00000000

Symbol: RESET
   Definitions
      At line 88 in file app\Startup.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: Reset_Addr
   Definitions
      At line 109 in file app\Startup.s
   Uses
      At line 99 in file app\Startup.s
Comment: Reset_Addr used once
Reset_Handler 00000058

Symbol: Reset_Handler
   Definitions
      At line 132 in file app\Startup.s
   Uses
      At line 109 in file app\Startup.s
      At line 131 in file app\Startup.s

SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 111 in file app\Startup.s
   Uses
      At line 101 in file app\Startup.s
Comment: SWI_Addr used once
Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 110 in file app\Startup.s
   Uses
      At line 100 in file app\Startup.s
Comment: Undef_Addr used once
Undef_Handler 0000003C

Symbol: Undef_Handler
   Definitions
      At line 118 in file app\Startup.s
   Uses
      At line 110 in file app\Startup.s
      At line 118 in file app\Startup.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 99 in file app\Startup.s
   Uses
      None
Comment: Vectors unused
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 189 in file app\Startup.s
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 193 in file app\Startup.s
   Uses
      At line 192 in file app\Startup.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_info$$$RESET 00000000

Symbol: .debug_info$$$RESET
   Definitions
      None
   Uses
      None
Warning: .debug_info$$$RESET undefinedComment: .debug_info$$$RESET unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_line$$$RESET 00000000

Symbol: .debug_line$$$RESET
   Definitions
      None
   Uses
      None
Warning: .debug_line$$$RESET undefinedComment: .debug_line$$$RESET unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_info$$$.text 00000000

Symbol: .debug_info$$$.text
   Definitions
      None
   Uses
      None
Warning: .debug_info$$$.text undefinedComment: .debug_info$$$.text unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_line$$$.text 00000000

Symbol: .debug_line$$$.text
   Definitions
      None
   Uses
      None
Warning: .debug_line$$$.text undefinedComment: .debug_line$$$.text unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_abbrev 00000000

Symbol: .debug_abbrev
   Definitions
      None
   Uses
      None
Warning: .debug_abbrev undefinedComment: .debug_abbrev unused
__ARM_asm.debug_abbrev 00000000

Symbol: __ARM_asm.debug_abbrev
   Definitions
      None
   Uses
      None
Warning: __ARM_asm.debug_abbrev undefinedComment: __ARM_asm.debug_abbrev unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 54 in file app\Startup.s
   Uses
      At line 60 in file app\Startup.s
      At line 145 in file app\Startup.s

FIQ_Stack_Size 00000000

Symbol: FIQ_Stack_Size
   Definitions
      At line 55 in file app\Startup.s
   Uses
      At line 60 in file app\Startup.s
      At line 150 in file app\Startup.s

F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 40 in file app\Startup.s
   Uses
      At line 138 in file app\Startup.s
      At line 143 in file app\Startup.s
      At line 148 in file app\Startup.s
      At line 153 in file app\Startup.s
      At line 158 in file app\Startup.s

Heap_Size 00000001

Symbol: Heap_Size
   Definitions
      At line 74 in file app\Startup.s
   Uses
      At line 77 in file app\Startup.s
      At line 197 in file app\Startup.s

IRQ_Stack_Size 00000120

Symbol: IRQ_Stack_Size
   Definitions
      At line 56 in file app\Startup.s
   Uses
      At line 60 in file app\Startup.s
      At line 155 in file app\Startup.s

I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 39 in file app\Startup.s
   Uses
      At line 138 in file app\Startup.s
      At line 143 in file app\Startup.s
      At line 148 in file app\Startup.s
      At line 153 in file app\Startup.s
      At line 158 in file app\Startup.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 35 in file app\Startup.s
   Uses
      At line 143 in file app\Startup.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 32 in file app\Startup.s
   Uses
      At line 148 in file app\Startup.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 33 in file app\Startup.s
   Uses
      At line 153 in file app\Startup.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 34 in file app\Startup.s
   Uses
      At line 158 in file app\Startup.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 37 in file app\Startup.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 36 in file app\Startup.s
   Uses
      At line 138 in file app\Startup.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 31 in file app\Startup.s
   Uses
      At line 163 in file app\Startup.s
Comment: Mode_USR used once
SVC_Stack_Size 00000100




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: SVC_Stack_Size
   Definitions
      At line 53 in file app\Startup.s
   Uses
      At line 60 in file app\Startup.s
      At line 160 in file app\Startup.s

Stack_Size 00000420

Symbol: Stack_Size
   Definitions
      At line 60 in file app\Startup.s
   Uses
      At line 63 in file app\Startup.s
      At line 67 in file app\Startup.s

UND_Stack_Size 00000000

Symbol: UND_Stack_Size
   Definitions
      At line 52 in file app\Startup.s
   Uses
      At line 60 in file app\Startup.s
      At line 140 in file app\Startup.s

USR_Stack_Size 00000200

Symbol: USR_Stack_Size
   Definitions
      At line 57 in file app\Startup.s
   Uses
      At line 60 in file app\Startup.s
      At line 65 in file app\Startup.s
      At line 165 in file app\Startup.s
      At line 196 in file app\Startup.s

17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

FIQ_Exception 00000000

Symbol: FIQ_Exception
   Definitions
      At line 83 in file app\Startup.s
   Uses
      At line 125 in file app\Startup.s
Comment: FIQ_Exception used once
SoftwareInterrupt 00000000

Symbol: SoftwareInterrupt
   Definitions
      At line 86 in file app\Startup.s
   Uses
      At line 111 in file app\Startup.s
Comment: SoftwareInterrupt used once
TargetResetInit 00000000

Symbol: TargetResetInit
   Definitions
      At line 85 in file app\Startup.s
   Uses
      At line 168 in file app\Startup.s
Comment: TargetResetInit used once
__main 00000000

Symbol: __main
   Definitions
      At line 84 in file app\Startup.s
   Uses
      At line 173 in file app\Startup.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 191 in file app\Startup.s
   Uses
      None
Comment: __use_two_region_memory unused
5 symbols
372 symbols in table
