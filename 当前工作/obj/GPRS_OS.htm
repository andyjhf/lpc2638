<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\GPRS_OS.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\GPRS_OS.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT3.1 [Build 942]: Last Updated: Mon Nov 02 15:27:29 2009
<BR><P>
<H3>Maximum Stack Usage =       1504 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
NewMessage
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[c80cd0]">Reset_Handler</a>
 <LI><a href="#[c80d18]">__user_initial_stackheap</a>
 <LI><a href="#[c81700]">IRQ_Handler</a>
 <LI><a href="#[c81e58]">Timer0_Handler</a>
 <LI><a href="#[c81d80]">Uart0_Handler</a>
 <LI><a href="#[c81d38]">Uart1_Handler</a>
 <LI><a href="#[c81cf0]">Uart2_Handler</a>
 <LI><a href="#[c81ca8]">Uart3_Handler</a>
 <LI><a href="#[c81f30]">CAN_Handler</a>
 <LI><a href="#[c81e10]">Timer1_Handler</a>
 <LI><a href="#[c81dc8]">Timer2_Handler</a>
 <LI><a href="#[c81ee8]">EINT2_Handler</a>
 <LI><a href="#[c80c88]">SoftwareInterrupt</a>
 <LI><a href="#[c81628]">OSIntCtxSw</a>
 <LI><a href="#[c7ee18]">__OSStartHighRdy</a>
 <LI><a href="#[c80f10]">Undef_Handler</a>
 <LI><a href="#[c80ec8]">PAbt_Handler</a>
 <LI><a href="#[c80e80]">DAbt_Handler</a>
 <LI><a href="#[c80e38]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[c80f10]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c80f10]">Undef_Handler</a><BR>
 <LI><a href="#[c80ec8]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c80ec8]">PAbt_Handler</a><BR>
 <LI><a href="#[c80e80]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c80e80]">DAbt_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1051240]">Init</a>
 <LI><a href="#[1051120]">Open</a>
 <LI><a href="#[1051048]">Close</a>
 <LI><a href="#[1050e98]">Write</a>
 <LI><a href="#[1050f70]">Read</a>
 <LI><a href="#[c80cd0]">Reset_Handler</a>
 <LI><a href="#[c80f10]">Undef_Handler</a>
 <LI><a href="#[c80c88]">SoftwareInterrupt</a>
 <LI><a href="#[c80ec8]">PAbt_Handler</a>
 <LI><a href="#[c80e80]">DAbt_Handler</a>
 <LI><a href="#[c80e38]">FIQ_Handler</a>
 <LI><a href="#[18719f0]">__main</a>
 <LI><a href="#[1979de8]">__ARM_get_argv</a>
 <LI><a href="#[c81ee8]">EINT2_Handler</a>
 <LI><a href="#[c81e10]">Timer1_Handler</a>
 <LI><a href="#[c81dc8]">Timer2_Handler</a>
 <LI><a href="#[c81e58]">Timer0_Handler</a>
 <LI><a href="#[c81d80]">Uart0_Handler</a>
 <LI><a href="#[c81d38]">Uart1_Handler</a>
 <LI><a href="#[c81cf0]">Uart2_Handler</a>
 <LI><a href="#[c81ca8]">Uart3_Handler</a>
 <LI><a href="#[c81f30]">CAN_Handler</a>
 <LI><a href="#[14a95e0]">CE_High</a>
 <LI><a href="#[14a9598]">CE_Low</a>
 <LI><a href="#[18753a8]">main</a>
 <LI><a href="#[197ab50]">__I_use_semihosting</a>
 <LI><a href="#[c81628]">OSIntCtxSw</a>
 <LI><a href="#[c81628]">OSIntCtxSw</a>
 <LI><a href="#[c7ee18]">__OSStartHighRdy</a>
 <LI><a href="#[c756c8]">nand_calculate_ecc</a>
 <LI><a href="#[c75680]">nand_correct_data</a>
 <LI><a href="#[c75638]">Crc</a>
 <LI><a href="#[c755f0]">CheckSum</a>
 <LI><a href="#[c755a8]">CheckAdd</a>
 <LI><a href="#[c75560]">Crc1021</a>
 <LI><a href="#[10564c8]">Asc2Bcd</a>
 <LI><a href="#[1056480]">Bcd2Asc</a>
 <LI><a href="#[1056438]">Asc2Algorism</a>
 <LI><a href="#[10563f0]">Algorism2Asc</a>
 <LI><a href="#[1056360]">Asc2HexBuf</a>
 <LI><a href="#[10562d0]">HexBuf2Asc</a>
 <LI><a href="#[1056288]">Asc2Hex</a>
 <LI><a href="#[1056240]">Hex2Asc</a>
 <LI><a href="#[1056090]">Asc2Float</a>
 <LI><a href="#[10561f8]">Bcd2Hex</a>
 <LI><a href="#[10561b0]">Hex2Bcd</a>
 <LI><a href="#[1056168]">JugeAscBcd</a>
 <LI><a href="#[10560d8]">JugeAscHex</a>
 <LI><a href="#[1056048]">JugeAscFloat</a>
 <LI><a href="#[1056120]">JugeHexBcd</a>
 <LI><a href="#[1056000]">ClsArray</a>
 <LI><a href="#[1055fb8]">MoveByte</a>
 <LI><a href="#[1055f70]">CompareBuf</a>
 <LI><a href="#[1055f28]">CompareVa</a>
 <LI><a href="#[1055ee0]">Strsize</a>
 <LI><a href="#[1055e50]">Strsize16</a>
 <LI><a href="#[1055e98]">StrATChar</a>
 <LI><a href="#[1055e08]">LookStr</a>
 <LI><a href="#[1055d30]">LookEnable</a>
 <LI><a href="#[1055dc0]">LookStrInLength</a>
 <LI><a href="#[1055d78]">LookStrDown</a>
 <LI><a href="#[1055ce8]">LookShowChar</a>
 <LI><a href="#[1055c58]">SeekStr</a>
 <LI><a href="#[1055c10]">MemSpace</a>
 <LI><a href="#[1055b38]">JugeBufType</a>
 <LI><a href="#[10559d0]">PhoPdu</a>
 <LI><a href="#[1055a60]">gsmEncode7bit</a>
 <LI><a href="#[1055a18]">PduNumber</a>
 <LI><a href="#[10558b0]">ExpPdu</a>
 <LI><a href="#[1055988]">Bit72Bit8</a>
 <LI><a href="#[1055868]">GetCsq</a>
 <LI><a href="#[1055aa8]">StrToUni</a>
 <LI><a href="#[10558f8]">UniToStr</a>
 <LI><a href="#[1055b80]">INT322IPAsc</a>
 <LI><a href="#[1055bc8]">IPAsc2INT32</a>
 <LI><a href="#[1055820]">IP2Char</a>
 <LI><a href="#[10557d8]">Char2IP</a>
 <LI><a href="#[1055790]">LookBufInLength</a>
 <LI><a href="#[1053238]">Juge</a>
 <LI><a href="#[1053088]">Next</a>
 <LI><a href="#[1052f20]">Back</a>
 <LI><a href="#[1052ed8]">GetWeek</a>
 <LI><a href="#[104ec20]">Init</a>
 <LI><a href="#[104eb90]">Read</a>
 <LI><a href="#[104eb00]">Write</a>
 <LI><a href="#[104cbd0]">Open</a>
 <LI><a href="#[104cb40]">Start</a>
 <LI><a href="#[104caf8]">RwSpi</a>
 <LI><a href="#[104cab0]">Write</a>
 <LI><a href="#[104ca68]">Read</a>
 <LI><a href="#[104c9d8]">JugeByte</a>
 <LI><a href="#[104ca20]">JugeBuf</a>
 <LI><a href="#[104c990]">End</a>
 <LI><a href="#[104c948]">Close</a>
 <LI><a href="#[104ad18]">Init</a>
 <LI><a href="#[104ab20]">Open</a>
 <LI><a href="#[104a970]">Close</a>
 <LI><a href="#[104a658]">Read</a>
 <LI><a href="#[104a4a8]">Write</a>
 <LI><a href="#[1047e28]">Init</a>
 <LI><a href="#[1047de0]">Open</a>
 <LI><a href="#[1047d50]">Read</a>
 <LI><a href="#[1047d98]">Close</a>
 <LI><a href="#[10458a8]">Init</a>
 <LI><a href="#[1045860]">Open</a>
 <LI><a href="#[1045590]">Read</a>
 <LI><a href="#[1045548]">Close</a>
 <LI><a href="#[1043080]">Init</a>
 <LI><a href="#[1043038]">Read</a>
 <LI><a href="#[1042ff0]">Huawei_CloseShow</a>
 <LI><a href="#[1042f60]">GetChipID</a>
 <LI><a href="#[1042f18]">Huawei_GetModermState</a>
 <LI><a href="#[1042ed0]">Huawei_GetModermCard</a>
 <LI><a href="#[1042e40]">Huawei_GetCenterNumber</a>
 <LI><a href="#[1042df8]">Huawei_GetMessage</a>
 <LI><a href="#[1042db0]">Huawei_SetTxtOrPdu</a>
 <LI><a href="#[1042d68]">Huawei_SeeTxtOrPdu</a>
 <LI><a href="#[1042d20]">Huawei_MsgSend</a>
 <LI><a href="#[1042cd8]">Huawei_MsgSendData</a>
 <LI><a href="#[1042c90]">Huawei_SeeCarrier</a>
 <LI><a href="#[1042c48]">Huawei_SQ</a>
 <LI><a href="#[1042c00]">Huawei_DelMsg</a>
 <LI><a href="#[1042bb8]">Huawei_Set_Mem</a>
 <LI><a href="#[1042b70]">Huawei_MessSet</a>
 <LI><a href="#[1042b28]">Huawei_Upadate</a>
 <LI><a href="#[1042ae0]">Huawei_Reg</a>
 <LI><a href="#[1042a98]">Huawei_CLIP</a>
 <LI><a href="#[1042a50]">Huawei_ATD</a>
 <LI><a href="#[1042a08]">Huawei_Chup</a>
 <LI><a href="#[10429c0]">Huawei_ATA</a>
 <LI><a href="#[1042978]">Huawei_IMEI</a>
 <LI><a href="#[1042930]">Huawei_CGDCONT</a>
 <LI><a href="#[10428e8]">Huawei_Etcpip</a>
 <LI><a href="#[10428a0]">Huawei_IOMODE</a>
 <LI><a href="#[1042858]">Huawei_IPOPENX</a>
 <LI><a href="#[1042810]">Huawei_IPSENDX</a>
 <LI><a href="#[10427c8]">Huawei_SeeDataRead</a>
 <LI><a href="#[1042780]">Huawei_IPDR</a>
 <LI><a href="#[1042618]">Huawei_IPCLOSE</a>
 <LI><a href="#[10425d0]">Huawei_LogOnTCPIP</a>
 <LI><a href="#[1042738]">Huawei_JugeETCPIP</a>
 <LI><a href="#[10426f0]">Huawei_DNSR</a>
 <LI><a href="#[10426a8]">Huawei_IPR</a>
 <LI><a href="#[1042660]">Huawei_CLCC</a>
 <LI><a href="#[1042588]">Huawei_SEEIPCLOSE</a>
 <LI><a href="#[1042540]">Huawei_PowerDown</a>
 <LI><a href="#[10424f8]">Huawei_SeeCGDCONT</a>
 <LI><a href="#[10424b0]">Huawei_SendExtension</a>
 <LI><a href="#[1042468]">Huawei_SetVolume</a>
 <LI><a href="#[124f5d0]">Init</a>
 <LI><a href="#[124f300]">PowerUp</a>
 <LI><a href="#[124f2b8]">PowerDown</a>
 <LI><a href="#[124f270]">Read</a>
 <LI><a href="#[124c358]">Init1</a>
 <LI><a href="#[124c0d0]">Open1</a>
 <LI><a href="#[124c040]">Close1</a>
 <LI><a href="#[124be90]">Read1</a>
 <LI><a href="#[124be00]">GetState1</a>
 <LI><a href="#[1249298]">Init</a>
 <LI><a href="#[1249250]">Open</a>
 <LI><a href="#[1249208]">Close</a>
 <LI><a href="#[1249178]">Read</a>
 <LI><a href="#[12469c0]">Init</a>
 <LI><a href="#[1246978]">Open</a>
 <LI><a href="#[1246930]">Close</a>
 <LI><a href="#[12468a0]">Read</a>
 <LI><a href="#[1243600]">Init</a>
 <LI><a href="#[12435b8]">Open</a>
 <LI><a href="#[1243570]">Close</a>
 <LI><a href="#[1243528]">Read</a>
 <LI><a href="#[12434e0]">GetState</a>
 <LI><a href="#[1243450]">Get</a>
 <LI><a href="#[12433c0]">GetID2Par</a>
 <LI><a href="#[1243408]">GetPar2ID</a>
 <LI><a href="#[1243498]">GetSi</a>
 <LI><a href="#[12ef840]">Init</a>
 <LI><a href="#[12ef7f8]">Open</a>
 <LI><a href="#[12ef7b0]">Close</a>
 <LI><a href="#[12ef3c0]">Read</a>
 <LI><a href="#[12ef378]">GetState</a>
 <LI><a href="#[12ec318]">Host_Answer</a>
 <LI><a href="#[12ec2d0]">Host_DeliverCentr</a>
 <LI><a href="#[12ec288]">Host_SysInfor</a>
 <LI><a href="#[12ec240]">Host_Phone</a>
 <LI><a href="#[12ec1f8]">Host_InitStart</a>
 <LI><a href="#[12ec1b0]">Host_InitOver</a>
 <LI><a href="#[12ec168]">Host_HostSoft</a>
 <LI><a href="#[12ec120]">Host_ConInfor</a>
 <LI><a href="#[12ec048]">Host_ParAnswer</a>
 <LI><a href="#[12ec5e8]">Init</a>
 <LI><a href="#[12ec5a0]">Open</a>
 <LI><a href="#[12ec3a8]">Close</a>
 <LI><a href="#[12ec3f0]">Read1</a>
 <LI><a href="#[12e9350]">Init</a>
 <LI><a href="#[12e9308]">Open</a>
 <LI><a href="#[12e92c0]">Close</a>
 <LI><a href="#[12e9230]">Read</a>
 <LI><a href="#[12e91e8]">GetState</a>
 <LI><a href="#[12e63d0]">Init</a>
 <LI><a href="#[12e6388]">Open</a>
 <LI><a href="#[12e6340]">Close</a>
 <LI><a href="#[12e6268]">Read</a>
 <LI><a href="#[12e3428]">Init</a>
 <LI><a href="#[12e33e0]">Open</a>
 <LI><a href="#[12e3398]">Close</a>
 <LI><a href="#[12e3350]">Read</a>
 <LI><a href="#[12e09d0]">Init</a>
 <LI><a href="#[12e0988]">Open</a>
 <LI><a href="#[12e0940]">Close</a>
 <LI><a href="#[12e0868]">Read</a>
 <LI><a href="#[12bdbf0]">Init</a>
 <LI><a href="#[12bdba8]">Open</a>
 <LI><a href="#[12bdb60]">Close</a>
 <LI><a href="#[12bda40]">Read</a>
 <LI><a href="#[12bb108]">Init</a>
 <LI><a href="#[12bb0c0]">Open</a>
 <LI><a href="#[12bb078]">Close</a>
 <LI><a href="#[12bafe8]">Read</a>
 <LI><a href="#[12b8b40]">Init</a>
 <LI><a href="#[12b8af8]">Open</a>
 <LI><a href="#[12b8ab0]">Close</a>
 <LI><a href="#[12b8a68]">Read</a>
 <LI><a href="#[12b63b0]">Init</a>
 <LI><a href="#[12b6368]">Open</a>
 <LI><a href="#[12b6320]">Close</a>
 <LI><a href="#[12b62d8]">Read</a>
 <LI><a href="#[12b3b98]">Init1</a>
 <LI><a href="#[12b3910]">CreateBin1</a>
 <LI><a href="#[12b3880]">CreateRecoder1</a>
 <LI><a href="#[12b3688]">Open1</a>
 <LI><a href="#[12b35f8]">Close1</a>
 <LI><a href="#[12b3568]">ReadBin1</a>
 <LI><a href="#[12b34d8]">WriteBin1</a>
 <LI><a href="#[12b3400]">ReadRecoder2</a>
 <LI><a href="#[12b32e0]">WriteRecoder2</a>
 <LI><a href="#[12b3298]">GetJlNum1</a>
 <LI><a href="#[12b3208]">Seek1</a>
 <LI><a href="#[12b3178]">SeekSize1</a>
 <LI><a href="#[12b3130]">ReadHeadTail</a>
 <LI><a href="#[12b30e8]">ReadPor</a>
 <LI><a href="#[12b30a0]">GetPointNum</a>
 <LI><a href="#[12b0700]">Init</a>
 <LI><a href="#[12b06b8]">Open</a>
 <LI><a href="#[12b0670]">Close</a>
 <LI><a href="#[145bbf0]">Init</a>
 <LI><a href="#[145bba8]">InitSys1</a>
 <LI><a href="#[145bb60]">InitMessage1</a>
 <LI><a href="#[145bb18]">InitPhone1</a>
 <LI><a href="#[145bad0]">InitGprs1</a>
 <LI><a href="#[145ba40]">OpenSys1</a>
 <LI><a href="#[145b9b0]">OpenMessage1</a>
 <LI><a href="#[145b920]">OpenIP1</a>
 <LI><a href="#[145b890]">OpenPhone1</a>
 <LI><a href="#[145b848]">CloseSys1</a>
 <LI><a href="#[145b7b8]">CloseMessage1</a>
 <LI><a href="#[145b800]">CloseIP1</a>
 <LI><a href="#[145b770]">ClosePhone1</a>
 <LI><a href="#[145b380]">ReadMessage1</a>
 <LI><a href="#[145b2f0]">ReadIP1</a>
 <LI><a href="#[145b260]">ReadPhone1</a>
 <LI><a href="#[145b1d0]">AgreePhone1</a>
 <LI><a href="#[145b140]">CloseCall1</a>
 <LI><a href="#[145b0b0]">SendMessage1</a>
 <LI><a href="#[145b068]">SendIP1</a>
 <LI><a href="#[145afd8]">SendPhone1</a>
 <LI><a href="#[145af48]">SetVolume1</a>
 <LI><a href="#[145b6e0]">GetSysState1</a>
 <LI><a href="#[145b650]">GetMessageState1</a>
 <LI><a href="#[145b5c0]">GetPhoneState1</a>
 <LI><a href="#[145b530]">GetIPState1</a>
 <LI><a href="#[145b410]">DNSRIP1</a>
 <LI><a href="#[145b4a0]">GetIpPro1</a>
 <LI><a href="#[1457658]">Init</a>
 <LI><a href="#[14575c8]">Open</a>
 <LI><a href="#[1457580]">Close</a>
 <LI><a href="#[1457538]">Read</a>
 <LI><a href="#[14574f0]">Enable</a>
 <LI><a href="#[14574a8]">DisEnable</a>
 <LI><a href="#[1457460]">GetEnable</a>
 <LI><a href="#[1457418]">GetPro</a>
 <LI><a href="#[14573d0]">EditPro</a>
 <LI><a href="#[1454300]">Init</a>
 <LI><a href="#[14542b8]">Open</a>
 <LI><a href="#[1454270]">Close</a>
 <LI><a href="#[1451048]">Init</a>
 <LI><a href="#[1451000]">Open</a>
 <LI><a href="#[1450fb8]">Close</a>
 <LI><a href="#[1450f70]">Get</a>
 <LI><a href="#[1556990]">Explain_Answer</a>
 <LI><a href="#[1556948]">Explain_Track</a>
 <LI><a href="#[1556900]">Explain_SetPar</a>
 <LI><a href="#[15568b8]">Explain_AmendMenum</a>
 <LI><a href="#[1556870]">Explain_LoaderTxt</a>
 <LI><a href="#[1556828]">Explain_LoaderTxtMenum</a>
 <LI><a href="#[15567e0]">Explain_SetPhone</a>
 <LI><a href="#[1556798]">Explain_CallAnswer</a>
 <LI><a href="#[1556750]">Explain_UpdateSoftWare</a>
 <LI><a href="#[1556708]">Explain_LookPar</a>
 <LI><a href="#[15566c0]">Explain_Contrl</a>
 <LI><a href="#[1556678]">Explain_ConfineCall</a>
 <LI><a href="#[1556630]">Explain_ConfigCentrSever</a>
 <LI><a href="#[15565a0]">Explain_LookJpg</a>
 <LI><a href="#[1556558]">Explain_JpgIng</a>
 <LI><a href="#[1556510]">Explain_SetVidType</a>
 <LI><a href="#[15564c8]">Explain_TabelList</a>
 <LI><a href="#[1556480]">Explain_WorkParTimer</a>
 <LI><a href="#[1556438]">Explain_WorkParSpace</a>
 <LI><a href="#[15563f0]">Explain_LookLog</a>
 <LI><a href="#[15563a8]">Explain_SetWaringTerm</a>
 <LI><a href="#[1556360]">Explain_SetRound</a>
 <LI><a href="#[1556318]">Explain_DelRound</a>
 <LI><a href="#[15562d0]">Explain_SetRectangle</a>
 <LI><a href="#[1556288]">Explain_DelRectangle</a>
 <LI><a href="#[1556240]">Explain_SetPolygon</a>
 <LI><a href="#[15561f8]">Explain_DelPolygon</a>
 <LI><a href="#[15561b0]">Explain_SetRoadMap</a>
 <LI><a href="#[1556168]">Explain_DelRoadMap</a>
 <LI><a href="#[1556120]">Explain_Reduce</a>
 <LI><a href="#[15560d8]">Explain_Driver</a>
 <LI><a href="#[1556090]">Explain_Navigation</a>
 <LI><a href="#[1556048]">Explain_HandTxt</a>
 <LI><a href="#[1556000]">Explain_HandAttemper</a>
 <LI><a href="#[1555fb8]">Explain_AmendForm</a>
 <LI><a href="#[1555f70]">Explain_UpLoaderForm</a>
 <LI><a href="#[1555f28]">Explain_UpLoaderFormSuc</a>
 <LI><a href="#[1555ee0]">Explain_UpLoaderFormErro</a>
 <LI><a href="#[1555e98]">Explain_UpLoaderCan</a>
 <LI><a href="#[15569d8]">Explain</a>
 <LI><a href="#[1552200]">Explain_GetSeverComPar</a>
 <LI><a href="#[1552200]">Explain_GetSeverComPar</a>
 <LI><a href="#[1552200]">Explain_GetSeverComPar</a>
 <LI><a href="#[1552200]">Explain_GetSeverComPar</a>
 <LI><a href="#[15521b8]">Explain_Answer</a>
 <LI><a href="#[1552200]">Explain_GetSeverComPar</a>
 <LI><a href="#[1552170]">Explain_Menum</a>
 <LI><a href="#[1552128]">Explain_TxtMenum</a>
 <LI><a href="#[15520e0]">Explain_LookPar</a>
 <LI><a href="#[1552098]">Explain_UpdateSoftWare</a>
 <LI><a href="#[1552050]">Explain_Waring</a>
 <LI><a href="#[1552008]">Explain_UploaderJpg1</a>
 <LI><a href="#[1551fc0]">Explain_UploaderJpg2</a>
 <LI><a href="#[1551f78]">Explain_UploaderPar</a>
 <LI><a href="#[1551f30]">Explain_UploaderLog</a>
 <LI><a href="#[1551ee8]">Explain_UpLoaderWarning</a>
 <LI><a href="#[1551ea0]">Explain_OutRoadMap</a>
 <LI><a href="#[1551e58]">Explain_UpLoaderReduce</a>
 <LI><a href="#[1551e10]">Explain_UpLoaderDriver</a>
 <LI><a href="#[1551dc8]">Explain_UpLoaderHandMess</a>
 <LI><a href="#[1551d80]">Explain_NoSem</a>
 <LI><a href="#[1551d38]">Explain_UpLoaderFrom</a>
 <LI><a href="#[1551cf0]">Explain_OverFromErro</a>
 <LI><a href="#[1551ca8]">Explain_PriceData</a>
 <LI><a href="#[1552248]">Explain</a>
 <LI><a href="#[154df38]">Init</a>
 <LI><a href="#[154dea8]">Open</a>
 <LI><a href="#[154de60]">Close</a>
 <LI><a href="#[154de18]">Read</a>
 <LI><a href="#[154dcf8]">Write</a>
 <LI><a href="#[154dcb0]">GetPar2ID</a>
 <LI><a href="#[14ab870]">Init</a>
 <LI><a href="#[14ab798]">ReadID</a>
 <LI><a href="#[14ab6c0]">LookBad</a>
 <LI><a href="#[14ab678]">JugeByte</a>
 <LI><a href="#[14ab630]">JugeBuf</a>
 <LI><a href="#[14ab5e8]">Ease</a>
 <LI><a href="#[14ab5a0]">FMwrPg</a>
 <LI><a href="#[14ab708]">FMrdPg517</a>
 <LI><a href="#[14a9628]">Init</a>
 <LI><a href="#[14a9550]">ReadID</a>
 <LI><a href="#[14a9508]">JugeByte</a>
 <LI><a href="#[14a94c0]">JugeBuf</a>
 <LI><a href="#[14a9280]">Ease</a>
 <LI><a href="#[14a9238]">Write</a>
 <LI><a href="#[14a91f0]">Read</a>
 <LI><a href="#[14a6fa0]">Open</a>
 <LI><a href="#[14a7030]">FormatFlash</a>
 <LI><a href="#[14a7078]">CreatBad</a>
 <LI><a href="#[14a6f58]">JugeFlash</a>
 <LI><a href="#[14a6f10]">WriteFlash</a>
 <LI><a href="#[14a6ec8]">ReadFlash</a>
 <LI><a href="#[14a6e80]">EaseFlash</a>
 <LI><a href="#[14a4e40]">Open</a>
 <LI><a href="#[14a4db0]">Read</a>
 <LI><a href="#[14a4c90]">Write</a>
 <LI><a href="#[14a4c48]">Ease</a>
 <LI><a href="#[149ddc0]">ReadFlow</a>
 <LI><a href="#[149dc10]">WriteFlow</a>
 <LI><a href="#[149dd30]">ReadDataFlow</a>
 <LI><a href="#[149dbc8]">GetFlowWaringType</a>
 <LI><a href="#[149daf0]">GetPhonesSize</a>
 <LI><a href="#[149daa8]">GetPhoneCut</a>
 <LI><a href="#[149da60]">WritePhone</a>
 <LI><a href="#[149da18]">ClearState</a>
 <LI><a href="#[149d9d0]">GetState</a>
 <LI><a href="#[149d988]">SetState</a>
 <LI><a href="#[149db38]">AddSpace</a>
 <LI><a href="#[149db80]">ReadSpace</a>
 <LI><a href="#[149dce8]">ReadParTable</a>
 <LI><a href="#[149d940]">GetAreaData</a>
 <LI><a href="#[149d8b0]">AccessAear</a>
 <LI><a href="#[149d868]">DelAear</a>
 <LI><a href="#[1498c10]">LogInfor</a>
 <LI><a href="#[1498bc8]">Orientation</a>
 <LI><a href="#[1498bc8]">Orientation</a>
 <LI><a href="#[1498bc8]">Orientation</a>
 <LI><a href="#[1498b80]">Menum</a>
 <LI><a href="#[1498b38]">TxtMenum</a>
 <LI><a href="#[1498af0]">LookPar</a>
 <LI><a href="#[1498aa8]">UpdateSoftWare</a>
 <LI><a href="#[1498a60]">Waring</a>
 <LI><a href="#[1498a18]">UploaderJpg1</a>
 <LI><a href="#[1498988]">UploaderJpg2</a>
 <LI><a href="#[1498940]">UploaderPar</a>
 <LI><a href="#[1498868]">UploaderLog</a>
 <LI><a href="#[1498820]">UpLoaderWarning</a>
 <LI><a href="#[14987d8]">OutRoadMap</a>
 <LI><a href="#[1498790]">UpLoaderReduce1</a>
 <LI><a href="#[1498748]">UpLoaderDriver</a>
 <LI><a href="#[1498700]">UpLoaderHandMess</a>
 <LI><a href="#[1499240]">Init</a>
 <LI><a href="#[1498e98]">NoSemSend</a>
 <LI><a href="#[1498ce8]">WriteFlow</a>
 <LI><a href="#[1498ca0]">WriteCommand</a>
 <LI><a href="#[1498c58]">Answer</a>
 <LI><a href="#[1493338]">AgreeData</a>
 <LI><a href="#[14932f0]">Orientation</a>
 <LI><a href="#[14932a8]">Track</a>
 <LI><a href="#[1493260]">SetPar1</a>
 <LI><a href="#[1493218]">UnlockWaring</a>
 <LI><a href="#[14931d0]">AmendMenum</a>
 <LI><a href="#[1493188]">LoaderTxt</a>
 <LI><a href="#[1493140]">LoaderTxtMenum</a>
 <LI><a href="#[14930f8]">SetPhone</a>
 <LI><a href="#[14930b0]">CallAnswer</a>
 <LI><a href="#[1493068]">UpdateSoftWare</a>
 <LI><a href="#[1493020]">LookPar</a>
 <LI><a href="#[1492fd8]">Contrl</a>
 <LI><a href="#[1492f90]">ConfineCall</a>
 <LI><a href="#[1492f48]">ConfigCentrSever</a>
 <LI><a href="#[1492f00]">Activation</a>
 <LI><a href="#[1492eb8]">LookJpg</a>
 <LI><a href="#[1492e70]">JpgIng</a>
 <LI><a href="#[1492e28]">SetVidType</a>
 <LI><a href="#[1492de0]">TabelList</a>
 <LI><a href="#[1492d98]">LookWorkPar</a>
 <LI><a href="#[1492d50]">WorkParTimer</a>
 <LI><a href="#[1492d08]">WorkParSpace</a>
 <LI><a href="#[1492cc0]">LookLog</a>
 <LI><a href="#[1492c78]">SetWaringTerm</a>
 <LI><a href="#[1492c30]">LookWaringTerm</a>
 <LI><a href="#[1492be8]">SetRound</a>
 <LI><a href="#[1492ba0]">DelRound</a>
 <LI><a href="#[1492b58]">SetRectangle</a>
 <LI><a href="#[1492b10]">DelRectangle</a>
 <LI><a href="#[1492ac8]">SetPolygon</a>
 <LI><a href="#[1492a80]">DelPolygon</a>
 <LI><a href="#[1492a38]">SetRoadMap</a>
 <LI><a href="#[14929f0]">DelRoadMap</a>
 <LI><a href="#[14929a8]">Reduce</a>
 <LI><a href="#[1492960]">Driver</a>
 <LI><a href="#[1492918]">Navigation</a>
 <LI><a href="#[14928d0]">HandTxt</a>
 <LI><a href="#[1492888]">HandAttemper</a>
 <LI><a href="#[1492840]">AmendForm</a>
 <LI><a href="#[14927f8]">UpLoaderForm</a>
 <LI><a href="#[14927b0]">UpLoaderFormSuc</a>
 <LI><a href="#[1492768]">UpLoaderFormErro</a>
 <LI><a href="#[1492720]">UpLoaderCan</a>
 <LI><a href="#[148d578]">Init</a>
 <LI><a href="#[14884f8]">AccOper</a>
 <LI><a href="#[14884b0]">OpenGps</a>
 <LI><a href="#[14884b0]">OpenGps</a>
 <LI><a href="#[14884b0]">OpenGps</a>
 <LI><a href="#[14884b0]">OpenGps</a>
 <LI><a href="#[14884b0]">OpenGps</a>
 <LI><a href="#[14884b0]">OpenGps</a>
 <LI><a href="#[14884b0]">OpenGps</a>
 <LI><a href="#[14884b0]">OpenGps</a>
 <LI><a href="#[14884b0]">OpenGps</a>
 <LI><a href="#[14884b0]">OpenGps</a>
 <LI><a href="#[14884b0]">OpenGps</a>
 <LI><a href="#[14884b0]">OpenGps</a>
 <LI><a href="#[14884b0]">OpenGps</a>
 <LI><a href="#[1488468]">OpenGprs</a>
 <LI><a href="#[1488468]">OpenGprs</a>
 <LI><a href="#[1488468]">OpenGprs</a>
 <LI><a href="#[1488468]">OpenGprs</a>
 <LI><a href="#[1488468]">OpenGprs</a>
 <LI><a href="#[1488468]">OpenGprs</a>
 <LI><a href="#[1488468]">OpenGprs</a>
 <LI><a href="#[1488468]">OpenGprs</a>
 <LI><a href="#[1488468]">OpenGprs</a>
 <LI><a href="#[1488468]">OpenGprs</a>
 <LI><a href="#[1488468]">OpenGprs</a>
 <LI><a href="#[1488468]">OpenGprs</a>
 <LI><a href="#[1488468]">OpenGprs</a>
 <LI><a href="#[1488420]">CloseGps</a>
 <LI><a href="#[14883d8]">CloseGprs</a>
 <LI><a href="#[1482ad8]">Init</a>
 <LI><a href="#[1482898]">GetData</a>
 <LI><a href="#[17caff8]">InitSpace</a>
 <LI><a href="#[17caf20]">GetGps</a>
 <LI><a href="#[17caed8]">Space_Track</a>
 <LI><a href="#[17cae90]">Space_WorkParSpace</a>
 <LI><a href="#[17c73b8]">Juge</a>
 <LI><a href="#[17c3560]">Init</a>
 <LI><a href="#[17beba8]">Order_Phone</a>
 <LI><a href="#[17beb18]">SeePar</a>
 <LI><a href="#[17bead0]">SetPar</a>
 <LI><a href="#[17bea88]">Log</a>
 <LI><a href="#[17bea40]">Voic</a>
 <LI><a href="#[17be9f8]">LCDRef</a>
 <LI><a href="#[17bec80]">Init</a>
 <LI><a href="#[17bec38]">GetData</a>
 <LI><a href="#[1819d50]">Init</a>
 <LI><a href="#[1819b10]">ptFunNewPhone</a>
 <LI><a href="#[1819cc0]">ptFunHupWork</a>
 <LI><a href="#[1819c78]">NewMessage</a>
 <LI><a href="#[1819ac8]">CloseCall</a>
 <LI><a href="#[1814a30]">Init</a>
 <LI><a href="#[180d248]">ClearTimer</a>
 <LI><a href="#[180d1b8]">ChargeLogin</a>
 <LI><a href="#[180d170]">ChargeLoadDev</a>
 <LI><a href="#[180d488]">Init</a>
 <LI><a href="#[180d440]">OpenGps</a>
 <LI><a href="#[180d3f8]">CloseGps</a>
 <LI><a href="#[180d2d8]">OpenGprs</a>
 <LI><a href="#[180d290]">CloseGprs</a>
 <LI><a href="#[180d368]">OpenGprsNo</a>
 <LI><a href="#[180d200]">OpenUart</a>
 <LI><a href="#[1051240]">Init</a>
 <LI><a href="#[1051120]">Open</a>
 <LI><a href="#[1051048]">Close</a>
 <LI><a href="#[1050e98]">Write</a>
 <LI><a href="#[1050f70]">Read</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[c80cd0]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Stack]<UL><LI>Max Depth = 4 + Unknown Stack Size
<LI>Call Chain = Reset_Handler &rArr; TargetResetInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c82200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetResetInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[18719f0]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __main &rArr; __rt_entry &rArr; __rt_lib_init &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[186e7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[1976240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1976240]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[18719f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[19761f8]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186e7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[19761b0]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[19764c8]"></a>__decompress</STRONG> (ARM, 92 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[1976480]"></a>__decompress1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[1975f70]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[197c6f8]"></a>__ARM_argv_veneer</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_init.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[c822d8]"></a>ConfigurePLL</STRONG> (ARM, 304 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c82200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetResetInit
</UL>

<P><STRONG><a name="[c82290]"></a>GPIOResetInit</STRONG> (ARM, 120 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c82200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetResetInit
</UL>

<P><STRONG><a name="[c82248]"></a>init_VIC</STRONG> (ARM, 88 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c82200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetResetInit
</UL>

<P><STRONG><a name="[c82200]"></a>TargetResetInit</STRONG> (ARM, 92 bytes, Stack size 4 bytes, target.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TargetResetInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c82248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_VIC
<LI><a href="#[c82290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOResetInit
<LI><a href="#[c822d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigurePLL
</UL>
<BR>[Called By]<UL><LI><a href="#[c80cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[c821b8]"></a>Install_IRQ</STRONG> (ARM, 92 bytes, Stack size 8 bytes, target.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Install_IRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[c82008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIC_Setup
</UL>

<P><STRONG><a name="[c82170]"></a>init_port</STRONG> (ARM, 72 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c81fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetInit
</UL>

<P><STRONG><a name="[c82128]"></a>IRQ_Exception</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c81700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>

<P><STRONG><a name="[c820e0]"></a>FIQ_Exception</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c80e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[c82098]"></a>Timer0_Exception</STRONG> (ARM, 36 bytes, Stack size 8 bytes, target.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Timer0_Exception &rArr; OSTimeTick
</UL>
<BR>[Calls]<UL><LI><a href="#[c81ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c81e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Handler
</UL>

<P><STRONG><a name="[c82050]"></a>Timer0Init</STRONG> (ARM, 48 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c81fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetInit
</UL>

<P><STRONG><a name="[c82008]"></a>VIC_Setup</STRONG> (ARM, 156 bytes, Stack size 4 bytes, target.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = VIC_Setup &rArr; Install_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[c821b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Install_IRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[c81fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetInit
</UL>

<P><STRONG><a name="[c81fc0]"></a>TargetInit</STRONG> (ARM, 44 bytes, Stack size 8 bytes, target.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TargetInit &rArr; VIC_Setup &rArr; Install_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[c82008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIC_Setup
<LI><a href="#[c82050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
<LI><a href="#[c82170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_port
<LI><a href="#[c82bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitWTD
<LI><a href="#[1873848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[18753a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c81f78]"></a>WatchDog</STRONG> (ARM, 72 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7f1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
<LI><a href="#[1047d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1050ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write0
<LI><a href="#[124f540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom1
<LI><a href="#[12e08b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
<LI><a href="#[12e08f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Agree
<LI><a href="#[12ec4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreeData
<LI><a href="#[12ef450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeOrder
<LI><a href="#[1454348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[14576a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[154dd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
<LI><a href="#[154dd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSig
<LI><a href="#[1814be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevPar
<LI><a href="#[1814c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevParSigle
</UL>

<P><STRONG><a name="[c80d18]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[186e1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c7f4e0]"></a>OSTaskStkInit</STRONG> (ARM, 232 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskStkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[c77628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c7d370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[c7f498]"></a>SWI_Exception</STRONG> (ARM, 336 bytes, Stack size 4 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SWI_Exception
</UL>
<BR>[Called By]<UL><LI><a href="#[c80c88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt
</UL>

<P><STRONG><a name="[c7f450]"></a>OSStartHighRdy</STRONG> (ARM, 16 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSStartHighRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[c7d5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
</UL>

<P><STRONG><a name="[c7f408]"></a>OSInitHookBegin</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7f3c0]"></a>OSInitHookEnd</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7f378]"></a>OSTaskCreateHook</STRONG> (ARM, 8 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[c7f330]"></a>OSTaskDelHook</STRONG> (ARM, 8 bytes, Stack size 0 bytes, os_cpu_c.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c775e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[c7f2e8]"></a>OSTaskSwHook</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7ee18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__OSStartHighRdy
<LI><a href="#[c81628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntCtxSw
</UL>

<P><STRONG><a name="[c7f2a0]"></a>OSTaskStatHook</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_cpu_c.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c7d7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[c7f258]"></a>OSTCBInitHook</STRONG> (ARM, 8 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[c7f210]"></a>OSTimeTickHook</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c81ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>

<P><STRONG><a name="[c7f1c8]"></a>OSTaskIdleHook</STRONG> (ARM, 16 bytes, Stack size 8 bytes, os_cpu_c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[c7d7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
</UL>

<P><STRONG><a name="[c7d7f0]"></a>OS_TaskStat</STRONG> (ARM, 220 bytes, Stack size 24 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c7f2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStatHook
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[c7d7a8]"></a>OS_TaskIdle</STRONG> (ARM, 48 bytes, Stack size 8 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7f1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
</UL>

<P><STRONG><a name="[c7d760]"></a>OSInit</STRONG> (ARM, 56 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = OSInit &rArr; OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_QInit
<LI><a href="#[c7d298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemInit
<LI><a href="#[c7d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
<LI><a href="#[c7e378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitMisc
<LI><a href="#[c7e3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitRdyList
<LI><a href="#[c7e408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTCBList
<LI><a href="#[c7e450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitEventList
<LI><a href="#[c7e498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[c7e4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[c7f3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookEnd
<LI><a href="#[c7f408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookBegin
</UL>
<BR>[Called By]<UL><LI><a href="#[18753a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c7d718]"></a>OSIntEnter</STRONG> (ARM, 56 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)

<P><STRONG><a name="[c815e0]"></a>OSIntExit</STRONG> (ARM, 240 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSIntExit
</UL>
<BR>[Called By]<UL><LI><a href="#[c81700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
<LI><a href="#[c81ca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3_Handler
<LI><a href="#[c81cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Handler
<LI><a href="#[c81d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Handler
<LI><a href="#[c81d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_Handler
<LI><a href="#[c81dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Handler
<LI><a href="#[c81e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Handler
<LI><a href="#[c81e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Handler
<LI><a href="#[c81ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_Handler
<LI><a href="#[c81f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Handler
</UL>

<P><STRONG><a name="[c7d6d0]"></a>OSSchedLock</STRONG> (ARM, 72 bytes, Stack size 8 bytes, os_core.o(.text), UNUSED)

<P><STRONG><a name="[c7d688]"></a>OS_Sched</STRONG> (ARM, 168 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[c76850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyResume
<LI><a href="#[c774c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[c77550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[c775e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[c77628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c77670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskChangePrio
<LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c78300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[c78f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[c78f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[c78fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[c78ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[c79088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[c7b6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPostOpt
<LI><a href="#[c7b6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[c7b778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
<LI><a href="#[c7c3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[c7c430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[c7c478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
<LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c7d370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[c7d640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
</UL>

<P><STRONG><a name="[c7d640]"></a>OSSchedUnlock</STRONG> (ARM, 124 bytes, Stack size 8 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c7d5f8]"></a>OSStart</STRONG> (ARM, 132 bytes, Stack size 16 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OSStart &rArr; OSStartHighRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c7f450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[18753a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c7d5b0]"></a>OSStatInit</STRONG> (ARM, 84 bytes, Stack size 8 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>

<P><STRONG><a name="[c81ea0]"></a>OSTimeTick</STRONG> (ARM, 212 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTimeTick
</UL>
<BR>[Calls]<UL><LI><a href="#[c7f210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
</UL>
<BR>[Called By]<UL><LI><a href="#[c82098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Exception
</UL>

<P><STRONG><a name="[c7d568]"></a>OSVersion</STRONG> (ARM, 8 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)

<P><STRONG><a name="[c7d520]"></a>OS_Dummy</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c775e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[c7d4d8]"></a>OS_EventTaskRdy</STRONG> (ARM, 188 bytes, Stack size 24 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c78300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[c78f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[c78f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[c78fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[c79088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[c7b6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPostOpt
<LI><a href="#[c7b6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[c7b778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
</UL>

<P><STRONG><a name="[c7d490]"></a>OS_EventTaskWait</STRONG> (ARM, 188 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c78ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>

<P><STRONG><a name="[c7d448]"></a>OS_EventTO</STRONG> (ARM, 116 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c78ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>

<P><STRONG><a name="[c7d400]"></a>OS_EventWaitListInit</STRONG> (ARM, 28 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[c790d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[c7b7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>

<P><STRONG><a name="[c7d3b8]"></a>OS_TCBInit</STRONG> (ARM, 336 bytes, Stack size 40 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c7f258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTCBInitHook
<LI><a href="#[c7f378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
</UL>
<BR>[Called By]<UL><LI><a href="#[c77628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c7d370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[c7c550]"></a>OSFlagAccept</STRONG> (ARM, 440 bytes, Stack size 32 bytes, os_flag.o(.text), UNUSED)

<P><STRONG><a name="[c7c508]"></a>OSFlagCreate</STRONG> (ARM, 144 bytes, Stack size 16 bytes, os_flag.o(.text), UNUSED)

<P><STRONG><a name="[c7c4c0]"></a>OS_FlagUnlink</STRONG> (ARM, 84 bytes, Stack size 4 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c775e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[c7c430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[c7c988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
</UL>

<P><STRONG><a name="[c7c478]"></a>OSFlagDel</STRONG> (ARM, 344 bytes, Stack size 24 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7c988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c7c430]"></a>OSFlagPend</STRONG> (ARM, 816 bytes, Stack size 64 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7c4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
<LI><a href="#[c7c940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagBlock
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c7c3e8]"></a>OSFlagPost</STRONG> (ARM, 496 bytes, Stack size 40 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7c988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c7c3a0]"></a>OSFlagQuery</STRONG> (ARM, 96 bytes, Stack size 16 bytes, os_flag.o(.text), UNUSED)

<P><STRONG><a name="[c7d2e0]"></a>OS_FlagInit</STRONG> (ARM, 76 bytes, Stack size 0 bytes, os_flag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7b808]"></a>OSMboxAccept</STRONG> (ARM, 76 bytes, Stack size 16 bytes, os_mbox.o(.text), UNUSED)

<P><STRONG><a name="[c7b7c0]"></a>OSMboxCreate</STRONG> (ARM, 128 bytes, Stack size 16 bytes, os_mbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSMboxCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[104ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1051240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[149da60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePhone
<LI><a href="#[180d488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1814a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[c7b778]"></a>OSMboxDel</STRONG> (ARM, 344 bytes, Stack size 24 bytes, os_mbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OSMboxDel &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[149da60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePhone
</UL>

<P><STRONG><a name="[c7b730]"></a>OSMboxPend</STRONG> (ARM, 316 bytes, Stack size 24 bytes, os_mbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OSMboxPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTO
<LI><a href="#[c7d490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[149da60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePhone
<LI><a href="#[180d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenGprs
<LI><a href="#[180d320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[1814a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[c7b6e8]"></a>OSMboxPost</STRONG> (ARM, 156 bytes, Stack size 16 bytes, os_mbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[1454348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[180d290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGprs
<LI><a href="#[180d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenGprs
<LI><a href="#[1814a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[c7b6a0]"></a>OSMboxPostOpt</STRONG> (ARM, 204 bytes, Stack size 16 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c7b658]"></a>OSMboxQuery</STRONG> (ARM, 116 bytes, Stack size 24 bytes, os_mbox.o(.text), UNUSED)

<P><STRONG><a name="[c7aba8]"></a>OSMemCreate</STRONG> (ARM, 252 bytes, Stack size 40 bytes, os_mem.o(.text), UNUSED)

<P><STRONG><a name="[c7ab60]"></a>OSMemGet</STRONG> (ARM, 120 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)

<P><STRONG><a name="[c7ab18]"></a>OSMemPut</STRONG> (ARM, 116 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)

<P><STRONG><a name="[c7aad0]"></a>OSMemQuery</STRONG> (ARM, 120 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)

<P><STRONG><a name="[c7d298]"></a>OS_MemInit</STRONG> (ARM, 112 bytes, Stack size 0 bytes, os_mem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c79118]"></a>OSQAccept</STRONG> (ARM, 140 bytes, Stack size 16 bytes, os_q.o(.text), UNUSED)

<P><STRONG><a name="[c790d0]"></a>OSQCreate</STRONG> (ARM, 240 bytes, Stack size 24 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OSQCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1454300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[c79088]"></a>OSQDel</STRONG> (ARM, 392 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c79040]"></a>OSQFlush</STRONG> (ARM, 92 bytes, Stack size 16 bytes, os_q.o(.text), UNUSED)

<P><STRONG><a name="[c78ff8]"></a>OSQPend</STRONG> (ARM, 364 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTO
<LI><a href="#[c7d490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[1454348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[c78fb0]"></a>OSQPost</STRONG> (ARM, 216 bytes, Stack size 16 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OSQPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[149da60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePhone
</UL>

<P><STRONG><a name="[c78f68]"></a>OSQPostFront</STRONG> (ARM, 220 bytes, Stack size 16 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c78f20]"></a>OSQPostOpt</STRONG> (ARM, 320 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c78ed8]"></a>OSQQuery</STRONG> (ARM, 164 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)

<P><STRONG><a name="[c7d250]"></a>OS_QInit</STRONG> (ARM, 68 bytes, Stack size 0 bytes, os_q.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c78390]"></a>OSSemAccept</STRONG> (ARM, 88 bytes, Stack size 16 bytes, os_sem.o(.text), UNUSED)

<P><STRONG><a name="[c78348]"></a>OSSemCreate</STRONG> (ARM, 128 bytes, Stack size 16 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[10458a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1047e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[104ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[104cbd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[104ec20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1051240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12469c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1249298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[124c3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12b0700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12b3b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init1
<LI><a href="#[12b63b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12b8b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12bb108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12bdbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12e09d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12e3428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12e63d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12e9350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12ec5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[12ef840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1451048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1457658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[145bbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1499240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[154df38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[c78300]"></a>OSSemDel</STRONG> (ARM, 344 bytes, Stack size 24 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c782b8]"></a>OSSemPend</STRONG> (ARM, 272 bytes, Stack size 16 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTO
<LI><a href="#[c7d490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[1045548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1045590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1045860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1047d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1047d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1047de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[104ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open0
<LI><a href="#[104abb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[104abf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open2
<LI><a href="#[104ac40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open3
<LI><a href="#[104ac88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open4
<LI><a href="#[104acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[104cb40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start
<LI><a href="#[104eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
<LI><a href="#[104eb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1051168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open0
<LI><a href="#[10511b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[10511f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[12468a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1246930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1246978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1249178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1249208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1249250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[124be00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState1
<LI><a href="#[124be90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
<LI><a href="#[124c040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[124c0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[12b0670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12b06b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12b0748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[12b30e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPor
<LI><a href="#[12b3130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadHeadTail
<LI><a href="#[12b3178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekSize1
<LI><a href="#[12b3208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek1
<LI><a href="#[12b3298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJlNum1
<LI><a href="#[12b32e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder2
<LI><a href="#[12b3400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder2
<LI><a href="#[12b34d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBin1
<LI><a href="#[12b3568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBin1
<LI><a href="#[12b35f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[12b3688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[12b3880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder1
<LI><a href="#[12b3910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin1
<LI><a href="#[12b62d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12b6320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12b6368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12b8a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12b8ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12b8af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12bafe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12bb078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12bb0c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12bda40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12bdb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12bdba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12e0868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12e0940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12e0988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12e3350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12e3398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12e33e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12e6268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12e6340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12e6388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12e9230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12e92c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12e9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12ec3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12ec3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
<LI><a href="#[12ec5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12ef378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState
<LI><a href="#[12ef3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12ef7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12ef7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1450f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get
<LI><a href="#[1450fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1451000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1451090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[1451168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeEvent
<LI><a href="#[14573d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditPro
<LI><a href="#[1457418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPro
<LI><a href="#[1457460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEnable
<LI><a href="#[14574a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisEnable
<LI><a href="#[14574f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable
<LI><a href="#[1457538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1457580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[14575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1457730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeEvent
<LI><a href="#[145af48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVolume1
<LI><a href="#[145afd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPhone1
<LI><a href="#[145b068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendIP1
<LI><a href="#[145b0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage1
<LI><a href="#[145b140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseCall1
<LI><a href="#[145b1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreePhone1
<LI><a href="#[145b260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPhone1
<LI><a href="#[145b2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadIP1
<LI><a href="#[145b380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMessage1
<LI><a href="#[145b410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSRIP1
<LI><a href="#[145b4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIpPro1
<LI><a href="#[145b530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIPState1
<LI><a href="#[145b5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneState1
<LI><a href="#[145b650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageState1
<LI><a href="#[145b6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysState1
<LI><a href="#[145b770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClosePhone1
<LI><a href="#[145b7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMessage1
<LI><a href="#[145b800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseIP1
<LI><a href="#[145b848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys1
<LI><a href="#[145b890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenPhone1
<LI><a href="#[145b920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenIP1
<LI><a href="#[145b9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessage1
<LI><a href="#[145ba40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSys1
<LI><a href="#[145bad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGprs1
<LI><a href="#[145bb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhone1
<LI><a href="#[145bb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMessage1
<LI><a href="#[145bba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSys1
<LI><a href="#[145bc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[145bcc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperIPData
<LI><a href="#[145c100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperMessage
<LI><a href="#[145c148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperPhone
<LI><a href="#[1498c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Answer
<LI><a href="#[1498ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[1498ce8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
<LI><a href="#[1498e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend
<LI><a href="#[154dcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPar2ID
<LI><a href="#[154dcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
<LI><a href="#[154de18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[154de60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[154dea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[154df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[c78270]"></a>OSSemPost</STRONG> (ARM, 152 bytes, Stack size 8 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[c812c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Exception
<LI><a href="#[c81310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Exception
<LI><a href="#[c81358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Exception
<LI><a href="#[c813a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Exception
<LI><a href="#[c816b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Exception
<LI><a href="#[1045548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1045590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1045860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1047d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1047d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1047de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[104a9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close0
<LI><a href="#[104aa00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[104aa48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close2
<LI><a href="#[104aa90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close3
<LI><a href="#[104c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;End
<LI><a href="#[104eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
<LI><a href="#[104eb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1051090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close0
<LI><a href="#[10510d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[12468a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1246930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1246978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1249178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1249208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1249250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[124be00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState1
<LI><a href="#[124be90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
<LI><a href="#[124c040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[124c0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[12b0670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12b06b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12b0748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[12b30e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPor
<LI><a href="#[12b3130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadHeadTail
<LI><a href="#[12b3178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekSize1
<LI><a href="#[12b3208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek1
<LI><a href="#[12b3298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJlNum1
<LI><a href="#[12b32e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder2
<LI><a href="#[12b3400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder2
<LI><a href="#[12b34d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBin1
<LI><a href="#[12b3568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBin1
<LI><a href="#[12b35f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[12b3688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[12b3880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder1
<LI><a href="#[12b3910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin1
<LI><a href="#[12b62d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12b6320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12b6368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12b8a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12b8ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12b8af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12bafe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12bb078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12bb0c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12bda40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12bdb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12bdba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12e0868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12e0940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12e0988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12e3350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12e3398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12e33e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12e6268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12e6340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12e6388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12e91e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState
<LI><a href="#[12e9230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12e92c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12e9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12ec3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12ec3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
<LI><a href="#[12ec5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12ef378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState
<LI><a href="#[12ef3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12ef7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[12ef7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1450f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get
<LI><a href="#[1450fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[1451000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1451090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[1451168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeEvent
<LI><a href="#[14573d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditPro
<LI><a href="#[1457418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPro
<LI><a href="#[1457460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEnable
<LI><a href="#[14574a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisEnable
<LI><a href="#[14574f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable
<LI><a href="#[1457538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1457580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[14575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[1457730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeEvent
<LI><a href="#[145af48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVolume1
<LI><a href="#[145afd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPhone1
<LI><a href="#[145b068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendIP1
<LI><a href="#[145b0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage1
<LI><a href="#[145b140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseCall1
<LI><a href="#[145b1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreePhone1
<LI><a href="#[145b260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPhone1
<LI><a href="#[145b2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadIP1
<LI><a href="#[145b380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMessage1
<LI><a href="#[145b410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSRIP1
<LI><a href="#[145b4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIpPro1
<LI><a href="#[145b530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIPState1
<LI><a href="#[145b5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneState1
<LI><a href="#[145b650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageState1
<LI><a href="#[145b6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysState1
<LI><a href="#[145b770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClosePhone1
<LI><a href="#[145b7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMessage1
<LI><a href="#[145b800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseIP1
<LI><a href="#[145b848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys1
<LI><a href="#[145b890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenPhone1
<LI><a href="#[145b920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenIP1
<LI><a href="#[145b9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessage1
<LI><a href="#[145ba40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSys1
<LI><a href="#[145bad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGprs1
<LI><a href="#[145bb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhone1
<LI><a href="#[145bb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMessage1
<LI><a href="#[145bba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSys1
<LI><a href="#[145bc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[145bcc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperIPData
<LI><a href="#[145c100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperMessage
<LI><a href="#[145c148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperPhone
<LI><a href="#[1498c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Answer
<LI><a href="#[1498ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[1498ce8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
<LI><a href="#[1498e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend
<LI><a href="#[154dcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPar2ID
<LI><a href="#[154dcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
<LI><a href="#[154de18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[154de60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[154dea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[154df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[c78228]"></a>OSSemQuery</STRONG> (ARM, 116 bytes, Stack size 24 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OSSemQuery
</UL>
<BR>[Called By]<UL><LI><a href="#[104acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[10511f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[180d320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>

<P><STRONG><a name="[c77670]"></a>OSTaskChangePrio</STRONG> (ARM, 460 bytes, Stack size 40 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c77628]"></a>OSTaskCreate</STRONG> (ARM, 236 bytes, Stack size 40 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[c7f4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12b0700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1451048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1454300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1457658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[145bbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[154df38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[17c3560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[1814a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[18753a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c7d370]"></a>OSTaskCreateExt</STRONG> (ARM, 288 bytes, Stack size 56 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[c7f4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[18730f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c7e498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[c7e4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
</UL>

<P><STRONG><a name="[c775e0]"></a>OSTaskDel</STRONG> (ARM, 508 bytes, Stack size 24 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7c4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
<LI><a href="#[c7d520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Dummy
<LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[c7f330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelHook
</UL>

<P><STRONG><a name="[c77598]"></a>OSTaskDelReq</STRONG> (ARM, 140 bytes, Stack size 24 bytes, os_task.o(.text), UNUSED)

<P><STRONG><a name="[c77550]"></a>OSTaskResume</STRONG> (ARM, 192 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c77508]"></a>OSTaskStkChk</STRONG> (ARM, 192 bytes, Stack size 32 bytes, os_task.o(.text), UNUSED)

<P><STRONG><a name="[c774c0]"></a>OSTaskSuspend</STRONG> (ARM, 240 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c77478]"></a>OSTaskQuery</STRONG> (ARM, 120 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18733b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[c7d328]"></a>OSTimeDly</STRONG> (ARM, 140 bytes, Stack size 8 bytes, os_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[c76898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[c7d5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatInit
<LI><a href="#[c7d7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[124c1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configuration
<LI><a href="#[124c2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreeData
<LI><a href="#[124f300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp
<LI><a href="#[124f4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom
<LI><a href="#[12b0748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[12ec438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[1451090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[1454348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[14543d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhotoCommon
<LI><a href="#[1454420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPhoto
<LI><a href="#[14576a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[145bc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[154df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[17c35a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[1814a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
<LI><a href="#[1814c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevParSigle
<LI><a href="#[1877760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[c76898]"></a>OSTimeDlyHMSM</STRONG> (ARM, 232 bytes, Stack size 32 bytes, os_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[c76850]"></a>OSTimeDlyResume</STRONG> (ARM, 184 bytes, Stack size 16 bytes, os_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[c76808]"></a>OSTimeGet</STRONG> (ARM, 32 bytes, Stack size 8 bytes, os_time.o(.text), UNUSED)

<P><STRONG><a name="[c767c0]"></a>OSTimeSet</STRONG> (ARM, 32 bytes, Stack size 8 bytes, os_time.o(.text), UNUSED)

<P><STRONG><a name="[c816b8]"></a>CAN_Exception</STRONG> (ARM, 404 bytes, Stack size 8 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CAN_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[c81f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Handler
</UL>

<P><STRONG><a name="[c81670]"></a>Eint_Exception</STRONG> (ARM, 148 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c81ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_Handler
</UL>

<P><STRONG><a name="[c81430]"></a>Timer1_Exception</STRONG> (ARM, 308 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c81e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Handler
</UL>

<P><STRONG><a name="[c813e8]"></a>Timer2_Exception</STRONG> (ARM, 256 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c81dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Handler
</UL>

<P><STRONG><a name="[c813a0]"></a>UART0_Exception</STRONG> (ARM, 244 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART0_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[c81d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_Handler
</UL>

<P><STRONG><a name="[c81358]"></a>UART1_Exception</STRONG> (ARM, 244 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART1_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[c81d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Handler
</UL>

<P><STRONG><a name="[c81310]"></a>UART2_Exception</STRONG> (ARM, 280 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART2_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[c81cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Handler
</UL>

<P><STRONG><a name="[c812c8]"></a>UART3_Exception</STRONG> (ARM, 244 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART3_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[c81ca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3_Handler
</UL>

<P><STRONG><a name="[14a00b0]"></a>FileData_BackSet</STRONG> (ARM, 116 bytes, Stack size 16 bytes, _filedata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14a19b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackFacFile
</UL>

<P><STRONG><a name="[14a0068]"></a>FileData_CheckFile</STRONG> (ARM, 504 bytes, Stack size 24 bytes, _filedata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14a19b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackFacFile
</UL>
<BR>[Called By]<UL><LI><a href="#[1877760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[18753a8]"></a>main</STRONG> (ARM, 48 bytes, Stack size 8 bytes, _init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = main &rArr; OSInit &rArr; OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c7d5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[c7d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
<LI><a href="#[c81fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kernel.o(.text)
</UL>
<P><STRONG><a name="[1873848]"></a>srand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[c81fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetInit (via Veneer)
<LI><a href="#[1873800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[1873800]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[1873848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[18737b8]"></a>rand</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[1873560]"></a>__aeabi_memset</STRONG> (ARM, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[186d5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[12b33b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWriteHeadTail
<LI><a href="#[14930f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhone
<LI><a href="#[14931d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AmendMenum
<LI><a href="#[14989d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploaderJpg2Sig
<LI><a href="#[1552680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Par
<LI><a href="#[15563a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_SetWaringTerm
<LI><a href="#[1556510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_SetVidType
</UL>

<P><STRONG><a name="[18733b0]"></a>__aeabi_memcpy4</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[c77478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQuery
<LI><a href="#[180d200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenUart
<LI><a href="#[1819d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[1873368]"></a>__aeabi_memcpy8</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[1873320]"></a>__rt_memcpy_w</STRONG> (ARM, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[18732d8]"></a>_memcpy_lastbytes_aligned</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[18730f0]"></a>__aeabi_memclr4</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c7d370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[12b38c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
<LI><a href="#[12b3958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
</UL>

<P><STRONG><a name="[18730a8]"></a>__aeabi_memclr8</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1873060]"></a>__rt_memclr_w</STRONG> (ARM, 84 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1873018]"></a>_memset_w</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[186d618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[1872e40]"></a>strlen</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[12b36d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open (via Veneer)
<LI><a href="#[12b3760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookFileNameAgain (via Veneer)
<LI><a href="#[12b38c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder (via Veneer)
<LI><a href="#[12b3958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin (via Veneer)
<LI><a href="#[12ef450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeOrder (via Veneer)
</UL>

<P><STRONG><a name="[1872c88]"></a>memchr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, memchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1056090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2Float (via Veneer)
<LI><a href="#[12ef450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeOrder (via Veneer)
</UL>

<P><STRONG><a name="[1872a00]"></a>__aeabi_idiv</STRONG> (ARM, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[18729b8]"></a>__aeabi_idivmod</STRONG> (ARM, 384 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1052ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWeek
<LI><a href="#[10531f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10561b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[12b3328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder1
<LI><a href="#[12b3370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateHeadTailPoint
<LI><a href="#[12b3448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder1
<LI><a href="#[12b38c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
<LI><a href="#[149dca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeReduceLen
<LI><a href="#[14a6fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[14a7030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatFlash
<LI><a href="#[1552320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2ReduceGps_Height
<LI><a href="#[15525a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar2
<LI><a href="#[15525f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar1
<LI><a href="#[1552638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar
<LI><a href="#[1552680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Par
</UL>

<P><STRONG><a name="[1871cc0]"></a>__use_two_region_memory</STRONG> (ARM, 4 bytes, Stack size 0 bytes, stkheap2.o(.text), UNUSED)

<P><STRONG><a name="[1871c78]"></a>__rt_stackheap_init</STRONG> (ARM, 36 bytes, Stack size 16 bytes, stkheap2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_stackheap_init &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[186da30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_storage
<LI><a href="#[186e1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[186e7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1871c30]"></a>__rt_heap_extend</STRONG> (ARM, 24 bytes, Stack size 8 bytes, stkheap2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1871b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_heap_extend (Weak Reference)
</UL>

<P><STRONG><a name="[186e7e8]"></a>__rt_entry</STRONG> (ARM, 76 bytes, Stack size 16 bytes, kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_entry &rArr; __rt_lib_init &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[1871c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
<LI><a href="#[197bae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_lib_init
<LI><a href="#[197bc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_stackheap_init
<LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
<LI><a href="#[197cae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>
<BR>[Called By]<UL><LI><a href="#[18719f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[19761f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[186e7a0]"></a>__rt_exit</STRONG> (ARM, 20 bytes, Stack size 8 bytes, kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rt_exit &rArr; __rt_lib_shutdown
</UL>
<BR>[Calls]<UL><LI><a href="#[197c620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[197cae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[186e758]"></a>__rt_abort</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kernel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[197d540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[186e1c0]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[c80d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[197d268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[1871c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL>

<P><STRONG><a name="[186da30]"></a>__rt_stackheap_storage</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_stackheap_storage_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1871c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL>

<P><STRONG><a name="[186d878]"></a>__read_errno</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[197cca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via Veneer)
</UL>

<P><STRONG><a name="[186d830]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[197cca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[186eb80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt (via Veneer)
<LI><a href="#[186ee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin (via Veneer)
<LI><a href="#[186f2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos (via Veneer)
</UL>

<P><STRONG><a name="[186d660]"></a>__aeabi_memclr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[186d618]"></a>__rt_memclr</STRONG> (ARM, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1873018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[186d5d0]"></a>_memset</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1873560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[197d540]"></a>_sys_exit</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sys_exit.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[186e758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_abort
</UL>

<P><STRONG><a name="[197d2b0]"></a>__user_libspace</STRONG> (ARM, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[197d268]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[186e1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[197d220]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[197cca0]"></a>__aeabi_errno_addr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[186d830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[186d878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno (via Veneer)
</UL>

<P><STRONG><a name="[197cc58]"></a>__rt_errno_addr_intlibspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[197cae8]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = exit &rArr; __rt_exit &rArr; __rt_lib_shutdown
</UL>
<BR>[Calls]<UL><LI><a href="#[186e7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
<LI><a href="#[197ca58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[186e7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[197c668]"></a>__rt_lib_init</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, lib_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __rt_lib_init &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[1873800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
<LI><a href="#[1979c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init (via Veneer)
<LI><a href="#[197a798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via Veneer)
<LI><a href="#[197c038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_signal_init (Weak Reference)
<LI><a href="#[197c0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio (Weak Reference)
<LI><a href="#[197c110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_user_alloc (Weak Reference)
<LI><a href="#[197c158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc (Weak Reference)
<LI><a href="#[197c1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getenv_init (Weak Reference)
<LI><a href="#[197c1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_time (Weak Reference)
<LI><a href="#[197c230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric (Weak Reference)
<LI><a href="#[197c278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_monetary (Weak Reference)
<LI><a href="#[197c2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype (Weak Reference)
<LI><a href="#[197c308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_collate (Weak Reference)
<LI><a href="#[197c350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_trap_init (Weak Reference)
<LI><a href="#[197c398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_clock_init (Weak Reference)
<LI><a href="#[197c3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atexit_init (Weak Reference)
<LI><a href="#[197c470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_ (Weak Reference)
<LI><a href="#[197c4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__alloca_initialize (Weak Reference)
<LI><a href="#[197c500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_DescSize (Weak Reference)
<LI><a href="#[197c548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_init (Weak Reference)
<LI><a href="#[197c6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_argv_veneer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[186e7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry (via Veneer)
</UL>

<P><STRONG><a name="[197c620]"></a>__rt_lib_shutdown</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lib_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_lib_shutdown
</UL>
<BR>[Calls]<UL><LI><a href="#[197bfa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio (Weak Reference)
<LI><a href="#[197bff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminate_user_alloc (Weak Reference)
<LI><a href="#[197c428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[186e7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
</UL>

<P><STRONG><a name="[197bc50]"></a>_platform_post_stackheap_init</STRONG> (ARM, 12 bytes, Stack size 0 bytes, boardinit2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[186e7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[197bae0]"></a>_platform_post_lib_init</STRONG> (ARM, 16 bytes, Stack size 8 bytes, boardinit3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _platform_post_lib_init
</UL>
<BR>[Called By]<UL><LI><a href="#[186e7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[197ab50]"></a>__I_use_semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[197ab08]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[197a798]"></a>__rt_locale</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[1979de8]"></a>__ARM_get_argv</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, no_argv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __ARM_get_argv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lib_init.o(.emb_text)
</UL>
<P><STRONG><a name="[1979530]"></a>__rt_fp_status_addr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1979c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[1872970]"></a>__aeabi_uidiv</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv), UNUSED)

<P><STRONG><a name="[1872928]"></a>__aeabi_uidivmod</STRONG> (ARM, 28 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv))
<BR><BR>[Calls]<UL><LI><a href="#[1872a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div_large
<LI><a href="#[1872a90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div4
<LI><a href="#[1872ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div8
</UL>
<BR>[Called By]<UL><LI><a href="#[c76898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[c7d7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[1047d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[104ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open0
<LI><a href="#[104abb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[104abf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open2
<LI><a href="#[104ac40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open3
<LI><a href="#[104ebd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
<LI><a href="#[10563f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorism2Asc
<LI><a href="#[12468a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[12b3328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder1
<LI><a href="#[12b3370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateHeadTailPoint
<LI><a href="#[12b3448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder1
<LI><a href="#[12b3958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
<LI><a href="#[12ef570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Lat
<LI><a href="#[12ef5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Long
<LI><a href="#[12ef600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Speed
<LI><a href="#[14989d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploaderJpg2Sig
<LI><a href="#[1498a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploaderJpg1
<LI><a href="#[1499120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoaderJpgData
<LI><a href="#[149daa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneCut
<LI><a href="#[14a4c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ease
<LI><a href="#[14a4c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
<LI><a href="#[14a4cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlock
<LI><a href="#[14a4db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[14a6e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EaseFlash
<LI><a href="#[14a6ec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlash
<LI><a href="#[14a6f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlash
<LI><a href="#[14a6f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeFlash
<LI><a href="#[14a7078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatBad
<LI><a href="#[1551e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderReduce
<LI><a href="#[1552488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_Angle
<LI><a href="#[15524d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_Height
<LI><a href="#[1552680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Par
<LI><a href="#[197d990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[c81700]"></a>IRQ_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c815e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[c82128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[c81e58]"></a>Timer0_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Timer0_Handler &rArr; Timer0_Exception &rArr; OSTimeTick
</UL>
<BR>[Calls]<UL><LI><a href="#[c815e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[c82098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81d80]"></a>Uart0_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Uart0_Handler &rArr; UART0_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c813a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Exception
<LI><a href="#[c815e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81d38]"></a>Uart1_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Uart1_Handler &rArr; UART1_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c81358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Exception
<LI><a href="#[c815e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81cf0]"></a>Uart2_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Uart2_Handler &rArr; UART2_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c81310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Exception
<LI><a href="#[c815e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81ca8]"></a>Uart3_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Uart3_Handler &rArr; UART3_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c812c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Exception
<LI><a href="#[c815e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81f30]"></a>CAN_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = CAN_Handler &rArr; CAN_Exception &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c815e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[c816b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81e10]"></a>Timer1_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Timer1_Handler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[c81430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Exception
<LI><a href="#[c815e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81dc8]"></a>Timer2_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Timer2_Handler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[c813e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Exception
<LI><a href="#[c815e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[c81ee8]"></a>EINT2_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, irq.o(IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = EINT2_Handler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[c815e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[c81670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_Exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target.o(.text)
</UL>
<P><STRONG><a name="[197d990]"></a>__ieee754_rem_pio2</STRONG> (ARM, 1172 bytes, Stack size 80 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[186cf98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[1870af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1870d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1871138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[18711c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[18712a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[197ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[197b4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[197e148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[186ee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[186f2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[197dd18]"></a>__kernel_cos</STRONG> (ARM, 372 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1870af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1871138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[18711c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[197acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[197b4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[197e148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[186ee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[186f2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[197acd0]"></a>__kernel_poly</STRONG> (ARM, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1870af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[18712a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[197d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[197dd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[197d6d8]"></a>__kernel_sin</STRONG> (ARM, 364 bytes, Stack size 56 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1870af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1871138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[18711c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[18712a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[197acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[197b4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[197e148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[186ee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[186f2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[186f2e8]"></a>cos</STRONG> (ARM, 212 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = cos &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[186d830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[197d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[197d990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[197dd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[197e148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[12bdb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[12e62f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[186ee80]"></a>sin</STRONG> (ARM, 228 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[186d830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[197d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[197d990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[197dd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[197e148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[12bdb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[12e62f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[186eb80]"></a>sqrt</STRONG> (ARM, 100 bytes, Stack size 16 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[186cc68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[186d830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[197e5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[12bdb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[12e62f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[c80c88]"></a>SoftwareInterrupt</STRONG> (ARM, 0 bytes, Stack size unknown bytes, os_cpu_a.o(subr))
<BR><BR>[Stack]<UL><LI>Max Depth = 4 + Unknown Stack Size
<LI>Call Chain = SoftwareInterrupt &rArr; SWI_Exception
</UL>
<BR>[Calls]<UL><LI><a href="#[c7f498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c81628]"></a>OSIntCtxSw</STRONG> (ARM, 0 bytes, Stack size unknown bytes, os_cpu_a.o(subr))
<BR><BR>[Calls]<UL><LI><a href="#[c7f2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>
<BR>[Address Reference Count : 2]<UL><LI> os_cpu_a.o(subr)
<LI> irq.o(IRQ)
</UL>
<P><STRONG><a name="[c7ee18]"></a>__OSStartHighRdy</STRONG> (ARM, 0 bytes, Stack size unknown bytes, os_cpu_a.o(subr))
<BR><BR>[Calls]<UL><LI><a href="#[c7f2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_a.o(subr)
</UL>
<P><STRONG><a name="[1871788]"></a>__aeabi_d2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Called By]<UL><LI><a href="#[12bdb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[12e62f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[1871740]"></a>_d2f</STRONG> (ARM, 168 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186d190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[18716f8]"></a>__fpl_inf_d2f</STRONG> (ARM, 0 bytes, Stack size unknown bytes, d2f.o(x$fpl$d2f), UNUSED)

<P><STRONG><a name="[18712a0]"></a>__aeabi_dadd</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[12bdb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[12e62f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[197acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[197d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[197d990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[1871258]"></a>_dadd</STRONG> (ARM, 452 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186d340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[18712e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[1871210]"></a>__fpl_inf_dadd</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dadd), UNUSED)

<P><STRONG><a name="[186d340]"></a>__fpl_dcheck_NaN2</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dcheck.o(x$fpl$dcheck))
<BR><BR>[Calls]<UL><LI><a href="#[197b1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[1870aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[1870d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[18710f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[1871258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[197ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[197b7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[186d190]"></a>__fpl_dcheck_NaN1</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[197b1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[186cc68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[1871740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[197b480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[197e100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
</UL>

<P><STRONG><a name="[186c648]"></a>__fpl_fcmp_InfNaN</STRONG> (ARM, 100 bytes, Stack size 0 bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186c918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[197afb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[186f610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
</UL>

<P><STRONG><a name="[186c600]"></a>__fpl_inf_fcmp</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[197b7a8]"></a>__fpl_dcmp_InfNaN</STRONG> (ARM, 128 bytes, Stack size 4 bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186d340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[197afb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[197e560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[197b760]"></a>__fpl_inf_dcmp</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[1870d88]"></a>__aeabi_ddiv</STRONG> (ARM, 0 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[12bdb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[12e62f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[197d990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[1870d40]"></a>_ddiv</STRONG> (ARM, 464 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186d340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[1870cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv_mantissas
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[1870cf8]"></a>__fpl_inf_ddiv</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ddiv.o(x$fpl$ddiv), UNUSED)

<P><STRONG><a name="[1870cb0]"></a>_ddiv_mantissas</STRONG> (ARM, 608 bytes, Stack size 28 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1870d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[197b4c8]"></a>__aeabi_d2iz</STRONG> (ARM, 0 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[197d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[197d990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[197dd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[197b480]"></a>_dfix</STRONG> (ARM, 172 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186d190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[197b438]"></a>__fpl_inf_dfix</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dfix.o(x$fpl$dfix), UNUSED)

<P><STRONG><a name="[186cf98]"></a>__aeabi_i2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dflt_noclz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[197d990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[186cf50]"></a>_dflt</STRONG> (ARM, 88 bytes, Stack size 0 bytes, dflt_noclz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[186cf08]"></a>__dflt_normalise</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dflt_noclz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[197e5a8]"></a>__aeabi_cdcmple</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Called By]<UL><LI><a href="#[186eb80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[197e560]"></a>_dcmple</STRONG> (ARM, 132 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[197b7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[1870af0]"></a>__aeabi_dmul</STRONG> (ARM, 0 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[12bdb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[12e62f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[197acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[197d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[197d990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[197dd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[1870aa8]"></a>_dmul</STRONG> (ARM, 460 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186d340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[1870a60]"></a>__fpl_inf_dmul</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dmul.o(x$fpl$dmul), UNUSED)

<P><STRONG><a name="[197ae38]"></a>_drem</STRONG> (ARM, 496 bytes, Stack size 16 bytes, drem.o(x$fpl$drem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[186d340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[197d990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[197adf0]"></a>__fpl_inf_drem</STRONG> (ARM, 0 bytes, Stack size unknown bytes, drem.o(x$fpl$drem), UNUSED)

<P><STRONG><a name="[18711c8]"></a>__aeabi_drsub</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[197d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[197d990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[197dd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[1871180]"></a>_drsb</STRONG> (ARM, 24 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18712e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[1871330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[186cc68]"></a>_dsqrt</STRONG> (ARM, 384 bytes, Stack size 16 bytes, dsqrt.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[186d190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[186eb80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[186cc20]"></a>__fpl_inf_dsqrt</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dsqrt.o(x$fpl$dsqrt), UNUSED)

<P><STRONG><a name="[1871138]"></a>__aeabi_dsub</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[197d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[197d990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[197dd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[18710f0]"></a>_dsub</STRONG> (ARM, 572 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186d340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[1871330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[18710a8]"></a>__fpl_inf_dsub</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[186cb00]"></a>__dunder</STRONG> (ARM, 272 bytes, Stack size 4 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[186cab8]"></a>__dunder_d</STRONG> (ARM, 4 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[1870940]"></a>__aeabi_f2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Called By]<UL><LI><a href="#[12bdb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[12e62f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[18708f8]"></a>_f2d</STRONG> (ARM, 96 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186c7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[18708b0]"></a>__fpl_inf_f2d</STRONG> (ARM, 0 bytes, Stack size unknown bytes, f2d.o(x$fpl$f2d), UNUSED)

<P><STRONG><a name="[1870480]"></a>__aeabi_fadd</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[1870438]"></a>_fadd</STRONG> (ARM, 260 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186c918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[18704c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[18703f0]"></a>__fpl_inf_fadd</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[186c918]"></a>__fpl_fcheck_NaN2</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fcheck.o(x$fpl$fcheck), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[197b1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[186c648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[186f888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[18702d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[1870438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[186c7b0]"></a>__fpl_fcheck_NaN1</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[197b1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[186ffb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[18708f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[1870000]"></a>__aeabi_f2uiz</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Called By]<UL><LI><a href="#[12bdad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeAreacirc
<LI><a href="#[12e6268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[186ffb8]"></a>_ffixu</STRONG> (ARM, 92 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186c7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[186ff70]"></a>__fpl_inf_ffixu</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ffixu.o(x$fpl$ffixu), UNUSED)

<P><STRONG><a name="[186fc08]"></a>__aeabi_i2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[186fbc0]"></a>_fflt</STRONG> (ARM, 92 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[186fb78]"></a>__fflt_normalise</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fflt_noclz.o(x$fpl$fflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[186fae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffltu
</UL>

<P><STRONG><a name="[186fb30]"></a>__aeabi_ui2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[12bdb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[12e62f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[186fae8]"></a>_ffltu</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$ffltu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fflt_normalise
</UL>

<P><STRONG><a name="[186f8d0]"></a>__aeabi_fmul</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Called By]<UL><LI><a href="#[12bdb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[12e62f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[186f888]"></a>_fmul</STRONG> (ARM, 260 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186c918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[186f840]"></a>__fpl_inf_fmul</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[186c3d8]"></a>__fpl_normalise2</STRONG> (ARM, 148 bytes, Stack size 0 bytes, fnorm2_noclz.o(x$fpl$fnorm2), UNUSED)

<P><STRONG><a name="[1979c80]"></a>_fp_init</STRONG> (ARM, 24 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1979530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[1979c38]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[186f658]"></a>__aeabi_cfrcmple</STRONG> (ARM, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[12bdb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[12e62f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[186f610]"></a>_frcmple</STRONG> (ARM, 128 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186c648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[1870318]"></a>__aeabi_fsub</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fsub))
<BR><BR>[Called By]<UL><LI><a href="#[12bdb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[12e62f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
</UL>

<P><STRONG><a name="[18702d0]"></a>_fsub</STRONG> (ARM, 356 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186c918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[1870510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[1870288]"></a>__fpl_inf_fsub</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[186c268]"></a>__funder</STRONG> (ARM, 140 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[186c220]"></a>__funder_d</STRONG> (ARM, 4 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[197b1b0]"></a>__fpl_return_NaN</STRONG> (ARM, 116 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[197afb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[186c7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[186c918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[186d190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[186d340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[197e148]"></a>__ARM_scalbn</STRONG> (ARM, 0 bytes, Stack size 0 bytes, scalbn_noclz.o(x$fpl$scalbn))
<BR><BR>[Called By]<UL><LI><a href="#[186ee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[186f2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[197d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[197d990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[197dd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[197e100]"></a>scalbn</STRONG> (ARM, 108 bytes, Stack size 0 bytes, scalbn_noclz.o(x$fpl$scalbn), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186d190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[18715d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[197e0b8]"></a>__fpl_inf_scalbn</STRONG> (ARM, 0 bytes, Stack size unknown bytes, scalbn_noclz.o(x$fpl$scalbn), UNUSED)

<P><STRONG><a name="[197afb0]"></a>__fpl_cmpreturn</STRONG> (ARM, 60 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[186c648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[197b1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[197b7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c82bd8]"></a>InitWTD</STRONG> (ARM, 24 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c81fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TargetInit
</UL>

<P><STRONG><a name="[c80f10]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c80f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c80f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c80ec8]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c80ec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c80ec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c80e80]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c80e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c80e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c80e38]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c820e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c7e4e0]"></a>OS_InitTaskStat</STRONG> (ARM, 68 bytes, Stack size 24 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = OS_InitTaskStat &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[c7d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7e498]"></a>OS_InitTaskIdle</STRONG> (ARM, 68 bytes, Stack size 24 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[c7d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7e450]"></a>OS_InitEventList</STRONG> (ARM, 80 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7e408]"></a>OS_InitTCBList</STRONG> (ARM, 116 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7e3c0]"></a>OS_InitRdyList</STRONG> (ARM, 88 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7e378]"></a>OS_InitMisc</STRONG> (ARM, 88 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[c7c988]"></a>OS_FlagTaskRdy</STRONG> (ARM, 140 bytes, Stack size 20 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7c4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
</UL>
<BR>[Called By]<UL><LI><a href="#[c7c3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[c7c478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
</UL>

<P><STRONG><a name="[c7c940]"></a>OS_FlagBlock</STRONG> (ARM, 220 bytes, Stack size 16 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c7c430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
</UL>

<P><STRONG><a name="[c75710]"></a>nand_trans_result</STRONG> (ARM, 168 bytes, Stack size 16 bytes, _arithmetic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nand_trans_result
</UL>
<BR>[Called By]<UL><LI><a href="#[c756c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_calculate_ecc
</UL>

<P><STRONG><a name="[c756c8]"></a>nand_calculate_ecc</STRONG> (ARM, 176 bytes, Stack size 32 bytes, _arithmetic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nand_calculate_ecc &rArr; nand_trans_result
</UL>
<BR>[Calls]<UL><LI><a href="#[c75710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_trans_result
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _arithmetic.o(.constdata)
</UL>
<P><STRONG><a name="[c75680]"></a>nand_correct_data</STRONG> (ARM, 452 bytes, Stack size 36 bytes, _arithmetic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nand_correct_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _arithmetic.o(.constdata)
</UL>
<P><STRONG><a name="[c75638]"></a>Crc</STRONG> (ARM, 112 bytes, Stack size 8 bytes, _arithmetic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Crc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _arithmetic.o(.constdata)
</UL>
<P><STRONG><a name="[c755f0]"></a>CheckSum</STRONG> (ARM, 44 bytes, Stack size 0 bytes, _arithmetic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _arithmetic.o(.constdata)
</UL>
<P><STRONG><a name="[c755a8]"></a>CheckAdd</STRONG> (ARM, 48 bytes, Stack size 0 bytes, _arithmetic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _arithmetic.o(.constdata)
</UL>
<P><STRONG><a name="[c75560]"></a>Crc1021</STRONG> (ARM, 112 bytes, Stack size 8 bytes, _arithmetic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Crc1021
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _arithmetic.o(.constdata)
</UL>
<P><STRONG><a name="[10564c8]"></a>Asc2Bcd</STRONG> (ARM, 76 bytes, Stack size 8 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Asc2Bcd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056480]"></a>Bcd2Asc</STRONG> (ARM, 80 bytes, Stack size 8 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bcd2Asc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056438]"></a>Asc2Algorism</STRONG> (ARM, 100 bytes, Stack size 12 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Asc2Algorism
</UL>
<BR>[Called By]<UL><LI><a href="#[10557d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Char2IP
<LI><a href="#[1055bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPAsc2INT32
<LI><a href="#[1056090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2Float
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10563f0]"></a>Algorism2Asc</STRONG> (ARM, 176 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Algorism2Asc
</UL>
<BR>[Calls]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1055820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP2Char
<LI><a href="#[1055b80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT322IPAsc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10563a8]"></a>Asc2HexSig</STRONG> (ARM, 96 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1056360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2HexBuf
</UL>

<P><STRONG><a name="[1056360]"></a>Asc2HexBuf</STRONG> (ARM, 112 bytes, Stack size 16 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Asc2HexBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[10563a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2HexSig
</UL>
<BR>[Called By]<UL><LI><a href="#[10558b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpPdu
<LI><a href="#[1056288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2Hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056318]"></a>Hex2AscSig</STRONG> (ARM, 52 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1056240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Asc
<LI><a href="#[10562d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexBuf2Asc
</UL>

<P><STRONG><a name="[10562d0]"></a>HexBuf2Asc</STRONG> (ARM, 88 bytes, Stack size 12 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HexBuf2Asc
</UL>
<BR>[Calls]<UL><LI><a href="#[1056318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2AscSig
</UL>
<BR>[Called By]<UL><LI><a href="#[10559d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056288]"></a>Asc2Hex</STRONG> (ARM, 100 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Asc2Hex &rArr; Asc2HexBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[1056360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2HexBuf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056240]"></a>Hex2Asc</STRONG> (ARM, 220 bytes, Stack size 20 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Hex2Asc
</UL>
<BR>[Calls]<UL><LI><a href="#[1056318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2AscSig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10561f8]"></a>Bcd2Hex</STRONG> (ARM, 68 bytes, Stack size 8 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bcd2Hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10561b0]"></a>Hex2Bcd</STRONG> (ARM, 108 bytes, Stack size 24 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056168]"></a>JugeAscBcd</STRONG> (ARM, 68 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056120]"></a>JugeHexBcd</STRONG> (ARM, 80 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10560d8]"></a>JugeAscHex</STRONG> (ARM, 132 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056090]"></a>Asc2Float</STRONG> (ARM, 160 bytes, Stack size 40 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Asc2Float &rArr; Asc2Algorism
</UL>
<BR>[Calls]<UL><LI><a href="#[1056438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2Algorism
<LI><a href="#[1872c88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memchr (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056048]"></a>JugeAscFloat</STRONG> (ARM, 116 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1056000]"></a>ClsArray</STRONG> (ARM, 40 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10558b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpPdu
<LI><a href="#[1055c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055fb8]"></a>MoveByte</STRONG> (ARM, 52 bytes, Stack size 8 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MoveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10558b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055f70]"></a>CompareBuf</STRONG> (ARM, 76 bytes, Stack size 12 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CompareBuf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055f28]"></a>CompareVa</STRONG> (ARM, 208 bytes, Stack size 8 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CompareVa
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055ee0]"></a>Strsize</STRONG> (ARM, 52 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10559d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoPdu
<LI><a href="#[1055b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeBufType
<LI><a href="#[1055bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPAsc2INT32
<LI><a href="#[1055c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSpace
<LI><a href="#[1055d78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookStrDown
<LI><a href="#[1055dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookStrInLength
<LI><a href="#[1055e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrATChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055e98]"></a>StrATChar</STRONG> (ARM, 92 bytes, Stack size 12 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = StrATChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1055ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055e50]"></a>Strsize16</STRONG> (ARM, 56 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10557d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Char2IP
<LI><a href="#[10559d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoPdu
<LI><a href="#[1055e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookStr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055e08]"></a>LookStr</STRONG> (ARM, 156 bytes, Stack size 24 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LookStr
</UL>
<BR>[Calls]<UL><LI><a href="#[1055e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize16
</UL>
<BR>[Called By]<UL><LI><a href="#[1055bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPAsc2INT32
<LI><a href="#[1055c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekStr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055dc0]"></a>LookStrInLength</STRONG> (ARM, 148 bytes, Stack size 24 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LookStrInLength
</UL>
<BR>[Calls]<UL><LI><a href="#[1055ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055d78]"></a>LookStrDown</STRONG> (ARM, 192 bytes, Stack size 28 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LookStrDown
</UL>
<BR>[Calls]<UL><LI><a href="#[1055ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055d30]"></a>LookEnable</STRONG> (ARM, 132 bytes, Stack size 16 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LookEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055ce8]"></a>LookShowChar</STRONG> (ARM, 64 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055ca0]"></a>SeekChar</STRONG> (ARM, 96 bytes, Stack size 8 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[10557d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Char2IP
</UL>

<P><STRONG><a name="[1055c58]"></a>SeekStr</STRONG> (ARM, 100 bytes, Stack size 28 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SeekStr &rArr; LookStr
</UL>
<BR>[Calls]<UL><LI><a href="#[1055e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookStr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055c10]"></a>MemSpace</STRONG> (ARM, 108 bytes, Stack size 20 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MemSpace
</UL>
<BR>[Calls]<UL><LI><a href="#[1055ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
<LI><a href="#[1056000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055bc8]"></a>IPAsc2INT32</STRONG> (ARM, 232 bytes, Stack size 28 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = IPAsc2INT32 &rArr; LookStr
</UL>
<BR>[Calls]<UL><LI><a href="#[1055e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookStr
<LI><a href="#[1055ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
<LI><a href="#[1056438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2Algorism
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055b80]"></a>INT322IPAsc</STRONG> (ARM, 164 bytes, Stack size 24 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = INT322IPAsc &rArr; Algorism2Asc
</UL>
<BR>[Calls]<UL><LI><a href="#[10563f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorism2Asc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055b38]"></a>JugeBufType</STRONG> (ARM, 128 bytes, Stack size 16 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = JugeBufType
</UL>
<BR>[Calls]<UL><LI><a href="#[1055ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
</UL>
<BR>[Called By]<UL><LI><a href="#[10559d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055af0]"></a>BinarySearchStr</STRONG> (ARM, 208 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BinarySearchStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1055aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrToUni
</UL>

<P><STRONG><a name="[1055aa8]"></a>StrToUni</STRONG> (ARM, 212 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = StrToUni &rArr; BinarySearchStr
</UL>
<BR>[Calls]<UL><LI><a href="#[1055af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BinarySearchStr
</UL>
<BR>[Called By]<UL><LI><a href="#[10559d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055a60]"></a>gsmEncode7bit</STRONG> (ARM, 144 bytes, Stack size 16 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gsmEncode7bit
</UL>
<BR>[Called By]<UL><LI><a href="#[10559d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055a18]"></a>PduNumber</STRONG> (ARM, 84 bytes, Stack size 4 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PduNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[10559d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10559d0]"></a>PhoPdu</STRONG> (ARM, 628 bytes, Stack size 200 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = PhoPdu &rArr; StrToUni &rArr; BinarySearchStr
</UL>
<BR>[Calls]<UL><LI><a href="#[1055a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PduNumber
<LI><a href="#[1055a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmEncode7bit
<LI><a href="#[1055aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrToUni
<LI><a href="#[1055b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeBufType
<LI><a href="#[1055e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize16
<LI><a href="#[1055ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize
<LI><a href="#[10562d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexBuf2Asc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055988]"></a>Bit72Bit8</STRONG> (ARM, 532 bytes, Stack size 12 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Bit72Bit8
</UL>
<BR>[Called By]<UL><LI><a href="#[10558b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055940]"></a>BinarySearchUni</STRONG> (ARM, 200 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BinarySearchUni
</UL>
<BR>[Called By]<UL><LI><a href="#[10558f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UniToStr
</UL>

<P><STRONG><a name="[10558f8]"></a>UniToStr</STRONG> (ARM, 216 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UniToStr &rArr; BinarySearchUni
</UL>
<BR>[Calls]<UL><LI><a href="#[1055940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BinarySearchUni
</UL>
<BR>[Called By]<UL><LI><a href="#[10558b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10558b0]"></a>ExpPdu</STRONG> (ARM, 528 bytes, Stack size 40 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ExpPdu &rArr; UniToStr &rArr; BinarySearchUni
</UL>
<BR>[Calls]<UL><LI><a href="#[10558f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UniToStr
<LI><a href="#[1055988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bit72Bit8
<LI><a href="#[1055fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[1056000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[1056360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2HexBuf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055868]"></a>GetCsq</STRONG> (ARM, 100 bytes, Stack size 0 bytes, _ascnumber.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055820]"></a>IP2Char</STRONG> (ARM, 108 bytes, Stack size 32 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = IP2Char &rArr; Algorism2Asc
</UL>
<BR>[Calls]<UL><LI><a href="#[10563f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorism2Asc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10557d8]"></a>Char2IP</STRONG> (ARM, 252 bytes, Stack size 40 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Char2IP &rArr; Asc2Algorism
</UL>
<BR>[Calls]<UL><LI><a href="#[1055ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1055e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strsize16
<LI><a href="#[1056438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2Algorism
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[1055790]"></a>LookBufInLength</STRONG> (ARM, 128 bytes, Stack size 12 bytes, _ascnumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LookBufInLength
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _ascnumber.o(.constdata)
</UL>
<P><STRONG><a name="[10533a0]"></a>JugeSecond</STRONG> (ARM, 28 bytes, Stack size 0 bytes, _date.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1053238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juge
</UL>

<P><STRONG><a name="[1053358]"></a>JugeMinute</STRONG> (ARM, 28 bytes, Stack size 0 bytes, _date.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1053238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juge
</UL>

<P><STRONG><a name="[1053310]"></a>JugeHour</STRONG> (ARM, 28 bytes, Stack size 0 bytes, _date.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1053238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juge
</UL>

<P><STRONG><a name="[10532c8]"></a>Bcd2Hex</STRONG> (ARM, 68 bytes, Stack size 8 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSecond
<LI><a href="#[1052fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackMinute
<LI><a href="#[1052ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackHour
<LI><a href="#[1053040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackDate
<LI><a href="#[10530d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextSecond
<LI><a href="#[1053118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextMinute
<LI><a href="#[1053160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextHour
<LI><a href="#[10531a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextDate
<LI><a href="#[1053280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeDate
</UL>

<P><STRONG><a name="[1053280]"></a>JugeDate</STRONG> (ARM, 396 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = JugeDate &rArr; Bcd2Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[10532c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1052ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWeek
<LI><a href="#[1053238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juge
</UL>

<P><STRONG><a name="[1053238]"></a>Juge</STRONG> (ARM, 212 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Juge &rArr; JugeDate &rArr; Bcd2Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[1053280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeDate
<LI><a href="#[1053310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeHour
<LI><a href="#[1053358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeMinute
<LI><a href="#[10533a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeSecond
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[1053088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Next
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _date.o(.constdata)
</UL>
<P><STRONG><a name="[10531f0]"></a>Hex2Bcd</STRONG> (ARM, 108 bytes, Stack size 24 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSecond
<LI><a href="#[1052fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackMinute
<LI><a href="#[1052ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackHour
<LI><a href="#[1053040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackDate
<LI><a href="#[10530d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextSecond
<LI><a href="#[1053118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextMinute
<LI><a href="#[1053160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextHour
<LI><a href="#[10531a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextDate
</UL>

<P><STRONG><a name="[10531a8]"></a>NextDate</STRONG> (ARM, 408 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = NextDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10531f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1052ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWeek
<LI><a href="#[1053088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Next
<LI><a href="#[1053160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextHour
</UL>

<P><STRONG><a name="[1053160]"></a>NextHour</STRONG> (ARM, 96 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = NextHour &rArr; NextDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10531a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextDate
<LI><a href="#[10531f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1053088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Next
<LI><a href="#[1053118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextMinute
</UL>

<P><STRONG><a name="[1053118]"></a>NextMinute</STRONG> (ARM, 96 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = NextMinute &rArr; NextHour &rArr; NextDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1053160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextHour
<LI><a href="#[10531f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1053088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Next
<LI><a href="#[10530d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextSecond
</UL>

<P><STRONG><a name="[10530d0]"></a>NextSecond</STRONG> (ARM, 96 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = NextSecond &rArr; NextMinute &rArr; NextHour &rArr; NextDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1053118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextMinute
<LI><a href="#[10531f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1053088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Next
</UL>

<P><STRONG><a name="[1053088]"></a>Next</STRONG> (ARM, 120 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Next &rArr; NextSecond &rArr; NextMinute &rArr; NextHour &rArr; NextDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10530d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextSecond
<LI><a href="#[1053118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextMinute
<LI><a href="#[1053160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextHour
<LI><a href="#[10531a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextDate
<LI><a href="#[1053238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juge
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _date.o(.constdata)
</UL>
<P><STRONG><a name="[1053040]"></a>BackDate</STRONG> (ARM, 380 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BackDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10531f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[1052ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackHour
</UL>

<P><STRONG><a name="[1052ff8]"></a>BackHour</STRONG> (ARM, 96 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BackHour &rArr; BackDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1053040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackDate
<LI><a href="#[10531f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[1052fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackMinute
</UL>

<P><STRONG><a name="[1052fb0]"></a>BackMinute</STRONG> (ARM, 96 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BackMinute &rArr; BackHour &rArr; BackDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1052ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackHour
<LI><a href="#[10531f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[1052f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSecond
</UL>

<P><STRONG><a name="[1052f68]"></a>BackSecond</STRONG> (ARM, 96 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BackSecond &rArr; BackMinute &rArr; BackHour &rArr; BackDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1052fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackMinute
<LI><a href="#[10531f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Bcd
<LI><a href="#[10532c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1052f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
</UL>

<P><STRONG><a name="[1052f20]"></a>Back</STRONG> (ARM, 120 bytes, Stack size 16 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Back &rArr; BackSecond &rArr; BackMinute &rArr; BackHour &rArr; BackDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1052f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSecond
<LI><a href="#[1052fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackMinute
<LI><a href="#[1052ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackHour
<LI><a href="#[1053040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackDate
<LI><a href="#[1053238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juge
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _date.o(.constdata)
</UL>
<P><STRONG><a name="[1052ed8]"></a>GetWeek</STRONG> (ARM, 284 bytes, Stack size 24 bytes, _date.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GetWeek &rArr; NextDate &rArr; Hex2Bcd &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10531a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextDate
<LI><a href="#[1053280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeDate
<LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _date.o(.constdata)
</UL>
<P><STRONG><a name="[1051240]"></a>Init</STRONG> (ARM, 268 bytes, Stack size 8 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[c7b7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _can.o(.data)
</UL>
<P><STRONG><a name="[10511f8]"></a>ClearSem</STRONG> (ARM, 84 bytes, Stack size 24 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemQuery
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[1051090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close0
<LI><a href="#[10510d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[1051168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open0
<LI><a href="#[10511b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
</UL>

<P><STRONG><a name="[10511b0]"></a>Open1</STRONG> (ARM, 192 bytes, Stack size 16 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Open1 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[10511f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[1051120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[1051168]"></a>Open0</STRONG> (ARM, 192 bytes, Stack size 16 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Open0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[10511f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[1051120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[1051120]"></a>Open</STRONG> (ARM, 64 bytes, Stack size 16 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Open &rArr; Open0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[1051168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open0
<LI><a href="#[10511b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _can.o(.data)
</UL>
<P><STRONG><a name="[10510d8]"></a>Close1</STRONG> (ARM, 84 bytes, Stack size 8 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Close1 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[10511f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[1051048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[1051090]"></a>Close0</STRONG> (ARM, 84 bytes, Stack size 8 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Close0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[10511f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[1051048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[1051048]"></a>Close</STRONG> (ARM, 52 bytes, Stack size 8 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Close &rArr; Close0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[1051090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close0
<LI><a href="#[10510d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _can.o(.data)
</UL>
<P><STRONG><a name="[1051000]"></a>Read1</STRONG> (ARM, 188 bytes, Stack size 0 bytes, _can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1050f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[1050fb8]"></a>Read0</STRONG> (ARM, 188 bytes, Stack size 0 bytes, _can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1050f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[1050f70]"></a>Read</STRONG> (ARM, 64 bytes, Stack size 8 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Read
</UL>
<BR>[Calls]<UL><LI><a href="#[1050fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read0
<LI><a href="#[1051000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _can.o(.data)
</UL>
<P><STRONG><a name="[1050f28]"></a>Write1</STRONG> (ARM, 112 bytes, Stack size 0 bytes, _can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1050e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[1050ee0]"></a>Write0</STRONG> (ARM, 124 bytes, Stack size 16 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Write0
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[1050e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[1050e98]"></a>Write</STRONG> (ARM, 64 bytes, Stack size 16 bytes, _can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Write &rArr; Write0
</UL>
<BR>[Calls]<UL><LI><a href="#[1050ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write0
<LI><a href="#[1050f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _can.o(.data)
</UL>
<P><STRONG><a name="[104ecb0]"></a>RTCInit</STRONG> (ARM, 80 bytes, Stack size 0 bytes, _rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104ec68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init1
</UL>

<P><STRONG><a name="[104ec68]"></a>Init1</STRONG> (ARM, 20 bytes, Stack size 4 bytes, _rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Init1
</UL>
<BR>[Calls]<UL><LI><a href="#[104ecb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCInit
</UL>
<BR>[Called By]<UL><LI><a href="#[104ec20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[104ec20]"></a>Init</STRONG> (ARM, 104 bytes, Stack size 8 bytes, _rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[104ec68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rtc.o(.constdata)
</UL>
<P><STRONG><a name="[104ebd8]"></a>Read1</STRONG> (ARM, 188 bytes, Stack size 24 bytes, _rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = Read1
</UL>
<BR>[Calls]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[104eb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
<LI><a href="#[104eb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[104eb90]"></a>Read</STRONG> (ARM, 64 bytes, Stack size 16 bytes, _rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104ebd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rtc.o(.constdata)
</UL>
<P><STRONG><a name="[104eb48]"></a>Write1</STRONG> (ARM, 180 bytes, Stack size 24 bytes, _rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Write1 &rArr; Read1
</UL>
<BR>[Calls]<UL><LI><a href="#[104ebd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>
<BR>[Called By]<UL><LI><a href="#[104eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[104eb00]"></a>Write</STRONG> (ARM, 64 bytes, Stack size 16 bytes, _rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = Write &rArr; Write1 &rArr; Read1
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104eb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rtc.o(.constdata)
</UL>
<P><STRONG><a name="[104cbd0]"></a>Open</STRONG> (ARM, 172 bytes, Stack size 8 bytes, _spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Open &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104cb88]"></a>DelaySpi</STRONG> (ARM, 28 bytes, Stack size 0 bytes, _spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104cb40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start
</UL>

<P><STRONG><a name="[104cb40]"></a>Start</STRONG> (ARM, 116 bytes, Stack size 16 bytes, _spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Start &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104cb88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelaySpi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104caf8]"></a>RwSpi</STRONG> (ARM, 180 bytes, Stack size 4 bytes, _spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RwSpi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104cab0]"></a>Write</STRONG> (ARM, 144 bytes, Stack size 4 bytes, _spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104ca68]"></a>Read</STRONG> (ARM, 172 bytes, Stack size 0 bytes, _spi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104ca20]"></a>JugeBuf</STRONG> (ARM, 188 bytes, Stack size 0 bytes, _spi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104c9d8]"></a>JugeByte</STRONG> (ARM, 172 bytes, Stack size 0 bytes, _spi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104c990]"></a>End</STRONG> (ARM, 84 bytes, Stack size 8 bytes, _spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = End &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104c948]"></a>Close</STRONG> (ARM, 32 bytes, Stack size 0 bytes, _spi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _spi.o(.constdata)
</UL>
<P><STRONG><a name="[104ad18]"></a>Init</STRONG> (ARM, 628 bytes, Stack size 8 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[c7b7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _uart.o(.constdata)
</UL>
<P><STRONG><a name="[104acd0]"></a>ClearSem</STRONG> (ARM, 84 bytes, Stack size 24 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemQuery
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[104a9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close0
<LI><a href="#[104aa00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[104aa48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close2
<LI><a href="#[104aa90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close3
<LI><a href="#[104ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open0
<LI><a href="#[104abb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[104abf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open2
<LI><a href="#[104ac40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open3
<LI><a href="#[104ac88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open4
</UL>

<P><STRONG><a name="[104ac88]"></a>Open4</STRONG> (ARM, 696 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Open4 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[104ab20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[104ac40]"></a>Open3</STRONG> (ARM, 536 bytes, Stack size 24 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Open3 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[104ab20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[104abf8]"></a>Open2</STRONG> (ARM, 536 bytes, Stack size 24 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Open2 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[104ab20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[104abb0]"></a>Open1</STRONG> (ARM, 548 bytes, Stack size 24 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Open1 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[104ab20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[104ab68]"></a>Open0</STRONG> (ARM, 744 bytes, Stack size 24 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Open0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[104acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[104ab20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[104ab20]"></a>Open</STRONG> (ARM, 124 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = Open &rArr; Open0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[104ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open0
<LI><a href="#[104abb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
<LI><a href="#[104abf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open2
<LI><a href="#[104ac40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open3
<LI><a href="#[104ac88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _uart.o(.constdata)
</UL>
<P><STRONG><a name="[104aad8]"></a>Close4</STRONG> (ARM, 48 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[104aa90]"></a>Close3</STRONG> (ARM, 96 bytes, Stack size 8 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Close3 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[104acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[104a970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[104aa48]"></a>Close2</STRONG> (ARM, 92 bytes, Stack size 8 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Close2 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[104acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[104a970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[104aa00]"></a>Close1</STRONG> (ARM, 92 bytes, Stack size 8 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Close1 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[104acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[104a970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[104a9b8]"></a>Close0</STRONG> (ARM, 92 bytes, Stack size 8 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Close0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[104acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[104a970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>

<P><STRONG><a name="[104a970]"></a>Close</STRONG> (ARM, 100 bytes, Stack size 8 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Close &rArr; Close0 &rArr; ClearSem &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[104a9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close0
<LI><a href="#[104aa00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
<LI><a href="#[104aa48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close2
<LI><a href="#[104aa90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close3
<LI><a href="#[104aad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _uart.o(.constdata)
</UL>
<P><STRONG><a name="[104a928]"></a>Receive4Byte</STRONG> (ARM, 120 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read4
</UL>

<P><STRONG><a name="[104a8e0]"></a>Read4</STRONG> (ARM, 80 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read4
</UL>
<BR>[Calls]<UL><LI><a href="#[104a928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive4Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[104a658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[104a898]"></a>Receive3Byte</STRONG> (ARM, 120 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read3
</UL>

<P><STRONG><a name="[104a850]"></a>Read3</STRONG> (ARM, 80 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read3
</UL>
<BR>[Calls]<UL><LI><a href="#[104a898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive3Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[104a658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[104a808]"></a>Receive2Byte</STRONG> (ARM, 120 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read2
</UL>

<P><STRONG><a name="[104a7c0]"></a>Read2</STRONG> (ARM, 80 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read2
</UL>
<BR>[Calls]<UL><LI><a href="#[104a808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive2Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[104a658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[104a778]"></a>Receive1Byte</STRONG> (ARM, 120 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>

<P><STRONG><a name="[104a730]"></a>Read1</STRONG> (ARM, 80 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read1
</UL>
<BR>[Calls]<UL><LI><a href="#[104a778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[104a658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[104a6e8]"></a>Receive0Byte</STRONG> (ARM, 120 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read0
</UL>

<P><STRONG><a name="[104a6a0]"></a>Read0</STRONG> (ARM, 80 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read0
</UL>
<BR>[Calls]<UL><LI><a href="#[104a6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive0Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[104a658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[104a658]"></a>Read</STRONG> (ARM, 148 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Read &rArr; Read0
</UL>
<BR>[Calls]<UL><LI><a href="#[104a6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read0
<LI><a href="#[104a730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
<LI><a href="#[104a7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read2
<LI><a href="#[104a850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read3
<LI><a href="#[104a8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _uart.o(.constdata)
</UL>
<P><STRONG><a name="[104a610]"></a>Write4</STRONG> (ARM, 124 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[104a5c8]"></a>Write3</STRONG> (ARM, 68 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[104a580]"></a>Write2</STRONG> (ARM, 68 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[104a538]"></a>Write1</STRONG> (ARM, 68 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[104a4f0]"></a>Write0</STRONG> (ARM, 68 bytes, Stack size 0 bytes, _uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104a4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[104a4a8]"></a>Write</STRONG> (ARM, 148 bytes, Stack size 16 bytes, _uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Write
</UL>
<BR>[Calls]<UL><LI><a href="#[104a4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write0
<LI><a href="#[104a538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
<LI><a href="#[104a580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write2
<LI><a href="#[104a5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write3
<LI><a href="#[104a610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _uart.o(.constdata)
</UL>
<P><STRONG><a name="[1047e28]"></a>Init</STRONG> (ARM, 160 bytes, Stack size 8 bytes, adchard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adchard.o(.constdata)
</UL>
<P><STRONG><a name="[1047de0]"></a>Open</STRONG> (ARM, 708 bytes, Stack size 24 bytes, adchard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adchard.o(.constdata)
</UL>
<P><STRONG><a name="[1047d98]"></a>Close</STRONG> (ARM, 172 bytes, Stack size 16 bytes, adchard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adchard.o(.constdata)
</UL>
<P><STRONG><a name="[1047d50]"></a>Read</STRONG> (ARM, 976 bytes, Stack size 24 bytes, adchard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adchard.o(.constdata)
</UL>
<P><STRONG><a name="[10458a8]"></a>Init</STRONG> (ARM, 72 bytes, Stack size 8 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ds18b20.o(.constdata)
</UL>
<P><STRONG><a name="[1045860]"></a>Open</STRONG> (ARM, 260 bytes, Stack size 16 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ds18b20.o(.constdata)
</UL>
<P><STRONG><a name="[1045818]"></a>DS18B20crc8</STRONG> (ARM, 60 bytes, Stack size 8 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DS18B20crc8
</UL>
<BR>[Called By]<UL><LI><a href="#[10455d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadTemp
</UL>

<P><STRONG><a name="[10457d0]"></a>delay_10us</STRONG> (ARM, 40 bytes, Stack size 0 bytes, ds18b20.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10455d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadTemp
<LI><a href="#[1045668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20WriteBit
<LI><a href="#[1045788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20Reset
</UL>

<P><STRONG><a name="[1045788]"></a>DS18B20Reset</STRONG> (ARM, 208 bytes, Stack size 16 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DS18B20Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[10457d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_10us
</UL>
<BR>[Called By]<UL><LI><a href="#[10455d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadTemp
</UL>

<P><STRONG><a name="[1045740]"></a>delay_1us</STRONG> (ARM, 40 bytes, Stack size 0 bytes, ds18b20.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1045620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20WriteByte
<LI><a href="#[1045668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20WriteBit
<LI><a href="#[10456b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadByte
<LI><a href="#[10456f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadBit
</UL>

<P><STRONG><a name="[10456f8]"></a>DS18B20ReadBit</STRONG> (ARM, 240 bytes, Stack size 8 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DS18B20ReadBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1045740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[10456b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadByte
</UL>

<P><STRONG><a name="[10456b0]"></a>DS18B20ReadByte</STRONG> (ARM, 92 bytes, Stack size 16 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DS18B20ReadByte &rArr; DS18B20ReadBit
</UL>
<BR>[Calls]<UL><LI><a href="#[10456f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadBit
<LI><a href="#[1045740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[10455d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadTemp
</UL>

<P><STRONG><a name="[1045668]"></a>DS18B20WriteBit</STRONG> (ARM, 212 bytes, Stack size 8 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DS18B20WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1045740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
<LI><a href="#[10457d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_10us
</UL>
<BR>[Called By]<UL><LI><a href="#[1045620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20WriteByte
</UL>

<P><STRONG><a name="[1045620]"></a>DS18B20WriteByte</STRONG> (ARM, 76 bytes, Stack size 16 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DS18B20WriteByte &rArr; DS18B20WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1045668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20WriteBit
<LI><a href="#[1045740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[10455d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadTemp
</UL>

<P><STRONG><a name="[10455d8]"></a>DS18B20ReadTemp</STRONG> (ARM, 332 bytes, Stack size 40 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DS18B20ReadTemp &rArr; DS18B20WriteByte &rArr; DS18B20WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1045620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20WriteByte
<LI><a href="#[10456b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadByte
<LI><a href="#[1045788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20Reset
<LI><a href="#[10457d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_10us
<LI><a href="#[1045818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20crc8
</UL>
<BR>[Called By]<UL><LI><a href="#[1045590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[1045590]"></a>Read</STRONG> (ARM, 248 bytes, Stack size 24 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Read &rArr; DS18B20ReadTemp &rArr; DS18B20WriteByte &rArr; DS18B20WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[10455d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20ReadTemp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ds18b20.o(.constdata)
</UL>
<P><STRONG><a name="[1045548]"></a>Close</STRONG> (ARM, 168 bytes, Stack size 16 bytes, ds18b20.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ds18b20.o(.constdata)
</UL>
<P><STRONG><a name="[1043080]"></a>Init</STRONG> (ARM, 36 bytes, Stack size 0 bytes, huaiweigprs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1043038]"></a>Read</STRONG> (ARM, 216 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042ff0]"></a>Huawei_CloseShow</STRONG> (ARM, 104 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_CloseShow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042fa8]"></a>ClearNoDisplay</STRONG> (ARM, 152 bytes, Stack size 16 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ClearNoDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[10424f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SeeCGDCONT
<LI><a href="#[1042588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SEEIPCLOSE
<LI><a href="#[1042660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_CLCC
<LI><a href="#[10426f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_DNSR
<LI><a href="#[1042738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_JugeETCPIP
<LI><a href="#[1042780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_IPDR
<LI><a href="#[10427c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SeeDataRead
<LI><a href="#[1042978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_IMEI
<LI><a href="#[1042ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_Reg
<LI><a href="#[1042c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SQ
<LI><a href="#[1042c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SeeCarrier
<LI><a href="#[1042d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SeeTxtOrPdu
<LI><a href="#[1042df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_GetMessage
<LI><a href="#[1042e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_GetCenterNumber
<LI><a href="#[1042ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_GetModermCard
<LI><a href="#[1042f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_GetModermState
<LI><a href="#[1042f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChipID
</UL>

<P><STRONG><a name="[1042f60]"></a>GetChipID</STRONG> (ARM, 172 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetChipID &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042f18]"></a>Huawei_GetModermState</STRONG> (ARM, 232 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Huawei_GetModermState &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042ed0]"></a>Huawei_GetModermCard</STRONG> (ARM, 160 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Huawei_GetModermCard &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042e88]"></a>SeekChar</STRONG> (ARM, 96 bytes, Stack size 8 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[10424f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SeeCGDCONT
<LI><a href="#[1042588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SEEIPCLOSE
<LI><a href="#[1042660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_CLCC
<LI><a href="#[1042738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_JugeETCPIP
<LI><a href="#[1042780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_IPDR
<LI><a href="#[10427c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SeeDataRead
<LI><a href="#[1042ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_Reg
<LI><a href="#[1042c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_SQ
<LI><a href="#[1042df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_GetMessage
<LI><a href="#[1042e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Huawei_GetCenterNumber
</UL>

<P><STRONG><a name="[1042e40]"></a>Huawei_GetCenterNumber</STRONG> (ARM, 304 bytes, Stack size 40 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Huawei_GetCenterNumber &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042df8]"></a>Huawei_GetMessage</STRONG> (ARM, 672 bytes, Stack size 48 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Huawei_GetMessage &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042db0]"></a>Huawei_SetTxtOrPdu</STRONG> (ARM, 216 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_SetTxtOrPdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042d68]"></a>Huawei_SeeTxtOrPdu</STRONG> (ARM, 208 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Huawei_SeeTxtOrPdu &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042d20]"></a>Huawei_MsgSend</STRONG> (ARM, 156 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_MsgSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042cd8]"></a>Huawei_MsgSendData</STRONG> (ARM, 160 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_MsgSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042c90]"></a>Huawei_SeeCarrier</STRONG> (ARM, 244 bytes, Stack size 40 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Huawei_SeeCarrier &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042c48]"></a>Huawei_SQ</STRONG> (ARM, 368 bytes, Stack size 56 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Huawei_SQ &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042c00]"></a>Huawei_DelMsg</STRONG> (ARM, 208 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_DelMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042bb8]"></a>Huawei_Set_Mem</STRONG> (ARM, 132 bytes, Stack size 48 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Huawei_Set_Mem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042b70]"></a>Huawei_MessSet</STRONG> (ARM, 128 bytes, Stack size 40 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Huawei_MessSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042b28]"></a>Huawei_Upadate</STRONG> (ARM, 112 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_Upadate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042ae0]"></a>Huawei_Reg</STRONG> (ARM, 284 bytes, Stack size 40 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Huawei_Reg &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042a98]"></a>Huawei_CLIP</STRONG> (ARM, 112 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_CLIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042a50]"></a>Huawei_ATD</STRONG> (ARM, 320 bytes, Stack size 40 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Huawei_ATD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042a08]"></a>Huawei_Chup</STRONG> (ARM, 116 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_Chup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10429c0]"></a>Huawei_ATA</STRONG> (ARM, 240 bytes, Stack size 40 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Huawei_ATA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042978]"></a>Huawei_IMEI</STRONG> (ARM, 180 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Huawei_IMEI &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042930]"></a>Huawei_CGDCONT</STRONG> (ARM, 236 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_CGDCONT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10428e8]"></a>Huawei_Etcpip</STRONG> (ARM, 404 bytes, Stack size 40 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Huawei_Etcpip
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10428a0]"></a>Huawei_IOMODE</STRONG> (ARM, 108 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_IOMODE
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042858]"></a>Huawei_IPOPENX</STRONG> (ARM, 600 bytes, Stack size 56 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Huawei_IPOPENX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042810]"></a>Huawei_IPSENDX</STRONG> (ARM, 388 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_IPSENDX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10427c8]"></a>Huawei_SeeDataRead</STRONG> (ARM, 276 bytes, Stack size 56 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Huawei_SeeDataRead &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042780]"></a>Huawei_IPDR</STRONG> (ARM, 716 bytes, Stack size 56 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Huawei_IPDR &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042738]"></a>Huawei_JugeETCPIP</STRONG> (ARM, 936 bytes, Stack size 64 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Huawei_JugeETCPIP &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10426f0]"></a>Huawei_DNSR</STRONG> (ARM, 248 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Huawei_DNSR &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10426a8]"></a>Huawei_IPR</STRONG> (ARM, 156 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_IPR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042660]"></a>Huawei_CLCC</STRONG> (ARM, 896 bytes, Stack size 56 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Huawei_CLCC &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042618]"></a>Huawei_IPCLOSE</STRONG> (ARM, 204 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_IPCLOSE
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10425d0]"></a>Huawei_LogOnTCPIP</STRONG> (ARM, 104 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_LogOnTCPIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042588]"></a>Huawei_SEEIPCLOSE</STRONG> (ARM, 408 bytes, Stack size 56 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Huawei_SEEIPCLOSE &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042540]"></a>Huawei_PowerDown</STRONG> (ARM, 72 bytes, Stack size 24 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Huawei_PowerDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10424f8]"></a>Huawei_SeeCGDCONT</STRONG> (ARM, 420 bytes, Stack size 56 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Huawei_SeeCGDCONT &rArr; ClearNoDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[1042e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1042fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[10424b0]"></a>Huawei_SendExtension</STRONG> (ARM, 152 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_SendExtension
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[1042468]"></a>Huawei_SetVolume</STRONG> (ARM, 116 bytes, Stack size 32 bytes, huaiweigprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Huawei_SetVolume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> huaiweigprs.o(.constdata)
</UL>
<P><STRONG><a name="[124f5d0]"></a>Init</STRONG> (ARM, 36 bytes, Stack size 8 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprshard.o(.constdata)
</UL>
<P><STRONG><a name="[124f588]"></a>InitModerm</STRONG> (ARM, 92 bytes, Stack size 16 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InitModerm
</UL>
<BR>[Called By]<UL><LI><a href="#[124f300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp
</UL>

<P><STRONG><a name="[124f540]"></a>ModermCom1</STRONG> (ARM, 980 bytes, Stack size 80 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[124f4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom
</UL>

<P><STRONG><a name="[124f4f8]"></a>ModermCom</STRONG> (ARM, 108 bytes, Stack size 32 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ModermCom &rArr; ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[124f540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom1
</UL>
<BR>[Called By]<UL><LI><a href="#[124f390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBpsAT
<LI><a href="#[124f3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBps
<LI><a href="#[124f420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseShow
<LI><a href="#[124f468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChipID
</UL>

<P><STRONG><a name="[124f4b0]"></a>ClearNoDisplay</STRONG> (ARM, 152 bytes, Stack size 16 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ClearNoDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[124f468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChipID
</UL>

<P><STRONG><a name="[124f468]"></a>GetChipID</STRONG> (ARM, 132 bytes, Stack size 16 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GetChipID &rArr; ModermCom &rArr; ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[124f4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNoDisplay
<LI><a href="#[124f4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom
</UL>
<BR>[Called By]<UL><LI><a href="#[124f348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChipID
</UL>

<P><STRONG><a name="[124f420]"></a>CloseShow</STRONG> (ARM, 36 bytes, Stack size 8 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CloseShow &rArr; ModermCom &rArr; ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[124f4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom
</UL>
<BR>[Called By]<UL><LI><a href="#[124f348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChipID
</UL>

<P><STRONG><a name="[124f3d8]"></a>SetBps</STRONG> (ARM, 88 bytes, Stack size 24 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SetBps &rArr; ModermCom &rArr; ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[124f4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom
</UL>
<BR>[Called By]<UL><LI><a href="#[124f348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChipID
</UL>

<P><STRONG><a name="[124f390]"></a>GetBpsAT</STRONG> (ARM, 36 bytes, Stack size 8 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GetBpsAT &rArr; ModermCom &rArr; ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[124f4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModermCom
</UL>
<BR>[Called By]<UL><LI><a href="#[124f348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChipID
</UL>

<P><STRONG><a name="[124f348]"></a>LookChipID</STRONG> (ARM, 388 bytes, Stack size 40 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = LookChipID &rArr; SetBps &rArr; ModermCom &rArr; ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[124f390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBpsAT
<LI><a href="#[124f3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBps
<LI><a href="#[124f420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseShow
<LI><a href="#[124f468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChipID
</UL>
<BR>[Called By]<UL><LI><a href="#[124f300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp
</UL>

<P><STRONG><a name="[124f300]"></a>PowerUp</STRONG> (ARM, 176 bytes, Stack size 8 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = PowerUp &rArr; LookChipID &rArr; SetBps &rArr; ModermCom &rArr; ModermCom1
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[124f348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChipID
<LI><a href="#[124f588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitModerm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprshard.o(.constdata)
</UL>
<P><STRONG><a name="[124f2b8]"></a>PowerDown</STRONG> (ARM, 80 bytes, Stack size 8 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PowerDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprshard.o(.constdata)
</UL>
<P><STRONG><a name="[124f270]"></a>Read</STRONG> (ARM, 72 bytes, Stack size 32 bytes, gprshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprshard.o(.constdata)
</UL>
<P><STRONG><a name="[124c3a0]"></a>Init</STRONG> (ARM, 320 bytes, Stack size 16 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[124c358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init1
</UL>

<P><STRONG><a name="[124c358]"></a>Init1</STRONG> (ARM, 16 bytes, Stack size 8 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Init1 &rArr; Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[124c3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> less.o(.constdata)
</UL>
<P><STRONG><a name="[124c310]"></a>ReadData</STRONG> (ARM, 48 bytes, Stack size 16 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[124c2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreeData
</UL>

<P><STRONG><a name="[124c2c8]"></a>AgreeData</STRONG> (ARM, 432 bytes, Stack size 32 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[124c310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[124bed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[124c1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configuration
</UL>

<P><STRONG><a name="[124c280]"></a>WriteData</STRONG> (ARM, 48 bytes, Stack size 16 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[124c238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
</UL>

<P><STRONG><a name="[124c238]"></a>SendData</STRONG> (ARM, 196 bytes, Stack size 24 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SendData &rArr; WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[124c280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[124bed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[124c1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configuration
</UL>

<P><STRONG><a name="[124c1f0]"></a>ClsData</STRONG> (ARM, 52 bytes, Stack size 8 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClsData
</UL>
<BR>[Called By]<UL><LI><a href="#[124bed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[124c1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configuration
</UL>

<P><STRONG><a name="[124c1a8]"></a>Configuration</STRONG> (ARM, 468 bytes, Stack size 64 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Configuration &rArr; AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[124c1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsData
<LI><a href="#[124c238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
<LI><a href="#[124c2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreeData
</UL>
<BR>[Called By]<UL><LI><a href="#[124c088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
<LI><a href="#[124c118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[124c160]"></a>Lookfd</STRONG> (ARM, 56 bytes, Stack size 0 bytes, less.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[124c118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[124c118]"></a>Open</STRONG> (ARM, 312 bytes, Stack size 24 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Open &rArr; Configuration &rArr; AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[124c160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lookfd
<LI><a href="#[124c1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[124c0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
</UL>

<P><STRONG><a name="[124c0d0]"></a>Open1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Open1 &rArr; Open &rArr; Configuration &rArr; AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[124c118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> less.o(.constdata)
</UL>
<P><STRONG><a name="[124c088]"></a>Close</STRONG> (ARM, 120 bytes, Stack size 16 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Close &rArr; Configuration &rArr; AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[124c1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[124c040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
</UL>

<P><STRONG><a name="[124c040]"></a>Close1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Close1 &rArr; Close &rArr; Configuration &rArr; AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[124c088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> less.o(.constdata)
</UL>
<P><STRONG><a name="[124bff8]"></a>LookID</STRONG> (ARM, 96 bytes, Stack size 0 bytes, less.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[124bf68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExplainState
<LI><a href="#[124bfb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExplainData
</UL>

<P><STRONG><a name="[124bfb0]"></a>ExplainData</STRONG> (ARM, 232 bytes, Stack size 36 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ExplainData
</UL>
<BR>[Calls]<UL><LI><a href="#[124bff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookID
</UL>
<BR>[Called By]<UL><LI><a href="#[124bed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[124bf68]"></a>ExplainState</STRONG> (ARM, 344 bytes, Stack size 36 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ExplainState
</UL>
<BR>[Calls]<UL><LI><a href="#[124bff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookID
</UL>
<BR>[Called By]<UL><LI><a href="#[124bed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[124bf20]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[124bed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[124bed8]"></a>Read</STRONG> (ARM, 628 bytes, Stack size 32 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Read &rArr; AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[124bf20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
<LI><a href="#[124bf68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExplainState
<LI><a href="#[124bfb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExplainData
<LI><a href="#[124c1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsData
<LI><a href="#[124c238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
<LI><a href="#[124c2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreeData
</UL>
<BR>[Called By]<UL><LI><a href="#[124be90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>

<P><STRONG><a name="[124be90]"></a>Read1</STRONG> (ARM, 80 bytes, Stack size 24 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Read1 &rArr; Read &rArr; AgreeData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[124bed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> less.o(.constdata)
</UL>
<P><STRONG><a name="[124be48]"></a>GetState</STRONG> (ARM, 104 bytes, Stack size 16 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[124be00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState1
</UL>

<P><STRONG><a name="[124be00]"></a>GetState1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, less.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetState1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[124be48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> less.o(.constdata)
</UL>
<P><STRONG><a name="[1249298]"></a>Init</STRONG> (ARM, 124 bytes, Stack size 8 bytes, acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> acc.o(.constdata)
</UL>
<P><STRONG><a name="[1249250]"></a>Open</STRONG> (ARM, 112 bytes, Stack size 16 bytes, acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> acc.o(.constdata)
</UL>
<P><STRONG><a name="[1249208]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> acc.o(.constdata)
</UL>
<P><STRONG><a name="[12491c0]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[1249178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[1249178]"></a>Read</STRONG> (ARM, 256 bytes, Stack size 32 bytes, acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12491c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> acc.o(.constdata)
</UL>
<P><STRONG><a name="[12469c0]"></a>Init</STRONG> (ARM, 84 bytes, Stack size 8 bytes, oil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oil.o(.constdata)
</UL>
<P><STRONG><a name="[1246978]"></a>Open</STRONG> (ARM, 240 bytes, Stack size 32 bytes, oil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oil.o(.constdata)
</UL>
<P><STRONG><a name="[1246930]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, oil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oil.o(.constdata)
</UL>
<P><STRONG><a name="[12468e8]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, oil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[12468a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12468a0]"></a>Read</STRONG> (ARM, 480 bytes, Stack size 40 bytes, oil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12468e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oil.o(.constdata)
</UL>
<P><STRONG><a name="[1243600]"></a>Init</STRONG> (ARM, 76 bytes, Stack size 8 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[12435b8]"></a>Open</STRONG> (ARM, 516 bytes, Stack size 24 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[1243570]"></a>Close</STRONG> (ARM, 156 bytes, Stack size 16 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[1243528]"></a>Read</STRONG> (ARM, 124 bytes, Stack size 24 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[12434e0]"></a>GetState</STRONG> (ARM, 200 bytes, Stack size 16 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[1243498]"></a>GetSi</STRONG> (ARM, 60 bytes, Stack size 16 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetSi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[1243450]"></a>Get</STRONG> (ARM, 132 bytes, Stack size 24 bytes, sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[1243408]"></a>GetPar2ID</STRONG> (ARM, 72 bytes, Stack size 0 bytes, sensor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[12433c0]"></a>GetID2Par</STRONG> (ARM, 80 bytes, Stack size 0 bytes, sensor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sensor.o(.constdata)
</UL>
<P><STRONG><a name="[12ef840]"></a>Init</STRONG> (ARM, 232 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.constdata)
</UL>
<P><STRONG><a name="[12ef7f8]"></a>Open</STRONG> (ARM, 140 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.constdata)
</UL>
<P><STRONG><a name="[12ef7b0]"></a>Close</STRONG> (ARM, 152 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.constdata)
</UL>
<P><STRONG><a name="[12ef768]"></a>SeekChar</STRONG> (ARM, 96 bytes, Stack size 8 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[12ef4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_LocationTrue
<LI><a href="#[12ef528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_GetTime
<LI><a href="#[12ef570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Lat
<LI><a href="#[12ef5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Long
<LI><a href="#[12ef600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Speed
<LI><a href="#[12ef648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Angle
<LI><a href="#[12ef6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPGGA_StarNumber
<LI><a href="#[12ef720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPGGA_Height
</UL>

<P><STRONG><a name="[12ef720]"></a>Parse_GPGGA_Height</STRONG> (ARM, 232 bytes, Stack size 40 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Parse_GPGGA_Height &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12ef768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[12ef690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPGGA
</UL>

<P><STRONG><a name="[12ef6d8]"></a>Parse_GPGGA_StarNumber</STRONG> (ARM, 196 bytes, Stack size 32 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Parse_GPGGA_StarNumber &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12ef768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[12ef690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPGGA
</UL>

<P><STRONG><a name="[12ef690]"></a>Parse_GPGGA</STRONG> (ARM, 92 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Parse_GPGGA &rArr; Parse_GPGGA_Height &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12ef6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPGGA_StarNumber
<LI><a href="#[12ef720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPGGA_Height
</UL>
<BR>[Called By]<UL><LI><a href="#[12ef408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsCommInput
</UL>

<P><STRONG><a name="[12ef648]"></a>Parse_GPRMC_Angle</STRONG> (ARM, 192 bytes, Stack size 32 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Parse_GPRMC_Angle &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12ef768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[12ef498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC
</UL>

<P><STRONG><a name="[12ef600]"></a>Parse_GPRMC_Speed</STRONG> (ARM, 216 bytes, Stack size 32 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = Parse_GPRMC_Speed &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12ef768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12ef498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC
</UL>

<P><STRONG><a name="[12ef5b8]"></a>Parse_GPRMC_Long</STRONG> (ARM, 356 bytes, Stack size 56 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = Parse_GPRMC_Long &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12ef768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12ef498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC
</UL>

<P><STRONG><a name="[12ef570]"></a>Parse_GPRMC_Lat</STRONG> (ARM, 340 bytes, Stack size 56 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = Parse_GPRMC_Lat &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12ef768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12ef498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC
</UL>

<P><STRONG><a name="[12ef528]"></a>Parse_GPRMC_GetTime</STRONG> (ARM, 356 bytes, Stack size 32 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Parse_GPRMC_GetTime &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12ef768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[12ef498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC
</UL>

<P><STRONG><a name="[12ef4e0]"></a>Parse_GPRMC_LocationTrue</STRONG> (ARM, 112 bytes, Stack size 20 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Parse_GPRMC_LocationTrue &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12ef768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekChar
</UL>
<BR>[Called By]<UL><LI><a href="#[12ef498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC
</UL>

<P><STRONG><a name="[12ef498]"></a>Parse_GPRMC</STRONG> (ARM, 320 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = Parse_GPRMC &rArr; Parse_GPRMC_Lat &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12ef4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_LocationTrue
<LI><a href="#[12ef528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_GetTime
<LI><a href="#[12ef570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Lat
<LI><a href="#[12ef5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Long
<LI><a href="#[12ef600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Speed
<LI><a href="#[12ef648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC_Angle
</UL>
<BR>[Called By]<UL><LI><a href="#[12ef408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsCommInput
</UL>

<P><STRONG><a name="[12ef450]"></a>JugeOrder</STRONG> (ARM, 512 bytes, Stack size 40 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = JugeOrder &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[1872c88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memchr (via Veneer)
<LI><a href="#[1872e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12ef408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsCommInput
</UL>

<P><STRONG><a name="[12ef408]"></a>GpsCommInput</STRONG> (ARM, 272 bytes, Stack size 24 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GpsCommInput &rArr; Parse_GPRMC &rArr; Parse_GPRMC_Lat &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12ef450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeOrder
<LI><a href="#[12ef498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPRMC
<LI><a href="#[12ef690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse_GPGGA
</UL>
<BR>[Called By]<UL><LI><a href="#[12ef3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12ef3c0]"></a>Read</STRONG> (ARM, 164 bytes, Stack size 32 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = Read &rArr; GpsCommInput &rArr; Parse_GPRMC &rArr; Parse_GPRMC_Lat &rArr; SeekChar
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12ef408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsCommInput
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.constdata)
</UL>
<P><STRONG><a name="[12ef378]"></a>GetState</STRONG> (ARM, 84 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetState &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.constdata)
</UL>
<P><STRONG><a name="[12ec5e8]"></a>Init</STRONG> (ARM, 80 bytes, Stack size 8 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12ec5a0]"></a>Open</STRONG> (ARM, 188 bytes, Stack size 24 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12ec558]"></a>Asc2Int16</STRONG> (ARM, 124 bytes, Stack size 16 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Asc2Int16
</UL>
<BR>[Called By]<UL><LI><a href="#[12ec510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommType2App
</UL>

<P><STRONG><a name="[12ec510]"></a>CommType2App</STRONG> (ARM, 512 bytes, Stack size 40 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CommType2App &rArr; Asc2Int16
</UL>
<BR>[Calls]<UL><LI><a href="#[12ec558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2Int16
</UL>
<BR>[Called By]<UL><LI><a href="#[12ec480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Agree
</UL>

<P><STRONG><a name="[12ec4c8]"></a>AgreeData</STRONG> (ARM, 236 bytes, Stack size 32 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AgreeData
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[12ec480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Agree
</UL>

<P><STRONG><a name="[12ec480]"></a>Agree</STRONG> (ARM, 692 bytes, Stack size 544 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = Agree &rArr; CommType2App &rArr; Asc2Int16
</UL>
<BR>[Calls]<UL><LI><a href="#[12ec4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreeData
<LI><a href="#[12ec510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommType2App
</UL>
<BR>[Called By]<UL><LI><a href="#[12ec438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12ec438]"></a>Read</STRONG> (ARM, 304 bytes, Stack size 40 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = Read &rArr; Agree &rArr; CommType2App &rArr; Asc2Int16
</UL>
<BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[12ec480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Agree
</UL>
<BR>[Called By]<UL><LI><a href="#[12ec3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>

<P><STRONG><a name="[12ec3f0]"></a>Read1</STRONG> (ARM, 80 bytes, Stack size 24 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = Read1 &rArr; Read &rArr; Agree &rArr; CommType2App &rArr; Asc2Int16
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12ec438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12ec3a8]"></a>Close</STRONG> (ARM, 88 bytes, Stack size 16 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12ec360]"></a>Send</STRONG> (ARM, 256 bytes, Stack size 32 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Send
</UL>
<BR>[Called By]<UL><LI><a href="#[12ec120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_ConInfor
<LI><a href="#[12ec168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_HostSoft
<LI><a href="#[12ec1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_InitOver
<LI><a href="#[12ec1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_InitStart
<LI><a href="#[12ec240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_Phone
<LI><a href="#[12ec288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_SysInfor
<LI><a href="#[12ec2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_DeliverCentr
<LI><a href="#[12ec318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_Answer
</UL>

<P><STRONG><a name="[12ec318]"></a>Host_Answer</STRONG> (ARM, 68 bytes, Stack size 24 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Host_Answer &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12ec360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12ec2d0]"></a>Host_DeliverCentr</STRONG> (ARM, 48 bytes, Stack size 16 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Host_DeliverCentr &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12ec360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12ec288]"></a>Host_SysInfor</STRONG> (ARM, 500 bytes, Stack size 40 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Host_SysInfor &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12ec360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12ec240]"></a>Host_Phone</STRONG> (ARM, 140 bytes, Stack size 48 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Host_Phone &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12ec360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12ec1f8]"></a>Host_InitStart</STRONG> (ARM, 40 bytes, Stack size 16 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Host_InitStart &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12ec360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12ec1b0]"></a>Host_InitOver</STRONG> (ARM, 40 bytes, Stack size 16 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Host_InitOver &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12ec360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12ec168]"></a>Host_HostSoft</STRONG> (ARM, 56 bytes, Stack size 24 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Host_HostSoft &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12ec360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12ec120]"></a>Host_ConInfor</STRONG> (ARM, 164 bytes, Stack size 120 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Host_ConInfor &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12ec360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12ec0d8]"></a>Int162Asc</STRONG> (ARM, 116 bytes, Stack size 16 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Int162Asc
</UL>
<BR>[Called By]<UL><LI><a href="#[12ec090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App2CommType
</UL>

<P><STRONG><a name="[12ec090]"></a>App2CommType</STRONG> (ARM, 432 bytes, Stack size 24 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = App2CommType &rArr; Int162Asc
</UL>
<BR>[Calls]<UL><LI><a href="#[12ec0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int162Asc
</UL>
<BR>[Called By]<UL><LI><a href="#[12ec048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_ParAnswer
</UL>

<P><STRONG><a name="[12ec048]"></a>Host_ParAnswer</STRONG> (ARM, 248 bytes, Stack size 544 bytes, display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = Host_ParAnswer &rArr; App2CommType &rArr; Int162Asc
</UL>
<BR>[Calls]<UL><LI><a href="#[12ec090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App2CommType
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.constdata)
</UL>
<P><STRONG><a name="[12e9350]"></a>Init</STRONG> (ARM, 172 bytes, Stack size 8 bytes, temperture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temperture.o(.constdata)
</UL>
<P><STRONG><a name="[12e9308]"></a>Open</STRONG> (ARM, 492 bytes, Stack size 24 bytes, temperture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temperture.o(.constdata)
</UL>
<P><STRONG><a name="[12e92c0]"></a>Close</STRONG> (ARM, 144 bytes, Stack size 16 bytes, temperture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temperture.o(.constdata)
</UL>
<P><STRONG><a name="[12e9278]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, temperture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[12e9230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12e9230]"></a>Read</STRONG> (ARM, 272 bytes, Stack size 40 bytes, temperture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12e9278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temperture.o(.constdata)
</UL>
<P><STRONG><a name="[12e91e8]"></a>GetState</STRONG> (ARM, 116 bytes, Stack size 16 bytes, temperture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetState &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temperture.o(.constdata)
</UL>
<P><STRONG><a name="[12e63d0]"></a>Init</STRONG> (ARM, 132 bytes, Stack size 8 bytes, mileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mileage.o(.constdata)
</UL>
<P><STRONG><a name="[12e6388]"></a>Open</STRONG> (ARM, 260 bytes, Stack size 16 bytes, mileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mileage.o(.constdata)
</UL>
<P><STRONG><a name="[12e6340]"></a>Close</STRONG> (ARM, 116 bytes, Stack size 16 bytes, mileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mileage.o(.constdata)
</UL>
<P><STRONG><a name="[12e62f8]"></a>CalcMil</STRONG> (ARM, 1168 bytes, Stack size 240 bytes, mileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = CalcMil &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[186eb80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[186ee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[186f2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[186f658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[186f8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[186fb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[1870318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[1870940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1870af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1870d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[18712a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1871788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[12e6268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12e62b0]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, mileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[12e6268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12e6268]"></a>Read</STRONG> (ARM, 848 bytes, Stack size 64 bytes, mileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = Read &rArr; CalcMil &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12e62b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
<LI><a href="#[12e62f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[1870000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mileage.o(.constdata)
</UL>
<P><STRONG><a name="[12e3428]"></a>Init</STRONG> (ARM, 120 bytes, Stack size 8 bytes, gprstzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprstzxy.o(.constdata)
</UL>
<P><STRONG><a name="[12e33e0]"></a>Open</STRONG> (ARM, 196 bytes, Stack size 16 bytes, gprstzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprstzxy.o(.constdata)
</UL>
<P><STRONG><a name="[12e3398]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, gprstzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprstzxy.o(.constdata)
</UL>
<P><STRONG><a name="[12e3350]"></a>Read</STRONG> (ARM, 212 bytes, Stack size 32 bytes, gprstzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprstzxy.o(.constdata)
</UL>
<P><STRONG><a name="[12e09d0]"></a>Init</STRONG> (ARM, 120 bytes, Stack size 8 bytes, uarttzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uarttzxy.o(.constdata)
</UL>
<P><STRONG><a name="[12e0988]"></a>Open</STRONG> (ARM, 268 bytes, Stack size 24 bytes, uarttzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uarttzxy.o(.constdata)
</UL>
<P><STRONG><a name="[12e0940]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, uarttzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uarttzxy.o(.constdata)
</UL>
<P><STRONG><a name="[12e08f8]"></a>Agree</STRONG> (ARM, 252 bytes, Stack size 24 bytes, uarttzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Agree
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[12e0868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12e08b0]"></a>Send</STRONG> (ARM, 140 bytes, Stack size 24 bytes, uarttzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Send
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[12e0868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12e0868]"></a>Read</STRONG> (ARM, 188 bytes, Stack size 32 bytes, uarttzxy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12e08b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
<LI><a href="#[12e08f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Agree
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uarttzxy.o(.constdata)
</UL>
<P><STRONG><a name="[12bdbf0]"></a>Init</STRONG> (ARM, 112 bytes, Stack size 8 bytes, arealrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arealrm.o(.constdata)
</UL>
<P><STRONG><a name="[12bdba8]"></a>Open</STRONG> (ARM, 356 bytes, Stack size 24 bytes, arealrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arealrm.o(.constdata)
</UL>
<P><STRONG><a name="[12bdb60]"></a>Close</STRONG> (ARM, 124 bytes, Stack size 16 bytes, arealrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arealrm.o(.constdata)
</UL>
<P><STRONG><a name="[12bdb18]"></a>CalcMil</STRONG> (ARM, 1144 bytes, Stack size 232 bytes, arealrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = CalcMil &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[186eb80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[186ee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[186f2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[186f658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[186f8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[186fb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[1870318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[1870940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1870af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1870d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[18712a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1871788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[12bdad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeAreacirc
</UL>

<P><STRONG><a name="[12bdad0]"></a>JugeAreacirc</STRONG> (ARM, 124 bytes, Stack size 48 bytes, arealrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = JugeAreacirc &rArr; CalcMil &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[12bdb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcMil
<LI><a href="#[1870000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[12bda40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12bda88]"></a>JugeArearect</STRONG> (ARM, 116 bytes, Stack size 20 bytes, arealrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = JugeArearect
</UL>
<BR>[Called By]<UL><LI><a href="#[12bda40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12bda40]"></a>Read</STRONG> (ARM, 264 bytes, Stack size 40 bytes, arealrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = Read &rArr; JugeAreacirc &rArr; CalcMil &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12bda88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeArearect
<LI><a href="#[12bdad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeAreacirc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arealrm.o(.constdata)
</UL>
<P><STRONG><a name="[12bb108]"></a>Init</STRONG> (ARM, 84 bytes, Stack size 8 bytes, help.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> help.o(.constdata)
</UL>
<P><STRONG><a name="[12bb0c0]"></a>Open</STRONG> (ARM, 112 bytes, Stack size 16 bytes, help.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> help.o(.constdata)
</UL>
<P><STRONG><a name="[12bb078]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, help.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> help.o(.constdata)
</UL>
<P><STRONG><a name="[12bb030]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, help.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[12bafe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[12bafe8]"></a>Read</STRONG> (ARM, 224 bytes, Stack size 32 bytes, help.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12bb030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> help.o(.constdata)
</UL>
<P><STRONG><a name="[12b8b40]"></a>Init</STRONG> (ARM, 124 bytes, Stack size 8 bytes, onoroff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> onoroff.o(.constdata)
</UL>
<P><STRONG><a name="[12b8af8]"></a>Open</STRONG> (ARM, 112 bytes, Stack size 16 bytes, onoroff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> onoroff.o(.constdata)
</UL>
<P><STRONG><a name="[12b8ab0]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, onoroff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> onoroff.o(.constdata)
</UL>
<P><STRONG><a name="[12b8a68]"></a>Read</STRONG> (ARM, 204 bytes, Stack size 24 bytes, onoroff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> onoroff.o(.constdata)
</UL>
<P><STRONG><a name="[12b63b0]"></a>Init</STRONG> (ARM, 84 bytes, Stack size 8 bytes, adc1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adc1.o(.constdata)
</UL>
<P><STRONG><a name="[12b6368]"></a>Open</STRONG> (ARM, 172 bytes, Stack size 32 bytes, adc1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adc1.o(.constdata)
</UL>
<P><STRONG><a name="[12b6320]"></a>Close</STRONG> (ARM, 92 bytes, Stack size 16 bytes, adc1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adc1.o(.constdata)
</UL>
<P><STRONG><a name="[12b62d8]"></a>Read</STRONG> (ARM, 184 bytes, Stack size 32 bytes, adc1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> adc1.o(.constdata)
</UL>
<P><STRONG><a name="[12b3c28]"></a>ClsArray</STRONG> (ARM, 36 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b3328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder1
<LI><a href="#[12b33b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWriteHeadTail
<LI><a href="#[12b3448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder1
<LI><a href="#[12b36d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12b3760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookFileNameAgain
<LI><a href="#[12b38c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
<LI><a href="#[12b3958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
<LI><a href="#[12b3be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[12b3be0]"></a>Init</STRONG> (ARM, 44 bytes, Stack size 8 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Init
</UL>
<BR>[Calls]<UL><LI><a href="#[12b3c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
</UL>
<BR>[Called By]<UL><LI><a href="#[12b3b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init1
</UL>

<P><STRONG><a name="[12b3b98]"></a>Init1</STRONG> (ARM, 56 bytes, Stack size 8 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init1 &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[12b3be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b3b50]"></a>Crc</STRONG> (ARM, 112 bytes, Stack size 16 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Crc
</UL>
<BR>[Called By]<UL><LI><a href="#[12b33b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWriteHeadTail
<LI><a href="#[12b3a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecode
<LI><a href="#[12b3b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecode
</UL>

<P><STRONG><a name="[12b3b08]"></a>WriteRecode</STRONG> (ARM, 236 bytes, Stack size 32 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[12b3b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Crc
</UL>
<BR>[Called By]<UL><LI><a href="#[12b33b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWriteHeadTail
<LI><a href="#[12b38c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
<LI><a href="#[12b3958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
<LI><a href="#[12b3a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecode
</UL>

<P><STRONG><a name="[12b3ac0]"></a>MoveByte</STRONG> (ARM, 36 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b30e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPor
<LI><a href="#[12b3328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder1
<LI><a href="#[12b3448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder1
<LI><a href="#[12b36d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12b3760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookFileNameAgain
<LI><a href="#[12b37a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileInfor
<LI><a href="#[12b38c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
<LI><a href="#[12b3958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
</UL>

<P><STRONG><a name="[12b3a78]"></a>ReadRecode</STRONG> (ARM, 484 bytes, Stack size 40 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[12b3b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecode
<LI><a href="#[12b3b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Crc
</UL>
<BR>[Called By]<UL><LI><a href="#[12b37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHeadTailPoint
<LI><a href="#[12b39e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookSpace
</UL>

<P><STRONG><a name="[12b3a30]"></a>CompareBuf</STRONG> (ARM, 64 bytes, Stack size 4 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CompareBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[12b3448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder1
<LI><a href="#[12b3760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookFileNameAgain
<LI><a href="#[12b39e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookSpace
</UL>

<P><STRONG><a name="[12b39e8]"></a>LookSpace</STRONG> (ARM, 312 bytes, Stack size 56 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LookSpace &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[12b3a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareBuf
<LI><a href="#[12b3a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecode
</UL>
<BR>[Called By]<UL><LI><a href="#[12b36d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12b38c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
<LI><a href="#[12b3958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
</UL>

<P><STRONG><a name="[12b39a0]"></a>LookChip</STRONG> (ARM, 56 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b36d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
<LI><a href="#[12b38c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
<LI><a href="#[12b3958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
</UL>

<P><STRONG><a name="[12b3958]"></a>CreateBin</STRONG> (ARM, 448 bytes, Stack size 80 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = CreateBin &rArr; LookSpace &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[12b39a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChip
<LI><a href="#[12b39e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookSpace
<LI><a href="#[12b3ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[12b3b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecode
<LI><a href="#[12b3c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[1872e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[18730f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[12b3910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin1
</UL>

<P><STRONG><a name="[12b3910]"></a>CreateBin1</STRONG> (ARM, 76 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = CreateBin1 &rArr; CreateBin &rArr; LookSpace &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12b3958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b38c8]"></a>CreateRecoder</STRONG> (ARM, 584 bytes, Stack size 112 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CreateRecoder &rArr; LookSpace &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[12b39a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChip
<LI><a href="#[12b39e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookSpace
<LI><a href="#[12b3ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[12b3b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecode
<LI><a href="#[12b3c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[1872e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[18730f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[12b3880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder1
</UL>

<P><STRONG><a name="[12b3880]"></a>CreateRecoder1</STRONG> (ARM, 92 bytes, Stack size 32 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = CreateRecoder1 &rArr; CreateRecoder &rArr; LookSpace &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12b38c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateRecoder
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b3838]"></a>LookHeadTailFF</STRONG> (ARM, 220 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LookHeadTailFF
</UL>
<BR>[Called By]<UL><LI><a href="#[12b33b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWriteHeadTail
<LI><a href="#[12b37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHeadTailPoint
</UL>

<P><STRONG><a name="[12b37f0]"></a>GetHeadTailPoint</STRONG> (ARM, 312 bytes, Stack size 40 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GetHeadTailPoint &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[12b3838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookHeadTailFF
<LI><a href="#[12b3a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecode
</UL>
<BR>[Called By]<UL><LI><a href="#[12b37a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileInfor
</UL>

<P><STRONG><a name="[12b37a8]"></a>GetFileInfor</STRONG> (ARM, 280 bytes, Stack size 16 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GetFileInfor &rArr; GetHeadTailPoint &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[12b37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHeadTailPoint
<LI><a href="#[12b3ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[12b36d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[12b3760]"></a>LookFileNameAgain</STRONG> (ARM, 212 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LookFileNameAgain &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[12b3a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareBuf
<LI><a href="#[12b3ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[12b3c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[1872e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12b36d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[12b3718]"></a>LookFileBufSpace</STRONG> (ARM, 68 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b36d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[12b36d0]"></a>Open</STRONG> (ARM, 300 bytes, Stack size 72 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Open &rArr; GetFileInfor &rArr; GetHeadTailPoint &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[12b3718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookFileBufSpace
<LI><a href="#[12b3760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookFileNameAgain
<LI><a href="#[12b37a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileInfor
<LI><a href="#[12b39a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookChip
<LI><a href="#[12b39e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookSpace
<LI><a href="#[12b3ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[12b3c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[1872e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12b3688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
</UL>

<P><STRONG><a name="[12b3688]"></a>Open1</STRONG> (ARM, 76 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Open1 &rArr; Open &rArr; GetFileInfor &rArr; GetHeadTailPoint &rArr; ReadRecode &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12b36d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b3640]"></a>Close</STRONG> (ARM, 32 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b35f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close1
</UL>

<P><STRONG><a name="[12b35f8]"></a>Close1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12b3640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b35b0]"></a>ReadBin</STRONG> (ARM, 232 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadBin
</UL>
<BR>[Called By]<UL><LI><a href="#[12b3568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBin1
</UL>

<P><STRONG><a name="[12b3568]"></a>ReadBin1</STRONG> (ARM, 88 bytes, Stack size 32 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ReadBin1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12b35b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b3520]"></a>WriteBin</STRONG> (ARM, 236 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteBin
</UL>
<BR>[Called By]<UL><LI><a href="#[12b34d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBin1
</UL>

<P><STRONG><a name="[12b34d8]"></a>WriteBin1</STRONG> (ARM, 88 bytes, Stack size 32 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WriteBin1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12b3520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b3490]"></a>GetJlNum</STRONG> (ARM, 188 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b3298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJlNum1
<LI><a href="#[12b3328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder1
<LI><a href="#[12b3448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder1
</UL>

<P><STRONG><a name="[12b3448]"></a>ReadRecoder1</STRONG> (ARM, 1788 bytes, Stack size 48 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = ReadRecoder1 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[12b3490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJlNum
<LI><a href="#[12b3a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareBuf
<LI><a href="#[12b3ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[12b3c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12b3400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder2
</UL>

<P><STRONG><a name="[12b3400]"></a>ReadRecoder2</STRONG> (ARM, 84 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = ReadRecoder2 &rArr; ReadRecoder1 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12b3448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRecoder1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b33b8]"></a>fWriteHeadTail</STRONG> (ARM, 620 bytes, Stack size 40 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = fWriteHeadTail &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[12b3838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookHeadTailFF
<LI><a href="#[12b3b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecode
<LI><a href="#[12b3b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Crc
<LI><a href="#[12b3c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[1873560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[12b3370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateHeadTailPoint
</UL>

<P><STRONG><a name="[12b3370]"></a>UpdateHeadTailPoint</STRONG> (ARM, 328 bytes, Stack size 32 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = UpdateHeadTailPoint &rArr; fWriteHeadTail &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[12b33b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWriteHeadTail
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12b3328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder1
</UL>

<P><STRONG><a name="[12b3328]"></a>WriteRecoder1</STRONG> (ARM, 1352 bytes, Stack size 56 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = WriteRecoder1 &rArr; UpdateHeadTailPoint &rArr; fWriteHeadTail &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[12b3370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateHeadTailPoint
<LI><a href="#[12b3490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJlNum
<LI><a href="#[12b3ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
<LI><a href="#[12b3c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClsArray
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12b32e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder2
</UL>

<P><STRONG><a name="[12b32e0]"></a>WriteRecoder2</STRONG> (ARM, 84 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = WriteRecoder2 &rArr; WriteRecoder1 &rArr; UpdateHeadTailPoint &rArr; fWriteHeadTail &rArr; WriteRecode &rArr; Crc
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12b3328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRecoder1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b3298]"></a>GetJlNum1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetJlNum1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12b3490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJlNum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b3250]"></a>Seek</STRONG> (ARM, 12 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b3208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek1
</UL>

<P><STRONG><a name="[12b3208]"></a>Seek1</STRONG> (ARM, 88 bytes, Stack size 32 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Seek1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12b3250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b31c0]"></a>SeekSize</STRONG> (ARM, 36 bytes, Stack size 16 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SeekSize
</UL>
<BR>[Called By]<UL><LI><a href="#[12b3178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekSize1
</UL>

<P><STRONG><a name="[12b3178]"></a>SeekSize1</STRONG> (ARM, 108 bytes, Stack size 64 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SeekSize1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12b31c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b3130]"></a>ReadHeadTail</STRONG> (ARM, 120 bytes, Stack size 24 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ReadHeadTail &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b30e8]"></a>ReadPor</STRONG> (ARM, 84 bytes, Stack size 16 bytes, _rwfile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ReadPor &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[12b3ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b30a0]"></a>GetPointNum</STRONG> (ARM, 136 bytes, Stack size 0 bytes, _rwfile.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _rwfile.o(.constdata)
</UL>
<P><STRONG><a name="[12b0748]"></a>Task</STRONG> (ARM, 456 bytes, Stack size 40 bytes, sensorcontr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>

<P><STRONG><a name="[12b0700]"></a>Init</STRONG> (ARM, 156 bytes, Stack size 8 bytes, sensorcontr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensorcontr.o(.constdata)
</UL>
<P><STRONG><a name="[12b06b8]"></a>Open</STRONG> (ARM, 248 bytes, Stack size 24 bytes, sensorcontr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensorcontr.o(.constdata)
</UL>
<P><STRONG><a name="[12b0670]"></a>Close</STRONG> (ARM, 80 bytes, Stack size 16 bytes, sensorcontr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensorcontr.o(.constdata)
</UL>
<P><STRONG><a name="[145c148]"></a>OperPhone</STRONG> (ARM, 544 bytes, Stack size 40 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[145bc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[145c100]"></a>OperMessage</STRONG> (ARM, 676 bytes, Stack size 440 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[145bc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[145c0b8]"></a>InitGprs</STRONG> (ARM, 400 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InitGprs
</UL>
<BR>[Called By]<UL><LI><a href="#[145bad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGprs1
<LI><a href="#[145c028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpIP
</UL>

<P><STRONG><a name="[145c070]"></a>CloseIP</STRONG> (ARM, 712 bytes, Stack size 80 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CloseIP
</UL>
<BR>[Called By]<UL><LI><a href="#[145b800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseIP1
<LI><a href="#[145be78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys
<LI><a href="#[145c028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpIP
</UL>

<P><STRONG><a name="[145c028]"></a>BackUpIP</STRONG> (ARM, 368 bytes, Stack size 40 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145c070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseIP
<LI><a href="#[145c0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGprs
</UL>
<BR>[Called By]<UL><LI><a href="#[145be30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpSys
</UL>

<P><STRONG><a name="[145bfe0]"></a>InitPhone</STRONG> (ARM, 76 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InitPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[145bb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhone1
<LI><a href="#[145be30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpSys
</UL>

<P><STRONG><a name="[145bf98]"></a>InitMessage</STRONG> (ARM, 240 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InitMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[145bb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMessage1
<LI><a href="#[145be30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpSys
</UL>

<P><STRONG><a name="[145bf50]"></a>InitSys</STRONG> (ARM, 240 bytes, Stack size 40 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitSys
</UL>
<BR>[Called By]<UL><LI><a href="#[145bba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSys1
<LI><a href="#[145be30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpSys
</UL>

<P><STRONG><a name="[145bf08]"></a>ClosePhone</STRONG> (ARM, 20 bytes, Stack size 0 bytes, gprs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[145b770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClosePhone1
<LI><a href="#[145be78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys
</UL>

<P><STRONG><a name="[145bec0]"></a>CloseMessage</STRONG> (ARM, 84 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CloseMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[145b7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMessage1
<LI><a href="#[145be78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys
</UL>

<P><STRONG><a name="[145be78]"></a>CloseSys</STRONG> (ARM, 60 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CloseSys &rArr; CloseIP
</UL>
<BR>[Calls]<UL><LI><a href="#[145bec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMessage
<LI><a href="#[145bf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClosePhone
<LI><a href="#[145c070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseIP
</UL>
<BR>[Called By]<UL><LI><a href="#[145b848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys1
<LI><a href="#[145be30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpSys
</UL>

<P><STRONG><a name="[145be30]"></a>BackUpSys</STRONG> (ARM, 296 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145be78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys
<LI><a href="#[145bf50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSys
<LI><a href="#[145bf98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMessage
<LI><a href="#[145bfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhone
<LI><a href="#[145c028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpIP
</UL>
<BR>[Called By]<UL><LI><a href="#[145bc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[145bde8]"></a>JugeMessage</STRONG> (ARM, 132 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[145bc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[145bda0]"></a>JugeIPData</STRONG> (ARM, 284 bytes, Stack size 24 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[145bc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[145bd58]"></a>SendIP</STRONG> (ARM, 220 bytes, Stack size 40 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SendIP
</UL>
<BR>[Called By]<UL><LI><a href="#[145b068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendIP1
<LI><a href="#[145bcc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperIPData
</UL>

<P><STRONG><a name="[145bd10]"></a>GetTimeAdd</STRONG> (ARM, 212 bytes, Stack size 24 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[145bcc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperIPData
</UL>

<P><STRONG><a name="[145bcc8]"></a>OperIPData</STRONG> (ARM, 1256 bytes, Stack size 80 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145bd10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
<LI><a href="#[145bd58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendIP
</UL>
<BR>[Called By]<UL><LI><a href="#[145bc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[145bc80]"></a>JugeSys</STRONG> (ARM, 384 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[145bc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[145bc38]"></a>Task</STRONG> (ARM, 476 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[145bc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeSys
<LI><a href="#[145bcc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperIPData
<LI><a href="#[145bda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeIPData
<LI><a href="#[145bde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeMessage
<LI><a href="#[145be30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackUpSys
<LI><a href="#[145c100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperMessage
<LI><a href="#[145c148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperPhone
</UL>

<P><STRONG><a name="[145bbf0]"></a>Init</STRONG> (ARM, 384 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145bba8]"></a>InitSys1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitSys1 &rArr; InitSys
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145bf50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSys
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145bb60]"></a>InitMessage1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InitMessage1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145bf98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145bb18]"></a>InitPhone1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InitPhone1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145bfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145bad0]"></a>InitGprs1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InitGprs1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145c0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGprs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145ba88]"></a>OpenSys</STRONG> (ARM, 72 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OpenSys
</UL>
<BR>[Called By]<UL><LI><a href="#[145ba40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSys1
</UL>

<P><STRONG><a name="[145ba40]"></a>OpenSys1</STRONG> (ARM, 100 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OpenSys1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145ba88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSys
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b9f8]"></a>OpenMessage</STRONG> (ARM, 72 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OpenMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[145b9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessage1
</UL>

<P><STRONG><a name="[145b9b0]"></a>OpenMessage1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OpenMessage1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b968]"></a>OpenIP</STRONG> (ARM, 500 bytes, Stack size 48 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OpenIP
</UL>
<BR>[Called By]<UL><LI><a href="#[145b920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenIP1
</UL>

<P><STRONG><a name="[145b920]"></a>OpenIP1</STRONG> (ARM, 80 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = OpenIP1 &rArr; OpenIP
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b8d8]"></a>OpenPhone</STRONG> (ARM, 72 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OpenPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[145b890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenPhone1
</UL>

<P><STRONG><a name="[145b890]"></a>OpenPhone1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OpenPhone1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenPhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b848]"></a>CloseSys1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CloseSys1 &rArr; CloseSys &rArr; CloseIP
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145be78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSys
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b800]"></a>CloseIP1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CloseIP1 &rArr; CloseIP
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145c070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b7b8]"></a>CloseMessage1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CloseMessage1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145bec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b770]"></a>ClosePhone1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ClosePhone1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145bf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClosePhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b728]"></a>GetSysState</STRONG> (ARM, 72 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetSysState
</UL>
<BR>[Called By]<UL><LI><a href="#[145b6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysState1
</UL>

<P><STRONG><a name="[145b6e0]"></a>GetSysState1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetSysState1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b698]"></a>GetMessageState</STRONG> (ARM, 72 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetMessageState
</UL>
<BR>[Called By]<UL><LI><a href="#[145b650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageState1
</UL>

<P><STRONG><a name="[145b650]"></a>GetMessageState1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetMessageState1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b608]"></a>GetPhoneState</STRONG> (ARM, 72 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetPhoneState
</UL>
<BR>[Called By]<UL><LI><a href="#[145b5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneState1
</UL>

<P><STRONG><a name="[145b5c0]"></a>GetPhoneState1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetPhoneState1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b578]"></a>GetIPState</STRONG> (ARM, 132 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetIPState
</UL>
<BR>[Called By]<UL><LI><a href="#[145b530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIPState1
</UL>

<P><STRONG><a name="[145b530]"></a>GetIPState1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetIPState1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIPState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b4e8]"></a>GetIpPro</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetIpPro
</UL>
<BR>[Called By]<UL><LI><a href="#[145b4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIpPro1
</UL>

<P><STRONG><a name="[145b4a0]"></a>GetIpPro1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetIpPro1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIpPro
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b458]"></a>DNSRIP</STRONG> (ARM, 104 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DNSRIP
</UL>
<BR>[Called By]<UL><LI><a href="#[145b410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSRIP1
</UL>

<P><STRONG><a name="[145b410]"></a>DNSRIP1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DNSRIP1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSRIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b3c8]"></a>ReadMessage</STRONG> (ARM, 196 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[145b380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMessage1
</UL>

<P><STRONG><a name="[145b380]"></a>ReadMessage1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ReadMessage1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b338]"></a>ReadIP</STRONG> (ARM, 152 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadIP
</UL>
<BR>[Called By]<UL><LI><a href="#[145b2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadIP1
</UL>

<P><STRONG><a name="[145b2f0]"></a>ReadIP1</STRONG> (ARM, 80 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ReadIP1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b2a8]"></a>ReadPhone</STRONG> (ARM, 124 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[145b260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPhone1
</UL>

<P><STRONG><a name="[145b260]"></a>ReadPhone1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ReadPhone1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b218]"></a>AgreePhone</STRONG> (ARM, 76 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AgreePhone
</UL>
<BR>[Called By]<UL><LI><a href="#[145b1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreePhone1
</UL>

<P><STRONG><a name="[145b1d0]"></a>AgreePhone1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AgreePhone1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreePhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b188]"></a>CloseCall</STRONG> (ARM, 48 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CloseCall
</UL>
<BR>[Called By]<UL><LI><a href="#[145b140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseCall1
</UL>

<P><STRONG><a name="[145b140]"></a>CloseCall1</STRONG> (ARM, 56 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CloseCall1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseCall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b0f8]"></a>SendMessage</STRONG> (ARM, 328 bytes, Stack size 448 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[145b0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage1
</UL>

<P><STRONG><a name="[145b0b0]"></a>SendMessage1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = SendMessage1 &rArr; SendMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b068]"></a>SendIP1</STRONG> (ARM, 80 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SendIP1 &rArr; SendIP
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145bd58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145b020]"></a>SendPhone</STRONG> (ARM, 288 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SendPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[145afd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPhone1
</UL>

<P><STRONG><a name="[145afd8]"></a>SendPhone1</STRONG> (ARM, 72 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SendPhone1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145b020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[145af90]"></a>SetVolume</STRONG> (ARM, 160 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetVolume
</UL>
<BR>[Called By]<UL><LI><a href="#[145af48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVolume1
</UL>

<P><STRONG><a name="[145af48]"></a>SetVolume1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SetVolume1 &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[145af90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVolume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.constdata)
</UL>
<P><STRONG><a name="[1457730]"></a>JugeEvent</STRONG> (ARM, 516 bytes, Stack size 24 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[14576a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14576e8]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14576a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14576a0]"></a>Task</STRONG> (ARM, 288 bytes, Stack size 24 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[14576e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
<LI><a href="#[1457730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeEvent
</UL>

<P><STRONG><a name="[1457658]"></a>Init</STRONG> (ARM, 100 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[1457610]"></a>SeekSpace</STRONG> (ARM, 60 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[14575c8]"></a>Open</STRONG> (ARM, 160 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1457610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[1457580]"></a>Close</STRONG> (ARM, 80 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[1457538]"></a>Read</STRONG> (ARM, 80 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Read &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[14574f0]"></a>Enable</STRONG> (ARM, 108 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Enable &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[14574a8]"></a>DisEnable</STRONG> (ARM, 108 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DisEnable &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[1457460]"></a>GetEnable</STRONG> (ARM, 112 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetEnable &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[1457418]"></a>GetPro</STRONG> (ARM, 116 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetPro &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[14573d0]"></a>EditPro</STRONG> (ARM, 132 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EditPro &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.constdata)
</UL>
<P><STRONG><a name="[1454468]"></a>CheckSum</STRONG> (ARM, 48 bytes, Stack size 0 bytes, photo.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1454420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPhoto
</UL>

<P><STRONG><a name="[1454420]"></a>ReadPhoto</STRONG> (ARM, 488 bytes, Stack size 48 bytes, photo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1454468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[1454390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo
</UL>

<P><STRONG><a name="[14543d8]"></a>PhotoCommon</STRONG> (ARM, 456 bytes, Stack size 64 bytes, photo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[1454390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo
</UL>

<P><STRONG><a name="[1454390]"></a>Photo</STRONG> (ARM, 360 bytes, Stack size 552 bytes, photo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14543d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhotoCommon
<LI><a href="#[1454420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPhoto
</UL>
<BR>[Called By]<UL><LI><a href="#[1454348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[1454348]"></a>Task</STRONG> (ARM, 152 bytes, Stack size 16 bytes, photo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c78ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[c7b6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[1454390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo
</UL>

<P><STRONG><a name="[1454300]"></a>Init</STRONG> (ARM, 156 bytes, Stack size 8 bytes, photo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c790d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> photo.o(.constdata)
</UL>
<P><STRONG><a name="[14542b8]"></a>Open</STRONG> (ARM, 72 bytes, Stack size 16 bytes, photo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> photo.o(.constdata)
</UL>
<P><STRONG><a name="[1454270]"></a>Close</STRONG> (ARM, 56 bytes, Stack size 8 bytes, photo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> photo.o(.constdata)
</UL>
<P><STRONG><a name="[1451168]"></a>JugeEvent</STRONG> (ARM, 276 bytes, Stack size 24 bytes, gpsandmileage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[1451090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[1451120]"></a>CountMileage</STRONG> (ARM, 52 bytes, Stack size 16 bytes, gpsandmileage.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1451090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[14510d8]"></a>ReadGpsData</STRONG> (ARM, 132 bytes, Stack size 24 bytes, gpsandmileage.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1451090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[1451090]"></a>Task</STRONG> (ARM, 264 bytes, Stack size 32 bytes, gpsandmileage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[14510d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGpsData
<LI><a href="#[1451120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountMileage
<LI><a href="#[1451168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeEvent
</UL>

<P><STRONG><a name="[1451048]"></a>Init</STRONG> (ARM, 152 bytes, Stack size 8 bytes, gpsandmileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpsandmileage.o(.constdata)
</UL>
<P><STRONG><a name="[1451000]"></a>Open</STRONG> (ARM, 216 bytes, Stack size 24 bytes, gpsandmileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpsandmileage.o(.constdata)
</UL>
<P><STRONG><a name="[1450fb8]"></a>Close</STRONG> (ARM, 80 bytes, Stack size 16 bytes, gpsandmileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpsandmileage.o(.constdata)
</UL>
<P><STRONG><a name="[1450f70]"></a>Get</STRONG> (ARM, 80 bytes, Stack size 16 bytes, gpsandmileage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Get &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpsandmileage.o(.constdata)
</UL>
<P><STRONG><a name="[1556a68]"></a>Explain_Par</STRONG> (ARM, 2128 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_Par
</UL>
<BR>[Called By]<UL><LI><a href="#[1556900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_SetPar
</UL>

<P><STRONG><a name="[1556a20]"></a>Explain_WorkPar</STRONG> (ARM, 3652 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_WorkPar
</UL>
<BR>[Called By]<UL><LI><a href="#[15563a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_SetWaringTerm
<LI><a href="#[1556510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_SetVidType
</UL>

<P><STRONG><a name="[15569d8]"></a>Explain</STRONG> (ARM, 136 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556990]"></a>Explain_Answer</STRONG> (ARM, 80 bytes, Stack size 4 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Explain_Answer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556948]"></a>Explain_Track</STRONG> (ARM, 104 bytes, Stack size 4 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Explain_Track
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556900]"></a>Explain_SetPar</STRONG> (ARM, 184 bytes, Stack size 40 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Explain_SetPar &rArr; Explain_Par
</UL>
<BR>[Calls]<UL><LI><a href="#[1556a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Par
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[15568b8]"></a>Explain_AmendMenum</STRONG> (ARM, 240 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_AmendMenum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556870]"></a>Explain_LoaderTxt</STRONG> (ARM, 92 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_LoaderTxt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556828]"></a>Explain_LoaderTxtMenum</STRONG> (ARM, 280 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_LoaderTxtMenum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[15567e0]"></a>Explain_SetPhone</STRONG> (ARM, 276 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_SetPhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556798]"></a>Explain_CallAnswer</STRONG> (ARM, 92 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_CallAnswer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556750]"></a>Explain_UpdateSoftWare</STRONG> (ARM, 356 bytes, Stack size 48 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Explain_UpdateSoftWare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556708]"></a>Explain_LookPar</STRONG> (ARM, 212 bytes, Stack size 16 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Explain_LookPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[15566c0]"></a>Explain_Contrl</STRONG> (ARM, 88 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_Contrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556678]"></a>Explain_ConfineCall</STRONG> (ARM, 108 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_ConfineCall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556630]"></a>Explain_ConfigCentrSever</STRONG> (ARM, 188 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_ConfigCentrSever
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[15565a0]"></a>Explain_LookJpg</STRONG> (ARM, 340 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_LookJpg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556558]"></a>Explain_JpgIng</STRONG> (ARM, 68 bytes, Stack size 4 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Explain_JpgIng
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556510]"></a>Explain_SetVidType</STRONG> (ARM, 204 bytes, Stack size 48 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = Explain_SetVidType &rArr; Explain_WorkPar
</UL>
<BR>[Calls]<UL><LI><a href="#[1556a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar
<LI><a href="#[1873560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[15564c8]"></a>Explain_TabelList</STRONG> (ARM, 696 bytes, Stack size 56 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Explain_TabelList
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556480]"></a>Explain_WorkParTimer</STRONG> (ARM, 144 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_WorkParTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556438]"></a>Explain_WorkParSpace</STRONG> (ARM, 92 bytes, Stack size 4 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Explain_WorkParSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[15563f0]"></a>Explain_LookLog</STRONG> (ARM, 128 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_LookLog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[15563a8]"></a>Explain_SetWaringTerm</STRONG> (ARM, 204 bytes, Stack size 48 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = Explain_SetWaringTerm &rArr; Explain_WorkPar
</UL>
<BR>[Calls]<UL><LI><a href="#[1556a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar
<LI><a href="#[1873560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556360]"></a>Explain_SetRound</STRONG> (ARM, 512 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_SetRound
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556318]"></a>Explain_DelRound</STRONG> (ARM, 104 bytes, Stack size 16 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Explain_DelRound
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[15562d0]"></a>Explain_SetRectangle</STRONG> (ARM, 532 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_SetRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556288]"></a>Explain_DelRectangle</STRONG> (ARM, 104 bytes, Stack size 16 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Explain_DelRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556240]"></a>Explain_SetPolygon</STRONG> (ARM, 372 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_SetPolygon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[15561f8]"></a>Explain_DelPolygon</STRONG> (ARM, 104 bytes, Stack size 16 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Explain_DelPolygon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[15561b0]"></a>Explain_SetRoadMap</STRONG> (ARM, 400 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_SetRoadMap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556168]"></a>Explain_DelRoadMap</STRONG> (ARM, 104 bytes, Stack size 16 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Explain_DelRoadMap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556120]"></a>Explain_Reduce</STRONG> (ARM, 120 bytes, Stack size 4 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Explain_Reduce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[15560d8]"></a>Explain_Driver</STRONG> (ARM, 244 bytes, Stack size 40 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Explain_Driver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556090]"></a>Explain_Navigation</STRONG> (ARM, 388 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_Navigation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556048]"></a>Explain_HandTxt</STRONG> (ARM, 80 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_HandTxt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1556000]"></a>Explain_HandAttemper</STRONG> (ARM, 248 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_HandAttemper
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1555fb8]"></a>Explain_AmendForm</STRONG> (ARM, 192 bytes, Stack size 32 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Explain_AmendForm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1555f70]"></a>Explain_UpLoaderForm</STRONG> (ARM, 188 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_UpLoaderForm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1555f28]"></a>Explain_UpLoaderFormSuc</STRONG> (ARM, 184 bytes, Stack size 24 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_UpLoaderFormSuc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1555ee0]"></a>Explain_UpLoaderFormErro</STRONG> (ARM, 44 bytes, Stack size 4 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Explain_UpLoaderFormErro
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1555e98]"></a>Explain_UpLoaderCan</STRONG> (ARM, 44 bytes, Stack size 4 bytes, tz_agreen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Explain_UpLoaderCan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_agreen.o(.constdata)
</UL>
<P><STRONG><a name="[1552680]"></a>Explain_Par</STRONG> (ARM, 5892 bytes, Stack size 40 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Explain_Par &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[1873560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[15520e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_LookPar
</UL>

<P><STRONG><a name="[1552638]"></a>Explain_WorkPar</STRONG> (ARM, 2988 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Explain_WorkPar &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1551fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UploaderJpg2
<LI><a href="#[1552050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Waring
</UL>

<P><STRONG><a name="[15525f0]"></a>Explain_WorkPar1</STRONG> (ARM, 4180 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Explain_WorkPar1 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1551f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UploaderPar
<LI><a href="#[1552290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpPar
</UL>

<P><STRONG><a name="[15525a8]"></a>Explain_WorkPar2</STRONG> (ARM, 6676 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Explain_WorkPar2 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1551ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderWarning
</UL>

<P><STRONG><a name="[1552560]"></a>Expain_VidType2LessAddree</STRONG> (ARM, 168 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1552050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Waring
</UL>

<P><STRONG><a name="[1552518]"></a>Gps2CenGps_Timer</STRONG> (ARM, 76 bytes, Stack size 16 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Gps2CenGps_Timer
</UL>
<BR>[Called By]<UL><LI><a href="#[1552368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps
</UL>

<P><STRONG><a name="[15524d0]"></a>Gps2CenGps_Height</STRONG> (ARM, 100 bytes, Stack size 16 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Gps2CenGps_Height
</UL>
<BR>[Calls]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1552368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps
</UL>

<P><STRONG><a name="[1552488]"></a>Gps2CenGps_Angle</STRONG> (ARM, 36 bytes, Stack size 16 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1552368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps
</UL>

<P><STRONG><a name="[1552440]"></a>Gps2CenGps_Speed</STRONG> (ARM, 16 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1552368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps
</UL>

<P><STRONG><a name="[15523f8]"></a>Gps2CenGps_LongHem</STRONG> (ARM, 44 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1552368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps
</UL>

<P><STRONG><a name="[15523b0]"></a>Gps2CenGps_Latitude</STRONG> (ARM, 44 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1552368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps
</UL>

<P><STRONG><a name="[1552368]"></a>Gps2CenGps</STRONG> (ARM, 92 bytes, Stack size 16 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[15523b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_Latitude
<LI><a href="#[15523f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_LongHem
<LI><a href="#[1552440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_Speed
<LI><a href="#[1552488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_Angle
<LI><a href="#[15524d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_Height
<LI><a href="#[1552518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps_Timer
</UL>
<BR>[Called By]<UL><LI><a href="#[1552200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
</UL>

<P><STRONG><a name="[1552320]"></a>Gps2ReduceGps_Height</STRONG> (ARM, 116 bytes, Stack size 16 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Gps2ReduceGps_Height &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1551e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderReduce
</UL>

<P><STRONG><a name="[15522d8]"></a>Explain_state</STRONG> (ARM, 132 bytes, Stack size 16 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Explain_state
</UL>
<BR>[Called By]<UL><LI><a href="#[1551e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderReduce
</UL>

<P><STRONG><a name="[1552290]"></a>Explain_UpPar</STRONG> (ARM, 176 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Explain_UpPar &rArr; Explain_WorkPar1 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15525f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar1
</UL>
<BR>[Called By]<UL><LI><a href="#[1551e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderReduce
</UL>

<P><STRONG><a name="[1552248]"></a>Explain</STRONG> (ARM, 152 bytes, Stack size 24 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1552200]"></a>Explain_GetSeverComPar</STRONG> (ARM, 180 bytes, Stack size 40 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[1552368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2CenGps
</UL>
<BR>[Called By]<UL><LI><a href="#[1551d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_NoSem
<LI><a href="#[1551dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderHandMess
<LI><a href="#[1551e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderDriver
<LI><a href="#[1551e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderReduce
<LI><a href="#[1551ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_OutRoadMap
<LI><a href="#[1551f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UploaderPar
<LI><a href="#[1551fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UploaderJpg2
<LI><a href="#[1552008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UploaderJpg1
<LI><a href="#[1552050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Waring
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15521b8]"></a>Explain_Answer</STRONG> (ARM, 88 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1552170]"></a>Explain_Menum</STRONG> (ARM, 116 bytes, Stack size 24 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_Menum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1552128]"></a>Explain_TxtMenum</STRONG> (ARM, 136 bytes, Stack size 24 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Explain_TxtMenum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[15520e0]"></a>Explain_LookPar</STRONG> (ARM, 248 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = Explain_LookPar &rArr; Explain_Par &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1552680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_Par
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1552098]"></a>Explain_UpdateSoftWare</STRONG> (ARM, 28 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1552050]"></a>Explain_Waring</STRONG> (ARM, 660 bytes, Stack size 40 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = Explain_Waring &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[1552200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
<LI><a href="#[1552560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Expain_VidType2LessAddree
<LI><a href="#[1552638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1552008]"></a>Explain_UploaderJpg1</STRONG> (ARM, 228 bytes, Stack size 24 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Explain_UploaderJpg1 &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[1552200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1551fc0]"></a>Explain_UploaderJpg2</STRONG> (ARM, 316 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Explain_UploaderJpg2 &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[1552200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
<LI><a href="#[1552638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1551f78]"></a>Explain_UploaderPar</STRONG> (ARM, 220 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Explain_UploaderPar &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[1552200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
<LI><a href="#[15525f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar1
</UL>
<BR>[Called By]<UL><LI><a href="#[1551e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpLoaderReduce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1551f30]"></a>Explain_UploaderLog</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1551ee8]"></a>Explain_UpLoaderWarning</STRONG> (ARM, 204 bytes, Stack size 40 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Explain_UpLoaderWarning &rArr; Explain_WorkPar2 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15525a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_WorkPar2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1551ea0]"></a>Explain_OutRoadMap</STRONG> (ARM, 136 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Explain_OutRoadMap &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[1552200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1551e58]"></a>Explain_UpLoaderReduce</STRONG> (ARM, 1668 bytes, Stack size 360 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = Explain_UpLoaderReduce &rArr; Explain_UploaderPar &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[1551f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UploaderPar
<LI><a href="#[1552200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
<LI><a href="#[1552290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_UpPar
<LI><a href="#[15522d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_state
<LI><a href="#[1552320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps2ReduceGps_Height
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1551e10]"></a>Explain_UpLoaderDriver</STRONG> (ARM, 180 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Explain_UpLoaderDriver &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[1552200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1551dc8]"></a>Explain_UpLoaderHandMess</STRONG> (ARM, 368 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Explain_UpLoaderHandMess &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[1552200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1551d80]"></a>Explain_NoSem</STRONG> (ARM, 336 bytes, Stack size 32 bytes, tz_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Explain_NoSem &rArr; Explain_GetSeverComPar &rArr; Gps2CenGps &rArr; Gps2CenGps_Angle
</UL>
<BR>[Calls]<UL><LI><a href="#[1552200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explain_GetSeverComPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1551d38]"></a>Explain_UpLoaderFrom</STRONG> (ARM, 48 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1551cf0]"></a>Explain_OverFromErro</STRONG> (ARM, 56 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[1551ca8]"></a>Explain_PriceData</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tz_send.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tz_send.o(.constdata)
</UL>
<P><STRONG><a name="[154dfc8]"></a>Read1</STRONG> (ARM, 520 bytes, Stack size 48 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Read1
</UL>
<BR>[Called By]<UL><LI><a href="#[154de18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
<LI><a href="#[154df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[154df80]"></a>Task</STRONG> (ARM, 184 bytes, Stack size 16 bytes, tzv2.1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[154dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>

<P><STRONG><a name="[154df38]"></a>Init</STRONG> (ARM, 164 bytes, Stack size 8 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tzv2.1.o(.constdata)
</UL>
<P><STRONG><a name="[154def0]"></a>Open1</STRONG> (ARM, 184 bytes, Stack size 24 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Open1
</UL>
<BR>[Called By]<UL><LI><a href="#[154dea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[154dea8]"></a>Open</STRONG> (ARM, 80 bytes, Stack size 24 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Open &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[154def0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tzv2.1.o(.constdata)
</UL>
<P><STRONG><a name="[154de60]"></a>Close</STRONG> (ARM, 80 bytes, Stack size 16 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Close &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tzv2.1.o(.constdata)
</UL>
<P><STRONG><a name="[154de18]"></a>Read</STRONG> (ARM, 72 bytes, Stack size 24 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Read &rArr; Read1
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[154dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tzv2.1.o(.constdata)
</UL>
<P><STRONG><a name="[154ddd0]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[154dd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
<LI><a href="#[154dd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSig
</UL>

<P><STRONG><a name="[154dd88]"></a>WriteSig</STRONG> (ARM, 1084 bytes, Stack size 80 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = WriteSig &rArr; GetTimeAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[154ddd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[154dd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
</UL>

<P><STRONG><a name="[154dd40]"></a>Write1</STRONG> (ARM, 244 bytes, Stack size 40 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Write1 &rArr; WriteSig &rArr; GetTimeAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[154dd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSig
<LI><a href="#[154ddd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[154dcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[154dcf8]"></a>Write</STRONG> (ARM, 112 bytes, Stack size 24 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Write &rArr; Write1 &rArr; WriteSig &rArr; GetTimeAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[154dd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tzv2.1.o(.constdata)
</UL>
<P><STRONG><a name="[154dcb0]"></a>GetPar2ID</STRONG> (ARM, 152 bytes, Stack size 24 bytes, tzv2.1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetPar2ID &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tzv2.1.o(.constdata)
</UL>
<P><STRONG><a name="[14ab870]"></a>Init</STRONG> (ARM, 244 bytes, Stack size 0 bytes, _nandflash512.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14ab828]"></a>ReadData</STRONG> (ARM, 104 bytes, Stack size 0 bytes, _nandflash512.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14ab5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMwrPg
<LI><a href="#[14ab5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ease
<LI><a href="#[14ab630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeBuf
<LI><a href="#[14ab678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeByte
<LI><a href="#[14ab708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMrdPg517
<LI><a href="#[14ab798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadID
</UL>

<P><STRONG><a name="[14ab7e0]"></a>WriteData</STRONG> (ARM, 112 bytes, Stack size 0 bytes, _nandflash512.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14ab5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMwrPg
<LI><a href="#[14ab5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ease
<LI><a href="#[14ab750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dzflash
<LI><a href="#[14ab798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadID
</UL>

<P><STRONG><a name="[14ab798]"></a>ReadID</STRONG> (ARM, 544 bytes, Stack size 12 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ReadID
</UL>
<BR>[Calls]<UL><LI><a href="#[14ab7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[14ab828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14ab750]"></a>dzflash</STRONG> (ARM, 612 bytes, Stack size 24 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dzflash
</UL>
<BR>[Calls]<UL><LI><a href="#[14ab7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[14ab5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMwrPg
<LI><a href="#[14ab630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeBuf
<LI><a href="#[14ab678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeByte
<LI><a href="#[14ab708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMrdPg517
</UL>

<P><STRONG><a name="[14ab708]"></a>FMrdPg517</STRONG> (ARM, 180 bytes, Stack size 28 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FMrdPg517 &rArr; dzflash
</UL>
<BR>[Calls]<UL><LI><a href="#[14ab750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dzflash
<LI><a href="#[14ab828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[14ab6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookBad
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14ab6c0]"></a>LookBad</STRONG> (ARM, 168 bytes, Stack size 24 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = LookBad &rArr; FMrdPg517 &rArr; dzflash
</UL>
<BR>[Calls]<UL><LI><a href="#[14ab708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMrdPg517
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14ab678]"></a>JugeByte</STRONG> (ARM, 256 bytes, Stack size 28 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = JugeByte &rArr; dzflash
</UL>
<BR>[Calls]<UL><LI><a href="#[14ab750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dzflash
<LI><a href="#[14ab828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14ab630]"></a>JugeBuf</STRONG> (ARM, 260 bytes, Stack size 28 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = JugeBuf &rArr; dzflash
</UL>
<BR>[Calls]<UL><LI><a href="#[14ab750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dzflash
<LI><a href="#[14ab828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14ab5e8]"></a>Ease</STRONG> (ARM, 676 bytes, Stack size 16 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Ease
</UL>
<BR>[Calls]<UL><LI><a href="#[14ab7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[14ab828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14ab5a0]"></a>FMwrPg</STRONG> (ARM, 328 bytes, Stack size 32 bytes, _nandflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FMwrPg &rArr; dzflash
</UL>
<BR>[Calls]<UL><LI><a href="#[14ab750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dzflash
<LI><a href="#[14ab7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[14ab828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _nandflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14a9628]"></a>Init</STRONG> (ARM, 28 bytes, Stack size 8 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14a95e0]"></a>CE_High</STRONG> (ARM, 40 bytes, Stack size 0 bytes, _spiflash512.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.text)
</UL>
<P><STRONG><a name="[14a9598]"></a>CE_Low</STRONG> (ARM, 40 bytes, Stack size 0 bytes, _spiflash512.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.text)
</UL>
<P><STRONG><a name="[14a9550]"></a>ReadID</STRONG> (ARM, 120 bytes, Stack size 16 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14a9508]"></a>JugeByte</STRONG> (ARM, 180 bytes, Stack size 40 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = JugeByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14a94c0]"></a>JugeBuf</STRONG> (ARM, 180 bytes, Stack size 40 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = JugeBuf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14a9478]"></a>ReadStatus</STRONG> (ARM, 116 bytes, Stack size 8 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[14a9430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatusOutTime
</UL>

<P><STRONG><a name="[14a9430]"></a>ReadStatusOutTime</STRONG> (ARM, 72 bytes, Stack size 16 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[14a9478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[14a92c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOpen
<LI><a href="#[14a9310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[14a9358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteStatus
<LI><a href="#[14a93a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteClose
<LI><a href="#[14a93e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDisable
</UL>

<P><STRONG><a name="[14a93e8]"></a>WriteDisable</STRONG> (ARM, 164 bytes, Stack size 24 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WriteDisable &rArr; ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[14a9430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatusOutTime
</UL>
<BR>[Called By]<UL><LI><a href="#[14a93a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteClose
</UL>

<P><STRONG><a name="[14a93a0]"></a>WriteClose</STRONG> (ARM, 80 bytes, Stack size 16 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WriteClose &rArr; WriteDisable &rArr; ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[14a93e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDisable
<LI><a href="#[14a9430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatusOutTime
</UL>
<BR>[Called By]<UL><LI><a href="#[14a9238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
<LI><a href="#[14a9280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ease
</UL>

<P><STRONG><a name="[14a9358]"></a>WriteStatus</STRONG> (ARM, 172 bytes, Stack size 24 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WriteStatus &rArr; ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[14a9430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatusOutTime
</UL>
<BR>[Called By]<UL><LI><a href="#[14a92c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOpen
</UL>

<P><STRONG><a name="[14a9310]"></a>WriteEnable</STRONG> (ARM, 164 bytes, Stack size 24 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WriteEnable &rArr; ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[14a9430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatusOutTime
</UL>
<BR>[Called By]<UL><LI><a href="#[14a92c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOpen
</UL>

<P><STRONG><a name="[14a92c8]"></a>WriteOpen</STRONG> (ARM, 160 bytes, Stack size 16 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WriteOpen &rArr; WriteEnable &rArr; ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[14a9310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[14a9358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteStatus
<LI><a href="#[14a9430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatusOutTime
</UL>
<BR>[Called By]<UL><LI><a href="#[14a9238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
<LI><a href="#[14a9280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ease
</UL>

<P><STRONG><a name="[14a9280]"></a>Ease</STRONG> (ARM, 156 bytes, Stack size 24 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Ease &rArr; WriteOpen &rArr; WriteEnable &rArr; ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[14a92c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOpen
<LI><a href="#[14a93a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14a9238]"></a>Write</STRONG> (ARM, 192 bytes, Stack size 40 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Write &rArr; WriteOpen &rArr; WriteEnable &rArr; ReadStatusOutTime &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[14a92c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOpen
<LI><a href="#[14a93a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14a91f0]"></a>Read</STRONG> (ARM, 176 bytes, Stack size 40 bytes, _spiflash512.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _spiflash512.o(.constdata)
</UL>
<P><STRONG><a name="[14a7078]"></a>CreatBad</STRONG> (ARM, 212 bytes, Stack size 40 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = CreatBad
</UL>
<BR>[Calls]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14a7030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatFlash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _flash.o(.constdata)
</UL>
<P><STRONG><a name="[14a7030]"></a>FormatFlash</STRONG> (ARM, 504 bytes, Stack size 40 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = FormatFlash &rArr; CreatBad
</UL>
<BR>[Calls]<UL><LI><a href="#[14a7078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatBad
<LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14a6fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _flash.o(.constdata)
</UL>
<P><STRONG><a name="[14a6fe8]"></a>CompareBuf</STRONG> (ARM, 64 bytes, Stack size 4 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CompareBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[14a6fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open
</UL>

<P><STRONG><a name="[14a6fa0]"></a>Open</STRONG> (ARM, 240 bytes, Stack size 32 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = Open &rArr; FormatFlash &rArr; CreatBad
</UL>
<BR>[Calls]<UL><LI><a href="#[14a6fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareBuf
<LI><a href="#[14a7030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatFlash
<LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _flash.o(.constdata)
</UL>
<P><STRONG><a name="[14a6f58]"></a>JugeFlash</STRONG> (ARM, 184 bytes, Stack size 48 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = JugeFlash
</UL>
<BR>[Calls]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _flash.o(.constdata)
</UL>
<P><STRONG><a name="[14a6f10]"></a>WriteFlash</STRONG> (ARM, 244 bytes, Stack size 48 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = WriteFlash
</UL>
<BR>[Calls]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _flash.o(.constdata)
</UL>
<P><STRONG><a name="[14a6ec8]"></a>ReadFlash</STRONG> (ARM, 188 bytes, Stack size 48 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = ReadFlash
</UL>
<BR>[Calls]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _flash.o(.constdata)
</UL>
<P><STRONG><a name="[14a6e80]"></a>EaseFlash</STRONG> (ARM, 60 bytes, Stack size 16 bytes, _flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = EaseFlash
</UL>
<BR>[Calls]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _flash.o(.constdata)
</UL>
<P><STRONG><a name="[14a4e40]"></a>Open</STRONG> (ARM, 116 bytes, Stack size 8 bytes, _rwflashlgc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwflashlgc.o(.constdata)
</UL>
<P><STRONG><a name="[14a4df8]"></a>Lgc2Phy</STRONG> (ARM, 204 bytes, Stack size 24 bytes, _rwflashlgc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lgc2Phy
</UL>
<BR>[Called By]<UL><LI><a href="#[14a4c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ease
<LI><a href="#[14a4cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlock
<LI><a href="#[14a4db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read
</UL>

<P><STRONG><a name="[14a4db0]"></a>Read</STRONG> (ARM, 352 bytes, Stack size 40 bytes, _rwflashlgc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = Read &rArr; Lgc2Phy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a4df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lgc2Phy
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwflashlgc.o(.constdata)
</UL>
<P><STRONG><a name="[14a4d68]"></a>MoveByte</STRONG> (ARM, 36 bytes, Stack size 0 bytes, _rwflashlgc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14a4d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyBlock
</UL>

<P><STRONG><a name="[14a4d20]"></a>CopyBlock</STRONG> (ARM, 596 bytes, Stack size 56 bytes, _rwflashlgc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CopyBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[14a4d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[14a4cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlock
</UL>

<P><STRONG><a name="[14a4cd8]"></a>WriteBlock</STRONG> (ARM, 540 bytes, Stack size 48 bytes, _rwflashlgc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WriteBlock &rArr; CopyBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[14a4d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyBlock
<LI><a href="#[14a4df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lgc2Phy
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14a4c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write
</UL>

<P><STRONG><a name="[14a4c90]"></a>Write</STRONG> (ARM, 260 bytes, Stack size 32 bytes, _rwflashlgc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = Write &rArr; WriteBlock &rArr; CopyBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[14a4cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlock
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwflashlgc.o(.constdata)
</UL>
<P><STRONG><a name="[14a4c48]"></a>Ease</STRONG> (ARM, 212 bytes, Stack size 16 bytes, _rwflashlgc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = Ease &rArr; Lgc2Phy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a4df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lgc2Phy
<LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _rwflashlgc.o(.constdata)
</UL>
<P><STRONG><a name="[14a19b8]"></a>BackFacFile</STRONG> (ARM, 188 bytes, Stack size 16 bytes, _filedata.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14a0068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileData_CheckFile
<LI><a href="#[14a00b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileData_BackSet
</UL>

<P><STRONG><a name="[149ddc0]"></a>ReadFlow</STRONG> (ARM, 196 bytes, Stack size 32 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadFlow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149dd78]"></a>SendReduceData</STRONG> (ARM, 284 bytes, Stack size 104 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SendReduceData
</UL>
<BR>[Called By]<UL><LI><a href="#[149dc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
</UL>

<P><STRONG><a name="[149dd30]"></a>ReadDataFlow</STRONG> (ARM, 92 bytes, Stack size 16 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadDataFlow
</UL>
<BR>[Called By]<UL><LI><a href="#[149dce8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadParTable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149dce8]"></a>ReadParTable</STRONG> (ARM, 96 bytes, Stack size 288 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ReadParTable &rArr; ReadDataFlow
</UL>
<BR>[Calls]<UL><LI><a href="#[149dd30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFlow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149dca0]"></a>JugeReduceLen</STRONG> (ARM, 156 bytes, Stack size 88 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = JugeReduceLen &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[18729b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[149dc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
</UL>

<P><STRONG><a name="[149dc58]"></a>JugeReduceData</STRONG> (ARM, 264 bytes, Stack size 360 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = JugeReduceData
</UL>
<BR>[Called By]<UL><LI><a href="#[149dc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
</UL>

<P><STRONG><a name="[149dc10]"></a>WriteFlow</STRONG> (ARM, 496 bytes, Stack size 112 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = WriteFlow &rArr; JugeReduceData
</UL>
<BR>[Calls]<UL><LI><a href="#[149dc58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeReduceData
<LI><a href="#[149dca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeReduceLen
<LI><a href="#[149dd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendReduceData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149dbc8]"></a>GetFlowWaringType</STRONG> (ARM, 100 bytes, Stack size 32 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetFlowWaringType
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149db80]"></a>ReadSpace</STRONG> (ARM, 92 bytes, Stack size 24 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149db38]"></a>AddSpace</STRONG> (ARM, 332 bytes, Stack size 64 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = AddSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149daf0]"></a>GetPhonesSize</STRONG> (ARM, 244 bytes, Stack size 536 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = GetPhonesSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149daa8]"></a>GetPhoneCut</STRONG> (ARM, 380 bytes, Stack size 552 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = GetPhoneCut
</UL>
<BR>[Calls]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149da60]"></a>WritePhone</STRONG> (ARM, 204 bytes, Stack size 32 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WritePhone &rArr; OSMboxDel &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[c7b778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
<LI><a href="#[c7b7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149da18]"></a>ClearState</STRONG> (ARM, 164 bytes, Stack size 104 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ClearState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149d9d0]"></a>GetState</STRONG> (ARM, 140 bytes, Stack size 104 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149d988]"></a>SetState</STRONG> (ARM, 164 bytes, Stack size 104 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149d940]"></a>GetAreaData</STRONG> (ARM, 404 bytes, Stack size 328 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GetAreaData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149d8f8]"></a>JugeID</STRONG> (ARM, 68 bytes, Stack size 0 bytes, takedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[149d868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelAear
<LI><a href="#[149d8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccessAear
</UL>

<P><STRONG><a name="[149d8b0]"></a>AccessAear</STRONG> (ARM, 492 bytes, Stack size 328 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = AccessAear
</UL>
<BR>[Calls]<UL><LI><a href="#[149d8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[149d868]"></a>DelAear</STRONG> (ARM, 260 bytes, Stack size 320 bytes, takedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = DelAear
</UL>
<BR>[Calls]<UL><LI><a href="#[149d8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> takedata.o(.constdata)
</UL>
<P><STRONG><a name="[1499288]"></a>GetPar</STRONG> (ARM, 3776 bytes, Stack size 1288 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = GetPar
</UL>
<BR>[Called By]<UL><LI><a href="#[1498af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookPar
</UL>

<P><STRONG><a name="[1499240]"></a>Init</STRONG> (ARM, 72 bytes, Stack size 8 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c78348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[14991f8]"></a>SendLogin</STRONG> (ARM, 32 bytes, Stack size 8 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SendLogin
</UL>
<BR>[Called By]<UL><LI><a href="#[1498ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[1498ce8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
<LI><a href="#[1498e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend
</UL>

<P><STRONG><a name="[14991b0]"></a>UpLoaderDriverExplain</STRONG> (ARM, 336 bytes, Stack size 1368 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = UpLoaderDriverExplain
</UL>
<BR>[Called By]<UL><LI><a href="#[1499168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemDriver
</UL>

<P><STRONG><a name="[1499168]"></a>NoSemDriver</STRONG> (ARM, 752 bytes, Stack size 56 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = NoSemDriver &rArr; UpLoaderDriverExplain
</UL>
<BR>[Calls]<UL><LI><a href="#[14991b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderDriverExplain
</UL>
<BR>[Called By]<UL><LI><a href="#[1498ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend1
</UL>

<P><STRONG><a name="[1499120]"></a>LoaderJpgData</STRONG> (ARM, 460 bytes, Stack size 320 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = LoaderJpgData
</UL>
<BR>[Calls]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14988f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderJpHistory
<LI><a href="#[14990d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemJpgData
</UL>

<P><STRONG><a name="[14990d8]"></a>NoSemJpgData</STRONG> (ARM, 664 bytes, Stack size 152 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = NoSemJpgData &rArr; LoaderJpgData
</UL>
<BR>[Calls]<UL><LI><a href="#[1499120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoaderJpgData
</UL>
<BR>[Called By]<UL><LI><a href="#[1498ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend1
</UL>

<P><STRONG><a name="[1499090]"></a>UpLoaderReduce</STRONG> (ARM, 104 bytes, Stack size 96 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = UpLoaderReduce
</UL>
<BR>[Called By]<UL><LI><a href="#[14988b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderLog_Par
<LI><a href="#[1499048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemReduce
</UL>

<P><STRONG><a name="[1499048]"></a>NoSemReduce</STRONG> (ARM, 816 bytes, Stack size 160 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = NoSemReduce &rArr; UpLoaderReduce
</UL>
<BR>[Calls]<UL><LI><a href="#[1499090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderReduce
</UL>
<BR>[Called By]<UL><LI><a href="#[1498ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend1
</UL>

<P><STRONG><a name="[1499000]"></a>WorkParDataExpalin</STRONG> (ARM, 148 bytes, Stack size 544 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = WorkParDataExpalin
</UL>
<BR>[Called By]<UL><LI><a href="#[14988b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderLog_Par
<LI><a href="#[1498fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemWorkPar
</UL>

<P><STRONG><a name="[1498fb8]"></a>NoSemWorkPar</STRONG> (ARM, 864 bytes, Stack size 160 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = NoSemWorkPar &rArr; WorkParDataExpalin
</UL>
<BR>[Calls]<UL><LI><a href="#[1499000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorkParDataExpalin
</UL>
<BR>[Called By]<UL><LI><a href="#[1498ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend1
</UL>

<P><STRONG><a name="[1498f70]"></a>TrackDataExplain</STRONG> (ARM, 92 bytes, Stack size 288 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = TrackDataExplain
</UL>
<BR>[Called By]<UL><LI><a href="#[14988b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderLog_Par
<LI><a href="#[1498f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemTrack
</UL>

<P><STRONG><a name="[1498f28]"></a>NoSemTrack</STRONG> (ARM, 804 bytes, Stack size 160 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = NoSemTrack &rArr; TrackDataExplain
</UL>
<BR>[Calls]<UL><LI><a href="#[1498f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackDataExplain
</UL>
<BR>[Called By]<UL><LI><a href="#[1498ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend1
</UL>

<P><STRONG><a name="[1498ee0]"></a>NoSemSend1</STRONG> (ARM, 96 bytes, Stack size 8 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1432 + Unknown Stack Size
<LI>Call Chain = NoSemSend1 &rArr; NoSemDriver &rArr; UpLoaderDriverExplain
</UL>
<BR>[Calls]<UL><LI><a href="#[1498f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemTrack
<LI><a href="#[1498fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemWorkPar
<LI><a href="#[1499048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemReduce
<LI><a href="#[14990d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemJpgData
<LI><a href="#[1499168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1498e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend
</UL>

<P><STRONG><a name="[1498e98]"></a>NoSemSend</STRONG> (ARM, 100 bytes, Stack size 16 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1448 + Unknown Stack Size
<LI>Call Chain = NoSemSend &rArr; NoSemSend1 &rArr; NoSemDriver &rArr; UpLoaderDriverExplain
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1498ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoSemSend1
<LI><a href="#[14991f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498e50]"></a>Send</STRONG> (ARM, 164 bytes, Stack size 24 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Send
</UL>
<BR>[Called By]<UL><LI><a href="#[1498ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[1498dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
<LI><a href="#[1498e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadJpg
</UL>

<P><STRONG><a name="[1498e08]"></a>LoadJpg</STRONG> (ARM, 268 bytes, Stack size 120 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LoadJpg &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[1498e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Called By]<UL><LI><a href="#[1498dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
</UL>

<P><STRONG><a name="[1498dc0]"></a>SendData</STRONG> (ARM, 304 bytes, Stack size 24 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SendData &rArr; LoadJpg &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[1498e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadJpg
<LI><a href="#[1498e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Called By]<UL><LI><a href="#[1498d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow2
</UL>

<P><STRONG><a name="[1498d78]"></a>WriteFlow1</STRONG> (ARM, 200 bytes, Stack size 128 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WriteFlow1
</UL>
<BR>[Called By]<UL><LI><a href="#[1498d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow2
</UL>

<P><STRONG><a name="[1498d30]"></a>WriteFlow2</STRONG> (ARM, 228 bytes, Stack size 24 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WriteFlow2 &rArr; SendData &rArr; LoadJpg &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[1498d78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow1
<LI><a href="#[1498dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[1498ce8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow
</UL>

<P><STRONG><a name="[1498ce8]"></a>WriteFlow</STRONG> (ARM, 136 bytes, Stack size 24 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WriteFlow &rArr; WriteFlow2 &rArr; SendData &rArr; LoadJpg &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1498d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlow2
<LI><a href="#[14991f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498ca0]"></a>WriteCommand</STRONG> (ARM, 128 bytes, Stack size 24 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WriteCommand &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1498e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
<LI><a href="#[14991f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498c58]"></a>Answer</STRONG> (ARM, 168 bytes, Stack size 48 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Answer &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[c78270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[c782b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498c10]"></a>LogInfor</STRONG> (ARM, 56 bytes, Stack size 16 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LogInfor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498bc8]"></a>Orientation</STRONG> (ARM, 120 bytes, Stack size 296 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Orientation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498b80]"></a>Menum</STRONG> (ARM, 56 bytes, Stack size 16 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Menum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498b38]"></a>TxtMenum</STRONG> (ARM, 56 bytes, Stack size 16 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TxtMenum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498af0]"></a>LookPar</STRONG> (ARM, 152 bytes, Stack size 32 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = LookPar &rArr; GetPar
</UL>
<BR>[Calls]<UL><LI><a href="#[1499288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498aa8]"></a>UpdateSoftWare</STRONG> (ARM, 56 bytes, Stack size 16 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpdateSoftWare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498a60]"></a>Waring</STRONG> (ARM, 388 bytes, Stack size 304 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = Waring
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498a18]"></a>UploaderJpg1</STRONG> (ARM, 464 bytes, Stack size 312 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = UploaderJpg1
</UL>
<BR>[Calls]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[14989d0]"></a>UploaderJpg2Sig</STRONG> (ARM, 416 bytes, Stack size 312 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = UploaderJpg2Sig
</UL>
<BR>[Calls]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[1873560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1498988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploaderJpg2
</UL>

<P><STRONG><a name="[1498988]"></a>UploaderJpg2</STRONG> (ARM, 432 bytes, Stack size 56 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = UploaderJpg2 &rArr; UploaderJpg2Sig
</UL>
<BR>[Calls]<UL><LI><a href="#[14989d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploaderJpg2Sig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498940]"></a>UploaderPar</STRONG> (ARM, 152 bytes, Stack size 296 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = UploaderPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[14988f8]"></a>UpLoaderJpHistory</STRONG> (ARM, 184 bytes, Stack size 48 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = UpLoaderJpHistory &rArr; LoaderJpgData
</UL>
<BR>[Calls]<UL><LI><a href="#[1499120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoaderJpgData
</UL>
<BR>[Called By]<UL><LI><a href="#[1498868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploaderLog
</UL>

<P><STRONG><a name="[14988b0]"></a>UpLoaderLog_Par</STRONG> (ARM, 684 bytes, Stack size 72 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = UpLoaderLog_Par &rArr; WorkParDataExpalin
</UL>
<BR>[Calls]<UL><LI><a href="#[1498f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackDataExplain
<LI><a href="#[1499000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorkParDataExpalin
<LI><a href="#[1499090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderReduce
</UL>
<BR>[Called By]<UL><LI><a href="#[1498868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploaderLog
</UL>

<P><STRONG><a name="[1498868]"></a>UploaderLog</STRONG> (ARM, 68 bytes, Stack size 16 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = UploaderLog &rArr; UpLoaderLog_Par &rArr; WorkParDataExpalin
</UL>
<BR>[Calls]<UL><LI><a href="#[14988b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderLog_Par
<LI><a href="#[14988f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpLoaderJpHistory
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498820]"></a>UpLoaderWarning</STRONG> (ARM, 104 bytes, Stack size 24 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UpLoaderWarning
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[14987d8]"></a>OutRoadMap</STRONG> (ARM, 184 bytes, Stack size 328 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = OutRoadMap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498790]"></a>UpLoaderReduce1</STRONG> (ARM, 100 bytes, Stack size 24 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UpLoaderReduce1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498748]"></a>UpLoaderDriver</STRONG> (ARM, 348 bytes, Stack size 1288 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = UpLoaderDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1498700]"></a>UpLoaderHandMess</STRONG> (ARM, 180 bytes, Stack size 24 bytes, appsendagreeon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UpLoaderHandMess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appsendagreeon.o(.constdata)
</UL>
<P><STRONG><a name="[1493380]"></a>SetPar</STRONG> (ARM, 4052 bytes, Stack size 392 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = SetPar
</UL>
<BR>[Called By]<UL><LI><a href="#[1493260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPar1
</UL>

<P><STRONG><a name="[1493338]"></a>AgreeData</STRONG> (ARM, 136 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AgreeData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[14932f0]"></a>Orientation</STRONG> (ARM, 80 bytes, Stack size 32 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Orientation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[14932a8]"></a>Track</STRONG> (ARM, 148 bytes, Stack size 120 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Track
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1493260]"></a>SetPar1</STRONG> (ARM, 316 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = SetPar1 &rArr; SetPar
</UL>
<BR>[Calls]<UL><LI><a href="#[1493380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1493218]"></a>UnlockWaring</STRONG> (ARM, 160 bytes, Stack size 120 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = UnlockWaring
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[14931d0]"></a>AmendMenum</STRONG> (ARM, 304 bytes, Stack size 72 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = AmendMenum
</UL>
<BR>[Calls]<UL><LI><a href="#[1873560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1493188]"></a>LoaderTxt</STRONG> (ARM, 52 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LoaderTxt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1493140]"></a>LoaderTxtMenum</STRONG> (ARM, 52 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LoaderTxtMenum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[14930f8]"></a>SetPhone</STRONG> (ARM, 268 bytes, Stack size 56 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = SetPhone
</UL>
<BR>[Calls]<UL><LI><a href="#[1873560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[14930b0]"></a>CallAnswer</STRONG> (ARM, 280 bytes, Stack size 64 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CallAnswer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1493068]"></a>UpdateSoftWare</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpdateSoftWare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1493020]"></a>LookPar</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LookPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492fd8]"></a>Contrl</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Contrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492f90]"></a>ConfineCall</STRONG> (ARM, 148 bytes, Stack size 120 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ConfineCall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492f48]"></a>ConfigCentrSever</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ConfigCentrSever
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492f00]"></a>Activation</STRONG> (ARM, 4 bytes, Stack size 0 bytes, appgprs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492eb8]"></a>LookJpg</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LookJpg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492e70]"></a>JpgIng</STRONG> (ARM, 4 bytes, Stack size 0 bytes, appgprs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492e28]"></a>SetVidType</STRONG> (ARM, 128 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetVidType
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492de0]"></a>TabelList</STRONG> (ARM, 4 bytes, Stack size 0 bytes, appgprs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492d98]"></a>LookWorkPar</STRONG> (ARM, 156 bytes, Stack size 280 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LookWorkPar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492d50]"></a>WorkParTimer</STRONG> (ARM, 80 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WorkParTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492d08]"></a>WorkParSpace</STRONG> (ARM, 116 bytes, Stack size 120 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WorkParSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492cc0]"></a>LookLog</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LookLog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492c78]"></a>SetWaringTerm</STRONG> (ARM, 80 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetWaringTerm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492c30]"></a>LookWaringTerm</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LookWaringTerm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492be8]"></a>SetRound</STRONG> (ARM, 152 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetRound
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492ba0]"></a>DelRound</STRONG> (ARM, 108 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DelRound
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492b58]"></a>SetRectangle</STRONG> (ARM, 148 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492b10]"></a>DelRectangle</STRONG> (ARM, 108 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DelRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492ac8]"></a>SetPolygon</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetPolygon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492a80]"></a>DelPolygon</STRONG> (ARM, 108 bytes, Stack size 24 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DelPolygon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492a38]"></a>SetRoadMap</STRONG> (ARM, 124 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetRoadMap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[14929f0]"></a>DelRoadMap</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DelRoadMap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[14929a8]"></a>Reduce</STRONG> (ARM, 140 bytes, Stack size 96 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Reduce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492960]"></a>Driver</STRONG> (ARM, 80 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Driver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492918]"></a>Navigation</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Navigation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[14928d0]"></a>HandTxt</STRONG> (ARM, 340 bytes, Stack size 1288 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = HandTxt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492888]"></a>HandAttemper</STRONG> (ARM, 496 bytes, Stack size 1488 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1488<LI>Call Chain = HandAttemper
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492840]"></a>AmendForm</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AmendForm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[14927f8]"></a>UpLoaderForm</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpLoaderForm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[14927b0]"></a>UpLoaderFormSuc</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpLoaderFormSuc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492768]"></a>UpLoaderFormErro</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpLoaderFormErro
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[1492720]"></a>UpLoaderCan</STRONG> (ARM, 48 bytes, Stack size 16 bytes, appgprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpLoaderCan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgprs.o(.constdata)
</UL>
<P><STRONG><a name="[148d578]"></a>Init</STRONG> (ARM, 808 bytes, Stack size 464 bytes, opensensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opensensor.o(.constdata)
</UL>
<P><STRONG><a name="[14886f0]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[14886a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
</UL>

<P><STRONG><a name="[14886a8]"></a>GetData</STRONG> (ARM, 600 bytes, Stack size 240 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GetData &rArr; GetTimeAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[14886f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[14884f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOper
</UL>

<P><STRONG><a name="[1488660]"></a>JugeTimerPar</STRONG> (ARM, 176 bytes, Stack size 16 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = JugeTimerPar
</UL>
<BR>[Called By]<UL><LI><a href="#[14884f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOper
</UL>

<P><STRONG><a name="[1488618]"></a>AccClose</STRONG> (ARM, 588 bytes, Stack size 16 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AccClose
</UL>
<BR>[Called By]<UL><LI><a href="#[14884f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOper
</UL>

<P><STRONG><a name="[14885d0]"></a>AccTimer</STRONG> (ARM, 120 bytes, Stack size 16 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AccTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[1488588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOpen
</UL>

<P><STRONG><a name="[1488588]"></a>AccOpen</STRONG> (ARM, 236 bytes, Stack size 16 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AccOpen &rArr; AccTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[14885d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[14884f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOper
</UL>

<P><STRONG><a name="[1488540]"></a>AccStateChange</STRONG> (ARM, 324 bytes, Stack size 120 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = AccStateChange
</UL>
<BR>[Called By]<UL><LI><a href="#[14884f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOper
</UL>

<P><STRONG><a name="[14884f8]"></a>AccOper</STRONG> (ARM, 224 bytes, Stack size 16 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = AccOper &rArr; GetData &rArr; GetTimeAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1488540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccStateChange
<LI><a href="#[1488588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOpen
<LI><a href="#[1488618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccClose
<LI><a href="#[1488660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeTimerPar
<LI><a href="#[14886a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> accoper.o(.constdata)
</UL>
<P><STRONG><a name="[14884b0]"></a>OpenGps</STRONG> (ARM, 28 bytes, Stack size 8 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OpenGps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> accoper.o(.constdata)
</UL>
<P><STRONG><a name="[1488468]"></a>OpenGprs</STRONG> (ARM, 28 bytes, Stack size 8 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OpenGprs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> accoper.o(.constdata)
</UL>
<P><STRONG><a name="[1488420]"></a>CloseGps</STRONG> (ARM, 28 bytes, Stack size 8 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CloseGps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> accoper.o(.constdata)
</UL>
<P><STRONG><a name="[14883d8]"></a>CloseGprs</STRONG> (ARM, 28 bytes, Stack size 8 bytes, accoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CloseGprs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> accoper.o(.constdata)
</UL>
<P><STRONG><a name="[1482ad8]"></a>Init</STRONG> (ARM, 184 bytes, Stack size 32 bytes, appagreedatasensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appagreedatasensor.o(.constdata)
</UL>
<P><STRONG><a name="[1482a90]"></a>HelpWaring</STRONG> (ARM, 280 bytes, Stack size 120 bytes, appagreedatasensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HelpWaring
</UL>
<BR>[Called By]<UL><LI><a href="#[1482898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
</UL>

<P><STRONG><a name="[1482a48]"></a>JugeVo</STRONG> (ARM, 540 bytes, Stack size 120 bytes, appagreedatasensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = JugeVo
</UL>
<BR>[Called By]<UL><LI><a href="#[14829b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoCheck
</UL>

<P><STRONG><a name="[1482a00]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, appagreedatasensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[14829b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoCheck
</UL>

<P><STRONG><a name="[14829b8]"></a>VoCheck</STRONG> (ARM, 72 bytes, Stack size 24 bytes, appagreedatasensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = VoCheck &rArr; JugeVo
</UL>
<BR>[Calls]<UL><LI><a href="#[1482a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
<LI><a href="#[1482a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeVo
</UL>
<BR>[Called By]<UL><LI><a href="#[1482898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
</UL>

<P><STRONG><a name="[1482970]"></a>Jugeuint16</STRONG> (ARM, 80 bytes, Stack size 0 bytes, appagreedatasensor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1482898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
</UL>

<P><STRONG><a name="[1482928]"></a>Jugeint32</STRONG> (ARM, 80 bytes, Stack size 0 bytes, appagreedatasensor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1482898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
</UL>

<P><STRONG><a name="[14828e0]"></a>Jugeuint8</STRONG> (ARM, 80 bytes, Stack size 0 bytes, appagreedatasensor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1482898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData
</UL>

<P><STRONG><a name="[1482898]"></a>GetData</STRONG> (ARM, 244 bytes, Stack size 24 bytes, appagreedatasensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GetData &rArr; VoCheck &rArr; JugeVo
</UL>
<BR>[Calls]<UL><LI><a href="#[14828e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Jugeuint8
<LI><a href="#[1482928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Jugeint32
<LI><a href="#[1482970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Jugeuint16
<LI><a href="#[14829b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoCheck
<LI><a href="#[1482a90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HelpWaring
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appagreedatasensor.o(.constdata)
</UL>
<P><STRONG><a name="[17caff8]"></a>InitSpace</STRONG> (ARM, 364 bytes, Stack size 128 bytes, space.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = InitSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> space.o(.constdata)
</UL>
<P><STRONG><a name="[17cafb0]"></a>JugeSpeed</STRONG> (ARM, 608 bytes, Stack size 120 bytes, space.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = JugeSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[17caf20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGps
</UL>

<P><STRONG><a name="[17caf68]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, space.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[17caf20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGps
</UL>

<P><STRONG><a name="[17caf20]"></a>GetGps</STRONG> (ARM, 492 bytes, Stack size 64 bytes, space.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GetGps &rArr; JugeSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[17caf68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
<LI><a href="#[17cafb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[17cae90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Space_WorkParSpace
<LI><a href="#[17caed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Space_Track
</UL>
<BR>[Address Reference Count : 1]<UL><LI> space.o(.constdata)
</UL>
<P><STRONG><a name="[17caed8]"></a>Space_Track</STRONG> (ARM, 72 bytes, Stack size 16 bytes, space.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Space_Track &rArr; GetGps &rArr; JugeSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[17caf20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> space.o(.constdata)
</UL>
<P><STRONG><a name="[17cae90]"></a>Space_WorkParSpace</STRONG> (ARM, 72 bytes, Stack size 16 bytes, space.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Space_WorkParSpace &rArr; GetGps &rArr; JugeSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[17caf20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> space.o(.constdata)
</UL>
<P><STRONG><a name="[17c7448]"></a>Warning</STRONG> (ARM, 388 bytes, Stack size 24 bytes, jugeoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Warning
</UL>
<BR>[Called By]<UL><LI><a href="#[17c7400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeAppair
</UL>

<P><STRONG><a name="[17c7400]"></a>JugeAppair</STRONG> (ARM, 312 bytes, Stack size 360 bytes, jugeoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = JugeAppair &rArr; Warning
</UL>
<BR>[Calls]<UL><LI><a href="#[17c7448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning
</UL>
<BR>[Called By]<UL><LI><a href="#[17c73b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juge
</UL>

<P><STRONG><a name="[17c73b8]"></a>Juge</STRONG> (ARM, 184 bytes, Stack size 16 bytes, jugeoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = Juge &rArr; JugeAppair &rArr; Warning
</UL>
<BR>[Calls]<UL><LI><a href="#[17c7400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeAppair
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jugeoper.o(.constdata)
</UL>
<P><STRONG><a name="[17c3710]"></a>JugeGpsState</STRONG> (ARM, 172 bytes, Stack size 16 bytes, warningupate.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17c35a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[17c36c8]"></a>LoadWaringJugeWorkParState</STRONG> (ARM, 140 bytes, Stack size 0 bytes, warningupate.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17c35f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeWorkPar
</UL>

<P><STRONG><a name="[17c3680]"></a>LoadWaringJugeWorkPar</STRONG> (ARM, 76 bytes, Stack size 0 bytes, warningupate.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17c35f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeWorkPar
</UL>

<P><STRONG><a name="[17c3638]"></a>SendWarning</STRONG> (ARM, 236 bytes, Stack size 16 bytes, warningupate.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17c35f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeWorkPar
</UL>

<P><STRONG><a name="[17c35f0]"></a>JugeWorkPar</STRONG> (ARM, 300 bytes, Stack size 320 bytes, warningupate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17c3638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendWarning
<LI><a href="#[17c3680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadWaringJugeWorkPar
<LI><a href="#[17c36c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadWaringJugeWorkParState
</UL>
<BR>[Called By]<UL><LI><a href="#[17c35a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[17c35a8]"></a>Task</STRONG> (ARM, 28 bytes, Stack size 8 bytes, warningupate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[17c35f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeWorkPar
<LI><a href="#[17c3710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeGpsState
</UL>

<P><STRONG><a name="[17c3560]"></a>Init</STRONG> (ARM, 32 bytes, Stack size 8 bytes, warningupate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> warningupate.o(.constdata)
</UL>
<P><STRONG><a name="[17bec80]"></a>Init</STRONG> (ARM, 60 bytes, Stack size 8 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[17bec38]"></a>GetData</STRONG> (ARM, 104 bytes, Stack size 24 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[17bebf0]"></a>Answer</STRONG> (ARM, 116 bytes, Stack size 32 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Answer
</UL>
<BR>[Called By]<UL><LI><a href="#[17bea40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voic
<LI><a href="#[17bead0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPar
<LI><a href="#[17beba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Order_Phone
</UL>

<P><STRONG><a name="[17beba8]"></a>Order_Phone</STRONG> (ARM, 440 bytes, Stack size 40 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Order_Phone &rArr; Answer
</UL>
<BR>[Calls]<UL><LI><a href="#[17bebf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Answer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[17beb60]"></a>GetCentrIP</STRONG> (ARM, 144 bytes, Stack size 112 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GetCentrIP
</UL>
<BR>[Called By]<UL><LI><a href="#[17beb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeePar
</UL>

<P><STRONG><a name="[17beb18]"></a>SeePar</STRONG> (ARM, 800 bytes, Stack size 560 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = SeePar &rArr; GetCentrIP
</UL>
<BR>[Calls]<UL><LI><a href="#[17beb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCentrIP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[17bead0]"></a>SetPar</STRONG> (ARM, 528 bytes, Stack size 552 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = SetPar &rArr; Answer
</UL>
<BR>[Calls]<UL><LI><a href="#[17bebf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Answer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[17bea88]"></a>Log</STRONG> (ARM, 192 bytes, Stack size 24 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Log
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[17bea40]"></a>Voic</STRONG> (ARM, 84 bytes, Stack size 16 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Voic &rArr; Answer
</UL>
<BR>[Calls]<UL><LI><a href="#[17bebf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Answer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[17be9f8]"></a>LCDRef</STRONG> (ARM, 556 bytes, Stack size 200 bytes, displayoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = LCDRef
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displayoper.o(.constdata)
</UL>
<P><STRONG><a name="[1819d50]"></a>Init</STRONG> (ARM, 200 bytes, Stack size 40 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Init &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[18733b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messageandphone.o(.constdata)
</UL>
<P><STRONG><a name="[1819d08]"></a>AgreePhone</STRONG> (ARM, 216 bytes, Stack size 48 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AgreePhone
</UL>
<BR>[Called By]<UL><LI><a href="#[1819b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptFunNewPhone
<LI><a href="#[1819cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptFunHupWork
</UL>

<P><STRONG><a name="[1819cc0]"></a>ptFunHupWork</STRONG> (ARM, 28 bytes, Stack size 8 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ptFunHupWork &rArr; AgreePhone
</UL>
<BR>[Calls]<UL><LI><a href="#[1819d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreePhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messageandphone.o(.constdata)
</UL>
<P><STRONG><a name="[1819c78]"></a>NewMessage</STRONG> (ARM, 548 bytes, Stack size 1504 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1504<LI>Call Chain = NewMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messageandphone.o(.constdata)
</UL>
<P><STRONG><a name="[1819c30]"></a>JugePhone</STRONG> (ARM, 208 bytes, Stack size 120 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = JugePhone
</UL>
<BR>[Called By]<UL><LI><a href="#[1819b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptFunNewPhone
</UL>

<P><STRONG><a name="[1819be8]"></a>JugeDriver</STRONG> (ARM, 1520 bytes, Stack size 1448 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1448<LI>Call Chain = JugeDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1819b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptFunNewPhone
</UL>

<P><STRONG><a name="[1819ba0]"></a>ConsPhone</STRONG> (ARM, 452 bytes, Stack size 160 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ConsPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[1819b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptFunNewPhone
</UL>

<P><STRONG><a name="[1819b58]"></a>BasicPhone</STRONG> (ARM, 244 bytes, Stack size 48 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BasicPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[1819b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptFunNewPhone
</UL>

<P><STRONG><a name="[1819b10]"></a>ptFunNewPhone</STRONG> (ARM, 344 bytes, Stack size 16 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464<LI>Call Chain = ptFunNewPhone &rArr; JugeDriver
</UL>
<BR>[Calls]<UL><LI><a href="#[1819b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicPhone
<LI><a href="#[1819ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsPhone
<LI><a href="#[1819be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugeDriver
<LI><a href="#[1819c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JugePhone
<LI><a href="#[1819d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgreePhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messageandphone.o(.constdata)
</UL>
<P><STRONG><a name="[1819ac8]"></a>CloseCall</STRONG> (ARM, 56 bytes, Stack size 16 bytes, messageandphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CloseCall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messageandphone.o(.constdata)
</UL>
<P><STRONG><a name="[1814d48]"></a>CreartAgreeOn</STRONG> (ARM, 272 bytes, Stack size 456 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1814ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Login
</UL>

<P><STRONG><a name="[1814d00]"></a>CreatDev</STRONG> (ARM, 168 bytes, Stack size 32 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1814ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Login
</UL>

<P><STRONG><a name="[1814cb8]"></a>OpenSev</STRONG> (ARM, 324 bytes, Stack size 528 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1814ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Login
</UL>

<P><STRONG><a name="[1814c70]"></a>GetTimeAdd</STRONG> (ARM, 244 bytes, Stack size 24 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1814be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevPar
<LI><a href="#[1814c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevParSigle
</UL>

<P><STRONG><a name="[1814c28]"></a>GetSevParSigle</STRONG> (ARM, 568 bytes, Stack size 168 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[1814c70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[1814be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevPar
</UL>

<P><STRONG><a name="[1814be0]"></a>GetSevPar</STRONG> (ARM, 204 bytes, Stack size 80 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c81f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDog
<LI><a href="#[1814c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevParSigle
<LI><a href="#[1814c70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[1814ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Login
</UL>

<P><STRONG><a name="[1814b98]"></a>LoginUDP</STRONG> (ARM, 228 bytes, Stack size 112 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1814b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dev_Login
</UL>

<P><STRONG><a name="[1814b50]"></a>Dev_Login</STRONG> (ARM, 112 bytes, Stack size 376 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1814b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoginUDP
</UL>
<BR>[Called By]<UL><LI><a href="#[1814ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Login
</UL>

<P><STRONG><a name="[1814b08]"></a>Dev_APN</STRONG> (ARM, 164 bytes, Stack size 432 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1814ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Login
</UL>

<P><STRONG><a name="[1814ac0]"></a>Login</STRONG> (ARM, 192 bytes, Stack size 64 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1814b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dev_APN
<LI><a href="#[1814b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dev_Login
<LI><a href="#[1814be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSevPar
<LI><a href="#[1814cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSev
<LI><a href="#[1814d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatDev
<LI><a href="#[1814d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreartAgreeOn
</UL>
<BR>[Called By]<UL><LI><a href="#[1814a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task
</UL>

<P><STRONG><a name="[1814a78]"></a>Task</STRONG> (ARM, 628 bytes, Stack size 16 bytes, logonserver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7b6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1814ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Login
</UL>

<P><STRONG><a name="[1814a30]"></a>Init</STRONG> (ARM, 96 bytes, Stack size 8 bytes, logonserver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init &rArr; OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c77628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[c7b7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logonserver.o(.constdata)
</UL>
<P><STRONG><a name="[180d488]"></a>Init</STRONG> (ARM, 188 bytes, Stack size 8 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init &rArr; OSMboxCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[c7b7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[180d440]"></a>OpenGps</STRONG> (ARM, 116 bytes, Stack size 24 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OpenGps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[180d3f8]"></a>CloseGps</STRONG> (ARM, 136 bytes, Stack size 8 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CloseGps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[180d368]"></a>OpenGprsNo</STRONG> (ARM, 64 bytes, Stack size 8 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = OpenGprsNo &rArr; OpenGprs &rArr; ClearSem &rArr; OSMboxPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[180d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenGprs
</UL>
<BR>[Called By]<UL><LI><a href="#[180d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeLogin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[180d320]"></a>ClearSem</STRONG> (ARM, 88 bytes, Stack size 16 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ClearSem &rArr; OSMboxPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c78228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemQuery
<LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>
<BR>[Called By]<UL><LI><a href="#[180d290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGprs
<LI><a href="#[180d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenGprs
</UL>

<P><STRONG><a name="[180d2d8]"></a>OpenGprs</STRONG> (ARM, 192 bytes, Stack size 8 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OpenGprs &rArr; ClearSem &rArr; OSMboxPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7b6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[c7b730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[180d320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Called By]<UL><LI><a href="#[180d368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenGprsNo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[180d290]"></a>CloseGprs</STRONG> (ARM, 124 bytes, Stack size 8 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CloseGprs &rArr; ClearSem &rArr; OSMboxPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c7b6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[180d320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[180d248]"></a>ClearTimer</STRONG> (ARM, 20 bytes, Stack size 0 bytes, openandclose.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[180d200]"></a>OpenUart</STRONG> (ARM, 108 bytes, Stack size 40 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OpenUart &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[18733b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[180d1b8]"></a>ChargeLogin</STRONG> (ARM, 48 bytes, Stack size 16 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ChargeLogin &rArr; OpenGprsNo &rArr; OpenGprs &rArr; ClearSem &rArr; OSMboxPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[180d368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenGprsNo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[180d170]"></a>ChargeLoadDev</STRONG> (ARM, 56 bytes, Stack size 16 bytes, openandclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ChargeLoadDev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> openandclose.o(.constdata)
</UL>
<P><STRONG><a name="[1877760]"></a>Init</STRONG> (ARM, 448 bytes, Stack size 64 bytes, _init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7d328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[14a0068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileData_CheckFile
</UL>

<P><STRONG><a name="[1872ad8]"></a>__arm_div8</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[1872a90]"></a>__arm_div4</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[1872a48]"></a>__arm_div_large</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1872928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[1871330]"></a>_dadd1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18710f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[1871180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[18712e8]"></a>_dsub1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1871180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[1871258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[1870510]"></a>_fadd1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18702d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[18704c8]"></a>_fsub1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1870438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[197c548]"></a>__ARM_exceptions_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c500]"></a>__Heap_DescSize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c4b8]"></a>__alloca_initialize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c470]"></a>__cpp_initialize__aeabi_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c428]"></a>__cxa_finalize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>

<P><STRONG><a name="[18715d8]"></a>__fpl_infinity</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[186c648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN (Weak Reference)
<LI><a href="#[186cc68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt (Weak Reference)
<LI><a href="#[186f888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul (Weak Reference)
<LI><a href="#[186ffb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu (Weak Reference)
<LI><a href="#[18702d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub (Weak Reference)
<LI><a href="#[1870438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd (Weak Reference)
<LI><a href="#[18708f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d (Weak Reference)
<LI><a href="#[1870aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul (Weak Reference)
<LI><a href="#[1870d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv (Weak Reference)
<LI><a href="#[18710f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub (Weak Reference)
<LI><a href="#[1871258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd (Weak Reference)
<LI><a href="#[1871740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f (Weak Reference)
<LI><a href="#[197ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem (Weak Reference)
<LI><a href="#[197b480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix (Weak Reference)
<LI><a href="#[197b7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN (Weak Reference)
<LI><a href="#[197e100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn (Weak Reference)
</UL>

<P><STRONG><a name="[1871b58]"></a>__user_heap_extend</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1871c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_extend (Weak Reference)
</UL>

<P><STRONG><a name="[197c3e0]"></a>_atexit_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197ca58]"></a>_call_atexit_fns</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197cae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (Weak Reference)
</UL>

<P><STRONG><a name="[197c398]"></a>_clock_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c350]"></a>_fp_trap_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c308]"></a>_get_lc_collate</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c2c0]"></a>_get_lc_ctype</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c278]"></a>_get_lc_monetary</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c230]"></a>_get_lc_numeric</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c1e8]"></a>_get_lc_time</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c1a0]"></a>_getenv_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c158]"></a>_init_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c110]"></a>_init_user_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c0c8]"></a>_initio</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197c038]"></a>_signal_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[197bff0]"></a>_terminate_user_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>

<P><STRONG><a name="[197bfa8]"></a>_terminateio</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[197c620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>
<HR></body></html>
